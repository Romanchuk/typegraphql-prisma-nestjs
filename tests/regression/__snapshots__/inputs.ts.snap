// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`inputs should generate proper ScalarWhereWithAggregatesInput for model: SampleScalarWhereWithAggregatesInput 1`] = `
"import { Args, ArgsType, Context, Field, Float, ID, Info, InputType, Int, Mutation, ObjectType, Query, ResolveField, Resolver, Root, registerEnumType } from \\"@nestjs/graphql\\";
import * as GraphQLScalars from \\"graphql-scalars\\";
import { Prisma } from \\"../../../../helpers/prisma-client-mock\\";
import { DecimalJSScalar } from \\"../../scalars\\";
import { BoolWithAggregatesFilter } from \\"../inputs/BoolWithAggregatesFilter\\";
import { DateTimeWithAggregatesFilter } from \\"../inputs/DateTimeWithAggregatesFilter\\";
import { FloatWithAggregatesFilter } from \\"../inputs/FloatWithAggregatesFilter\\";
import { IntWithAggregatesFilter } from \\"../inputs/IntWithAggregatesFilter\\";
import { JsonWithAggregatesFilter } from \\"../inputs/JsonWithAggregatesFilter\\";
import { StringWithAggregatesFilter } from \\"../inputs/StringWithAggregatesFilter\\";

@InputType(\\"SampleScalarWhereWithAggregatesInput\\", {
  isAbstract: true
})
export class SampleScalarWhereWithAggregatesInput {
  @Field(_type => [SampleScalarWhereWithAggregatesInput], {
    nullable: true
  })
  AND?: SampleScalarWhereWithAggregatesInput[] | undefined;

  @Field(_type => [SampleScalarWhereWithAggregatesInput], {
    nullable: true
  })
  OR?: SampleScalarWhereWithAggregatesInput[] | undefined;

  @Field(_type => [SampleScalarWhereWithAggregatesInput], {
    nullable: true
  })
  NOT?: SampleScalarWhereWithAggregatesInput[] | undefined;

  @Field(_type => IntWithAggregatesFilter, {
    nullable: true
  })
  idField?: IntWithAggregatesFilter | undefined;

  @Field(_type => StringWithAggregatesFilter, {
    nullable: true
  })
  stringField?: StringWithAggregatesFilter | undefined;

  @Field(_type => FloatWithAggregatesFilter, {
    nullable: true
  })
  floatField?: FloatWithAggregatesFilter | undefined;

  @Field(_type => IntWithAggregatesFilter, {
    nullable: true
  })
  intField?: IntWithAggregatesFilter | undefined;

  @Field(_type => BoolWithAggregatesFilter, {
    nullable: true
  })
  booleanField?: BoolWithAggregatesFilter | undefined;

  @Field(_type => DateTimeWithAggregatesFilter, {
    nullable: true
  })
  dateField?: DateTimeWithAggregatesFilter | undefined;

  @Field(_type => JsonWithAggregatesFilter, {
    nullable: true
  })
  jsonField?: JsonWithAggregatesFilter | undefined;
}
"
`;

exports[`inputs should generate proper WithAggregatesFilter for scalars: BoolWithAggregatesFilter 1`] = `
"import { Args, ArgsType, Context, Field, Float, ID, Info, InputType, Int, Mutation, ObjectType, Query, ResolveField, Resolver, Root, registerEnumType } from \\"@nestjs/graphql\\";
import * as GraphQLScalars from \\"graphql-scalars\\";
import { Prisma } from \\"../../../../helpers/prisma-client-mock\\";
import { DecimalJSScalar } from \\"../../scalars\\";
import { NestedBoolFilter } from \\"../inputs/NestedBoolFilter\\";
import { NestedBoolWithAggregatesFilter } from \\"../inputs/NestedBoolWithAggregatesFilter\\";
import { NestedIntFilter } from \\"../inputs/NestedIntFilter\\";

@InputType(\\"BoolWithAggregatesFilter\\", {
  isAbstract: true
})
export class BoolWithAggregatesFilter {
  @Field(_type => Boolean, {
    nullable: true
  })
  equals?: boolean | undefined;

  @Field(_type => NestedBoolWithAggregatesFilter, {
    nullable: true
  })
  not?: NestedBoolWithAggregatesFilter | undefined;

  @Field(_type => NestedIntFilter, {
    nullable: true
  })
  _count?: NestedIntFilter | undefined;

  @Field(_type => NestedBoolFilter, {
    nullable: true
  })
  _min?: NestedBoolFilter | undefined;

  @Field(_type => NestedBoolFilter, {
    nullable: true
  })
  _max?: NestedBoolFilter | undefined;
}
"
`;

exports[`inputs should generate proper WithAggregatesFilter for scalars: DateTimeWithAggregatesFilter 1`] = `
"import { Args, ArgsType, Context, Field, Float, ID, Info, InputType, Int, Mutation, ObjectType, Query, ResolveField, Resolver, Root, registerEnumType } from \\"@nestjs/graphql\\";
import * as GraphQLScalars from \\"graphql-scalars\\";
import { Prisma } from \\"../../../../helpers/prisma-client-mock\\";
import { DecimalJSScalar } from \\"../../scalars\\";
import { NestedDateTimeFilter } from \\"../inputs/NestedDateTimeFilter\\";
import { NestedDateTimeWithAggregatesFilter } from \\"../inputs/NestedDateTimeWithAggregatesFilter\\";
import { NestedIntFilter } from \\"../inputs/NestedIntFilter\\";

@InputType(\\"DateTimeWithAggregatesFilter\\", {
  isAbstract: true
})
export class DateTimeWithAggregatesFilter {
  @Field(_type => Date, {
    nullable: true
  })
  equals?: Date | undefined;

  @Field(_type => [Date], {
    nullable: true
  })
  in?: Date[] | undefined;

  @Field(_type => [Date], {
    nullable: true
  })
  notIn?: Date[] | undefined;

  @Field(_type => Date, {
    nullable: true
  })
  lt?: Date | undefined;

  @Field(_type => Date, {
    nullable: true
  })
  lte?: Date | undefined;

  @Field(_type => Date, {
    nullable: true
  })
  gt?: Date | undefined;

  @Field(_type => Date, {
    nullable: true
  })
  gte?: Date | undefined;

  @Field(_type => NestedDateTimeWithAggregatesFilter, {
    nullable: true
  })
  not?: NestedDateTimeWithAggregatesFilter | undefined;

  @Field(_type => NestedIntFilter, {
    nullable: true
  })
  _count?: NestedIntFilter | undefined;

  @Field(_type => NestedDateTimeFilter, {
    nullable: true
  })
  _min?: NestedDateTimeFilter | undefined;

  @Field(_type => NestedDateTimeFilter, {
    nullable: true
  })
  _max?: NestedDateTimeFilter | undefined;
}
"
`;

exports[`inputs should generate proper WithAggregatesFilter for scalars: FloatWithAggregatesFilter 1`] = `
"import { Args, ArgsType, Context, Field, Float, ID, Info, InputType, Int, Mutation, ObjectType, Query, ResolveField, Resolver, Root, registerEnumType } from \\"@nestjs/graphql\\";
import * as GraphQLScalars from \\"graphql-scalars\\";
import { Prisma } from \\"../../../../helpers/prisma-client-mock\\";
import { DecimalJSScalar } from \\"../../scalars\\";
import { NestedFloatFilter } from \\"../inputs/NestedFloatFilter\\";
import { NestedFloatWithAggregatesFilter } from \\"../inputs/NestedFloatWithAggregatesFilter\\";
import { NestedIntFilter } from \\"../inputs/NestedIntFilter\\";

@InputType(\\"FloatWithAggregatesFilter\\", {
  isAbstract: true
})
export class FloatWithAggregatesFilter {
  @Field(_type => Float, {
    nullable: true
  })
  equals?: number | undefined;

  @Field(_type => [Float], {
    nullable: true
  })
  in?: number[] | undefined;

  @Field(_type => [Float], {
    nullable: true
  })
  notIn?: number[] | undefined;

  @Field(_type => Float, {
    nullable: true
  })
  lt?: number | undefined;

  @Field(_type => Float, {
    nullable: true
  })
  lte?: number | undefined;

  @Field(_type => Float, {
    nullable: true
  })
  gt?: number | undefined;

  @Field(_type => Float, {
    nullable: true
  })
  gte?: number | undefined;

  @Field(_type => NestedFloatWithAggregatesFilter, {
    nullable: true
  })
  not?: NestedFloatWithAggregatesFilter | undefined;

  @Field(_type => NestedIntFilter, {
    nullable: true
  })
  _count?: NestedIntFilter | undefined;

  @Field(_type => NestedFloatFilter, {
    nullable: true
  })
  _avg?: NestedFloatFilter | undefined;

  @Field(_type => NestedFloatFilter, {
    nullable: true
  })
  _sum?: NestedFloatFilter | undefined;

  @Field(_type => NestedFloatFilter, {
    nullable: true
  })
  _min?: NestedFloatFilter | undefined;

  @Field(_type => NestedFloatFilter, {
    nullable: true
  })
  _max?: NestedFloatFilter | undefined;
}
"
`;

exports[`inputs should generate proper WithAggregatesFilter for scalars: IntWithAggregatesFilter 1`] = `
"import { Args, ArgsType, Context, Field, Float, ID, Info, InputType, Int, Mutation, ObjectType, Query, ResolveField, Resolver, Root, registerEnumType } from \\"@nestjs/graphql\\";
import * as GraphQLScalars from \\"graphql-scalars\\";
import { Prisma } from \\"../../../../helpers/prisma-client-mock\\";
import { DecimalJSScalar } from \\"../../scalars\\";
import { NestedFloatFilter } from \\"../inputs/NestedFloatFilter\\";
import { NestedIntFilter } from \\"../inputs/NestedIntFilter\\";
import { NestedIntWithAggregatesFilter } from \\"../inputs/NestedIntWithAggregatesFilter\\";

@InputType(\\"IntWithAggregatesFilter\\", {
  isAbstract: true
})
export class IntWithAggregatesFilter {
  @Field(_type => Int, {
    nullable: true
  })
  equals?: number | undefined;

  @Field(_type => [Int], {
    nullable: true
  })
  in?: number[] | undefined;

  @Field(_type => [Int], {
    nullable: true
  })
  notIn?: number[] | undefined;

  @Field(_type => Int, {
    nullable: true
  })
  lt?: number | undefined;

  @Field(_type => Int, {
    nullable: true
  })
  lte?: number | undefined;

  @Field(_type => Int, {
    nullable: true
  })
  gt?: number | undefined;

  @Field(_type => Int, {
    nullable: true
  })
  gte?: number | undefined;

  @Field(_type => NestedIntWithAggregatesFilter, {
    nullable: true
  })
  not?: NestedIntWithAggregatesFilter | undefined;

  @Field(_type => NestedIntFilter, {
    nullable: true
  })
  _count?: NestedIntFilter | undefined;

  @Field(_type => NestedFloatFilter, {
    nullable: true
  })
  _avg?: NestedFloatFilter | undefined;

  @Field(_type => NestedIntFilter, {
    nullable: true
  })
  _sum?: NestedIntFilter | undefined;

  @Field(_type => NestedIntFilter, {
    nullable: true
  })
  _min?: NestedIntFilter | undefined;

  @Field(_type => NestedIntFilter, {
    nullable: true
  })
  _max?: NestedIntFilter | undefined;
}
"
`;

exports[`inputs should generate proper WithAggregatesFilter for scalars: JsonWithAggregatesFilter 1`] = `
"import { Args, ArgsType, Context, Field, Float, ID, Info, InputType, Int, Mutation, ObjectType, Query, ResolveField, Resolver, Root, registerEnumType } from \\"@nestjs/graphql\\";
import * as GraphQLScalars from \\"graphql-scalars\\";
import { Prisma } from \\"../../../../helpers/prisma-client-mock\\";
import { DecimalJSScalar } from \\"../../scalars\\";
import { NestedIntFilter } from \\"../inputs/NestedIntFilter\\";
import { NestedJsonFilter } from \\"../inputs/NestedJsonFilter\\";

@InputType(\\"JsonWithAggregatesFilter\\", {
  isAbstract: true
})
export class JsonWithAggregatesFilter {
  @Field(_type => GraphQLScalars.JSONResolver, {
    nullable: true
  })
  equals?: Prisma.InputJsonValue | undefined;

  @Field(_type => [String], {
    nullable: true
  })
  path?: string[] | undefined;

  @Field(_type => String, {
    nullable: true
  })
  string_contains?: string | undefined;

  @Field(_type => String, {
    nullable: true
  })
  string_starts_with?: string | undefined;

  @Field(_type => String, {
    nullable: true
  })
  string_ends_with?: string | undefined;

  @Field(_type => GraphQLScalars.JSONResolver, {
    nullable: true
  })
  array_contains?: Prisma.InputJsonValue | undefined;

  @Field(_type => GraphQLScalars.JSONResolver, {
    nullable: true
  })
  array_starts_with?: Prisma.InputJsonValue | undefined;

  @Field(_type => GraphQLScalars.JSONResolver, {
    nullable: true
  })
  array_ends_with?: Prisma.InputJsonValue | undefined;

  @Field(_type => GraphQLScalars.JSONResolver, {
    nullable: true
  })
  lt?: Prisma.InputJsonValue | undefined;

  @Field(_type => GraphQLScalars.JSONResolver, {
    nullable: true
  })
  lte?: Prisma.InputJsonValue | undefined;

  @Field(_type => GraphQLScalars.JSONResolver, {
    nullable: true
  })
  gt?: Prisma.InputJsonValue | undefined;

  @Field(_type => GraphQLScalars.JSONResolver, {
    nullable: true
  })
  gte?: Prisma.InputJsonValue | undefined;

  @Field(_type => GraphQLScalars.JSONResolver, {
    nullable: true
  })
  not?: Prisma.InputJsonValue | undefined;

  @Field(_type => NestedIntFilter, {
    nullable: true
  })
  _count?: NestedIntFilter | undefined;

  @Field(_type => NestedJsonFilter, {
    nullable: true
  })
  _min?: NestedJsonFilter | undefined;

  @Field(_type => NestedJsonFilter, {
    nullable: true
  })
  _max?: NestedJsonFilter | undefined;
}
"
`;

exports[`inputs should generate proper WithAggregatesFilter for scalars: StringWithAggregatesFilter 1`] = `
"import { Args, ArgsType, Context, Field, Float, ID, Info, InputType, Int, Mutation, ObjectType, Query, ResolveField, Resolver, Root, registerEnumType } from \\"@nestjs/graphql\\";
import * as GraphQLScalars from \\"graphql-scalars\\";
import { Prisma } from \\"../../../../helpers/prisma-client-mock\\";
import { DecimalJSScalar } from \\"../../scalars\\";
import { NestedIntFilter } from \\"../inputs/NestedIntFilter\\";
import { NestedStringFilter } from \\"../inputs/NestedStringFilter\\";
import { NestedStringWithAggregatesFilter } from \\"../inputs/NestedStringWithAggregatesFilter\\";
import { QueryMode } from \\"../../enums/QueryMode\\";

@InputType(\\"StringWithAggregatesFilter\\", {
  isAbstract: true
})
export class StringWithAggregatesFilter {
  @Field(_type => String, {
    nullable: true
  })
  equals?: string | undefined;

  @Field(_type => [String], {
    nullable: true
  })
  in?: string[] | undefined;

  @Field(_type => [String], {
    nullable: true
  })
  notIn?: string[] | undefined;

  @Field(_type => String, {
    nullable: true
  })
  lt?: string | undefined;

  @Field(_type => String, {
    nullable: true
  })
  lte?: string | undefined;

  @Field(_type => String, {
    nullable: true
  })
  gt?: string | undefined;

  @Field(_type => String, {
    nullable: true
  })
  gte?: string | undefined;

  @Field(_type => String, {
    nullable: true
  })
  contains?: string | undefined;

  @Field(_type => String, {
    nullable: true
  })
  startsWith?: string | undefined;

  @Field(_type => String, {
    nullable: true
  })
  endsWith?: string | undefined;

  @Field(_type => QueryMode, {
    nullable: true
  })
  mode?: \\"default\\" | \\"insensitive\\" | undefined;

  @Field(_type => NestedStringWithAggregatesFilter, {
    nullable: true
  })
  not?: NestedStringWithAggregatesFilter | undefined;

  @Field(_type => NestedIntFilter, {
    nullable: true
  })
  _count?: NestedIntFilter | undefined;

  @Field(_type => NestedStringFilter, {
    nullable: true
  })
  _min?: NestedStringFilter | undefined;

  @Field(_type => NestedStringFilter, {
    nullable: true
  })
  _max?: NestedStringFilter | undefined;
}
"
`;

exports[`inputs should generate proper WithAggregatesFilter for scalars: index 1`] = `
"export { BoolFieldUpdateOperationsInput } from \\"./BoolFieldUpdateOperationsInput\\";
export { BoolFilter } from \\"./BoolFilter\\";
export { BoolWithAggregatesFilter } from \\"./BoolWithAggregatesFilter\\";
export { DateTimeFieldUpdateOperationsInput } from \\"./DateTimeFieldUpdateOperationsInput\\";
export { DateTimeFilter } from \\"./DateTimeFilter\\";
export { DateTimeWithAggregatesFilter } from \\"./DateTimeWithAggregatesFilter\\";
export { FloatFieldUpdateOperationsInput } from \\"./FloatFieldUpdateOperationsInput\\";
export { FloatFilter } from \\"./FloatFilter\\";
export { FloatWithAggregatesFilter } from \\"./FloatWithAggregatesFilter\\";
export { IntFieldUpdateOperationsInput } from \\"./IntFieldUpdateOperationsInput\\";
export { IntFilter } from \\"./IntFilter\\";
export { IntWithAggregatesFilter } from \\"./IntWithAggregatesFilter\\";
export { JsonFilter } from \\"./JsonFilter\\";
export { JsonWithAggregatesFilter } from \\"./JsonWithAggregatesFilter\\";
export { NestedBoolFilter } from \\"./NestedBoolFilter\\";
export { NestedBoolWithAggregatesFilter } from \\"./NestedBoolWithAggregatesFilter\\";
export { NestedDateTimeFilter } from \\"./NestedDateTimeFilter\\";
export { NestedDateTimeWithAggregatesFilter } from \\"./NestedDateTimeWithAggregatesFilter\\";
export { NestedFloatFilter } from \\"./NestedFloatFilter\\";
export { NestedFloatWithAggregatesFilter } from \\"./NestedFloatWithAggregatesFilter\\";
export { NestedIntFilter } from \\"./NestedIntFilter\\";
export { NestedIntWithAggregatesFilter } from \\"./NestedIntWithAggregatesFilter\\";
export { NestedJsonFilter } from \\"./NestedJsonFilter\\";
export { NestedStringFilter } from \\"./NestedStringFilter\\";
export { NestedStringWithAggregatesFilter } from \\"./NestedStringWithAggregatesFilter\\";
export { SampleAvgOrderByAggregateInput } from \\"./SampleAvgOrderByAggregateInput\\";
export { SampleCountOrderByAggregateInput } from \\"./SampleCountOrderByAggregateInput\\";
export { SampleCreateInput } from \\"./SampleCreateInput\\";
export { SampleCreateManyInput } from \\"./SampleCreateManyInput\\";
export { SampleMaxOrderByAggregateInput } from \\"./SampleMaxOrderByAggregateInput\\";
export { SampleMinOrderByAggregateInput } from \\"./SampleMinOrderByAggregateInput\\";
export { SampleOrderByWithAggregationInput } from \\"./SampleOrderByWithAggregationInput\\";
export { SampleOrderByWithRelationInput } from \\"./SampleOrderByWithRelationInput\\";
export { SampleScalarWhereWithAggregatesInput } from \\"./SampleScalarWhereWithAggregatesInput\\";
export { SampleSumOrderByAggregateInput } from \\"./SampleSumOrderByAggregateInput\\";
export { SampleUpdateInput } from \\"./SampleUpdateInput\\";
export { SampleUpdateManyMutationInput } from \\"./SampleUpdateManyMutationInput\\";
export { SampleWhereInput } from \\"./SampleWhereInput\\";
export { SampleWhereUniqueInput } from \\"./SampleWhereUniqueInput\\";
export { StringFieldUpdateOperationsInput } from \\"./StringFieldUpdateOperationsInput\\";
export { StringFilter } from \\"./StringFilter\\";
export { StringWithAggregatesFilter } from \\"./StringWithAggregatesFilter\\";
"
`;

exports[`inputs should properly generate input type class for filtering by enums values: EnumColorFilter 1`] = `
"import { Args, ArgsType, Context, Field, Float, ID, Info, InputType, Int, Mutation, ObjectType, Query, ResolveField, Resolver, Root, registerEnumType } from \\"@nestjs/graphql\\";
import * as GraphQLScalars from \\"graphql-scalars\\";
import { Prisma } from \\"../../../../helpers/prisma-client-mock\\";
import { DecimalJSScalar } from \\"../../scalars\\";
import { NestedEnumColorFilter } from \\"../inputs/NestedEnumColorFilter\\";
import { Color } from \\"../../enums/Color\\";

@InputType(\\"EnumColorFilter\\", {
  isAbstract: true
})
export class EnumColorFilter {
  @Field(_type => Color, {
    nullable: true
  })
  equals?: \\"RED\\" | \\"GREEN\\" | \\"BLUE\\" | undefined;

  @Field(_type => [Color], {
    nullable: true
  })
  in?: Array<\\"RED\\" | \\"GREEN\\" | \\"BLUE\\"> | undefined;

  @Field(_type => [Color], {
    nullable: true
  })
  notIn?: Array<\\"RED\\" | \\"GREEN\\" | \\"BLUE\\"> | undefined;

  @Field(_type => NestedEnumColorFilter, {
    nullable: true
  })
  not?: NestedEnumColorFilter | undefined;
}
"
`;

exports[`inputs should properly generate input type class for filtering by enums values: NestedEnumColorFilter 1`] = `
"import { Args, ArgsType, Context, Field, Float, ID, Info, InputType, Int, Mutation, ObjectType, Query, ResolveField, Resolver, Root, registerEnumType } from \\"@nestjs/graphql\\";
import * as GraphQLScalars from \\"graphql-scalars\\";
import { Prisma } from \\"../../../../helpers/prisma-client-mock\\";
import { DecimalJSScalar } from \\"../../scalars\\";
import { Color } from \\"../../enums/Color\\";

@InputType(\\"NestedEnumColorFilter\\", {
  isAbstract: true
})
export class NestedEnumColorFilter {
  @Field(_type => Color, {
    nullable: true
  })
  equals?: \\"RED\\" | \\"GREEN\\" | \\"BLUE\\" | undefined;

  @Field(_type => [Color], {
    nullable: true
  })
  in?: Array<\\"RED\\" | \\"GREEN\\" | \\"BLUE\\"> | undefined;

  @Field(_type => [Color], {
    nullable: true
  })
  notIn?: Array<\\"RED\\" | \\"GREEN\\" | \\"BLUE\\"> | undefined;

  @Field(_type => NestedEnumColorFilter, {
    nullable: true
  })
  not?: NestedEnumColorFilter | undefined;
}
"
`;

exports[`inputs should properly generate input type class for filtering by enums values: index 1`] = `
"export { EnumColorFieldUpdateOperationsInput } from \\"./EnumColorFieldUpdateOperationsInput\\";
export { EnumColorFilter } from \\"./EnumColorFilter\\";
export { EnumColorWithAggregatesFilter } from \\"./EnumColorWithAggregatesFilter\\";
export { IntFieldUpdateOperationsInput } from \\"./IntFieldUpdateOperationsInput\\";
export { IntFilter } from \\"./IntFilter\\";
export { IntWithAggregatesFilter } from \\"./IntWithAggregatesFilter\\";
export { NestedEnumColorFilter } from \\"./NestedEnumColorFilter\\";
export { NestedEnumColorWithAggregatesFilter } from \\"./NestedEnumColorWithAggregatesFilter\\";
export { NestedFloatFilter } from \\"./NestedFloatFilter\\";
export { NestedIntFilter } from \\"./NestedIntFilter\\";
export { NestedIntWithAggregatesFilter } from \\"./NestedIntWithAggregatesFilter\\";
export { SampleModelAvgOrderByAggregateInput } from \\"./SampleModelAvgOrderByAggregateInput\\";
export { SampleModelCountOrderByAggregateInput } from \\"./SampleModelCountOrderByAggregateInput\\";
export { SampleModelCreateInput } from \\"./SampleModelCreateInput\\";
export { SampleModelCreateManyInput } from \\"./SampleModelCreateManyInput\\";
export { SampleModelMaxOrderByAggregateInput } from \\"./SampleModelMaxOrderByAggregateInput\\";
export { SampleModelMinOrderByAggregateInput } from \\"./SampleModelMinOrderByAggregateInput\\";
export { SampleModelOrderByWithAggregationInput } from \\"./SampleModelOrderByWithAggregationInput\\";
export { SampleModelOrderByWithRelationInput } from \\"./SampleModelOrderByWithRelationInput\\";
export { SampleModelScalarWhereWithAggregatesInput } from \\"./SampleModelScalarWhereWithAggregatesInput\\";
export { SampleModelSumOrderByAggregateInput } from \\"./SampleModelSumOrderByAggregateInput\\";
export { SampleModelUpdateInput } from \\"./SampleModelUpdateInput\\";
export { SampleModelUpdateManyMutationInput } from \\"./SampleModelUpdateManyMutationInput\\";
export { SampleModelWhereInput } from \\"./SampleModelWhereInput\\";
export { SampleModelWhereUniqueInput } from \\"./SampleModelWhereUniqueInput\\";
"
`;

exports[`inputs should properly generate input type classes for connectOrCreate: UserCreateNestedOneWithoutPostsFieldInput 1`] = `
"import { Args, ArgsType, Context, Field, Float, ID, Info, InputType, Int, Mutation, ObjectType, Query, ResolveField, Resolver, Root, registerEnumType } from \\"@nestjs/graphql\\";
import * as GraphQLScalars from \\"graphql-scalars\\";
import { Prisma } from \\"../../../../helpers/prisma-client-mock\\";
import { DecimalJSScalar } from \\"../../scalars\\";
import { UserCreateOrConnectWithoutPostsFieldInput } from \\"../inputs/UserCreateOrConnectWithoutPostsFieldInput\\";
import { UserCreateWithoutPostsFieldInput } from \\"../inputs/UserCreateWithoutPostsFieldInput\\";
import { UserWhereUniqueInput } from \\"../inputs/UserWhereUniqueInput\\";

@InputType(\\"UserCreateNestedOneWithoutPostsFieldInput\\", {
  isAbstract: true
})
export class UserCreateNestedOneWithoutPostsFieldInput {
  @Field(_type => UserCreateWithoutPostsFieldInput, {
    nullable: true
  })
  create?: UserCreateWithoutPostsFieldInput | undefined;

  @Field(_type => UserCreateOrConnectWithoutPostsFieldInput, {
    nullable: true
  })
  connectOrCreate?: UserCreateOrConnectWithoutPostsFieldInput | undefined;

  @Field(_type => UserWhereUniqueInput, {
    nullable: true
  })
  connect?: UserWhereUniqueInput | undefined;
}
"
`;

exports[`inputs should properly generate input type classes for connectOrCreate: UserCreateOrConnectWithoutPostsFieldInput 1`] = `
"import { Args, ArgsType, Context, Field, Float, ID, Info, InputType, Int, Mutation, ObjectType, Query, ResolveField, Resolver, Root, registerEnumType } from \\"@nestjs/graphql\\";
import * as GraphQLScalars from \\"graphql-scalars\\";
import { Prisma } from \\"../../../../helpers/prisma-client-mock\\";
import { DecimalJSScalar } from \\"../../scalars\\";
import { UserCreateWithoutPostsFieldInput } from \\"../inputs/UserCreateWithoutPostsFieldInput\\";
import { UserWhereUniqueInput } from \\"../inputs/UserWhereUniqueInput\\";

@InputType(\\"UserCreateOrConnectWithoutPostsFieldInput\\", {
  isAbstract: true
})
export class UserCreateOrConnectWithoutPostsFieldInput {
  @Field(_type => UserWhereUniqueInput, {
    nullable: false
  })
  where!: UserWhereUniqueInput;

  @Field(_type => UserCreateWithoutPostsFieldInput, {
    nullable: false
  })
  create!: UserCreateWithoutPostsFieldInput;
}
"
`;

exports[`inputs should properly generate input type classes for connectOrCreate: UserUpdateOneRequiredWithoutPostsFieldNestedInput 1`] = `
"import { Args, ArgsType, Context, Field, Float, ID, Info, InputType, Int, Mutation, ObjectType, Query, ResolveField, Resolver, Root, registerEnumType } from \\"@nestjs/graphql\\";
import * as GraphQLScalars from \\"graphql-scalars\\";
import { Prisma } from \\"../../../../helpers/prisma-client-mock\\";
import { DecimalJSScalar } from \\"../../scalars\\";
import { UserCreateOrConnectWithoutPostsFieldInput } from \\"../inputs/UserCreateOrConnectWithoutPostsFieldInput\\";
import { UserCreateWithoutPostsFieldInput } from \\"../inputs/UserCreateWithoutPostsFieldInput\\";
import { UserUpdateWithoutPostsFieldInput } from \\"../inputs/UserUpdateWithoutPostsFieldInput\\";
import { UserUpsertWithoutPostsFieldInput } from \\"../inputs/UserUpsertWithoutPostsFieldInput\\";
import { UserWhereUniqueInput } from \\"../inputs/UserWhereUniqueInput\\";

@InputType(\\"UserUpdateOneRequiredWithoutPostsFieldNestedInput\\", {
  isAbstract: true
})
export class UserUpdateOneRequiredWithoutPostsFieldNestedInput {
  @Field(_type => UserCreateWithoutPostsFieldInput, {
    nullable: true
  })
  create?: UserCreateWithoutPostsFieldInput | undefined;

  @Field(_type => UserCreateOrConnectWithoutPostsFieldInput, {
    nullable: true
  })
  connectOrCreate?: UserCreateOrConnectWithoutPostsFieldInput | undefined;

  @Field(_type => UserUpsertWithoutPostsFieldInput, {
    nullable: true
  })
  upsert?: UserUpsertWithoutPostsFieldInput | undefined;

  @Field(_type => UserWhereUniqueInput, {
    nullable: true
  })
  connect?: UserWhereUniqueInput | undefined;

  @Field(_type => UserUpdateWithoutPostsFieldInput, {
    nullable: true
  })
  update?: UserUpdateWithoutPostsFieldInput | undefined;
}
"
`;

exports[`inputs should properly generate input type classes for creating models and scalar fields: SampleModelCreateInput 1`] = `
"import { Args, ArgsType, Context, Field, Float, ID, Info, InputType, Int, Mutation, ObjectType, Query, ResolveField, Resolver, Root, registerEnumType } from \\"@nestjs/graphql\\";
import * as GraphQLScalars from \\"graphql-scalars\\";
import { Prisma } from \\"../../../../helpers/prisma-client-mock\\";
import { DecimalJSScalar } from \\"../../scalars\\";
import { SampleModelCreateintArrayFieldInput } from \\"../inputs/SampleModelCreateintArrayFieldInput\\";
import { SampleModelCreatestringArrayFieldInput } from \\"../inputs/SampleModelCreatestringArrayFieldInput\\";
import { Color } from \\"../../enums/Color\\";

@InputType(\\"SampleModelCreateInput\\", {
  isAbstract: true
})
export class SampleModelCreateInput {
  @Field(_type => String, {
    nullable: false
  })
  stringField!: string;

  @Field(_type => String, {
    nullable: true
  })
  optionalStringField?: string | undefined;

  @Field(_type => Int, {
    nullable: false
  })
  intField!: number;

  @Field(_type => Int, {
    nullable: true
  })
  optionalIntField?: number | undefined;

  @Field(_type => Float, {
    nullable: false
  })
  floatField!: number;

  @Field(_type => Float, {
    nullable: true
  })
  optionalFloatField?: number | undefined;

  @Field(_type => Boolean, {
    nullable: false
  })
  booleanField!: boolean;

  @Field(_type => Boolean, {
    nullable: true
  })
  optionalBooleanField?: boolean | undefined;

  @Field(_type => Date, {
    nullable: false
  })
  dateField!: Date;

  @Field(_type => Date, {
    nullable: true
  })
  optionalDateField?: Date | undefined;

  @Field(_type => GraphQLScalars.JSONResolver, {
    nullable: false
  })
  jsonField!: Prisma.InputJsonValue;

  @Field(_type => GraphQLScalars.JSONResolver, {
    nullable: true
  })
  optionalJsonField?: Prisma.InputJsonValue | undefined;

  @Field(_type => Color, {
    nullable: false
  })
  enumField!: \\"RED\\" | \\"GREEN\\" | \\"BLUE\\";

  @Field(_type => Color, {
    nullable: true
  })
  optionalEnumField?: \\"RED\\" | \\"GREEN\\" | \\"BLUE\\" | undefined;

  @Field(_type => SampleModelCreateintArrayFieldInput, {
    nullable: true
  })
  intArrayField?: SampleModelCreateintArrayFieldInput | undefined;

  @Field(_type => SampleModelCreatestringArrayFieldInput, {
    nullable: true
  })
  stringArrayField?: SampleModelCreatestringArrayFieldInput | undefined;
}
"
`;

exports[`inputs should properly generate input type classes for creating models and scalar fields: SampleModelCreateManyInput 1`] = `
"import { Args, ArgsType, Context, Field, Float, ID, Info, InputType, Int, Mutation, ObjectType, Query, ResolveField, Resolver, Root, registerEnumType } from \\"@nestjs/graphql\\";
import * as GraphQLScalars from \\"graphql-scalars\\";
import { Prisma } from \\"../../../../helpers/prisma-client-mock\\";
import { DecimalJSScalar } from \\"../../scalars\\";
import { SampleModelCreateintArrayFieldInput } from \\"../inputs/SampleModelCreateintArrayFieldInput\\";
import { SampleModelCreatestringArrayFieldInput } from \\"../inputs/SampleModelCreatestringArrayFieldInput\\";
import { Color } from \\"../../enums/Color\\";

@InputType(\\"SampleModelCreateManyInput\\", {
  isAbstract: true
})
export class SampleModelCreateManyInput {
  @Field(_type => Int, {
    nullable: true
  })
  intIdField?: number | undefined;

  @Field(_type => String, {
    nullable: false
  })
  stringField!: string;

  @Field(_type => String, {
    nullable: true
  })
  optionalStringField?: string | undefined;

  @Field(_type => Int, {
    nullable: false
  })
  intField!: number;

  @Field(_type => Int, {
    nullable: true
  })
  optionalIntField?: number | undefined;

  @Field(_type => Float, {
    nullable: false
  })
  floatField!: number;

  @Field(_type => Float, {
    nullable: true
  })
  optionalFloatField?: number | undefined;

  @Field(_type => Boolean, {
    nullable: false
  })
  booleanField!: boolean;

  @Field(_type => Boolean, {
    nullable: true
  })
  optionalBooleanField?: boolean | undefined;

  @Field(_type => Date, {
    nullable: false
  })
  dateField!: Date;

  @Field(_type => Date, {
    nullable: true
  })
  optionalDateField?: Date | undefined;

  @Field(_type => GraphQLScalars.JSONResolver, {
    nullable: false
  })
  jsonField!: Prisma.InputJsonValue;

  @Field(_type => GraphQLScalars.JSONResolver, {
    nullable: true
  })
  optionalJsonField?: Prisma.InputJsonValue | undefined;

  @Field(_type => Color, {
    nullable: false
  })
  enumField!: \\"RED\\" | \\"GREEN\\" | \\"BLUE\\";

  @Field(_type => Color, {
    nullable: true
  })
  optionalEnumField?: \\"RED\\" | \\"GREEN\\" | \\"BLUE\\" | undefined;

  @Field(_type => SampleModelCreateintArrayFieldInput, {
    nullable: true
  })
  intArrayField?: SampleModelCreateintArrayFieldInput | undefined;

  @Field(_type => SampleModelCreatestringArrayFieldInput, {
    nullable: true
  })
  stringArrayField?: SampleModelCreatestringArrayFieldInput | undefined;
}
"
`;

exports[`inputs should properly generate input type classes for creating models and scalar fields: SampleModelCreateintArrayFieldInput 1`] = `
"import { Args, ArgsType, Context, Field, Float, ID, Info, InputType, Int, Mutation, ObjectType, Query, ResolveField, Resolver, Root, registerEnumType } from \\"@nestjs/graphql\\";
import * as GraphQLScalars from \\"graphql-scalars\\";
import { Prisma } from \\"../../../../helpers/prisma-client-mock\\";
import { DecimalJSScalar } from \\"../../scalars\\";

@InputType(\\"SampleModelCreateintArrayFieldInput\\", {
  isAbstract: true
})
export class SampleModelCreateintArrayFieldInput {
  @Field(_type => [Int], {
    nullable: false
  })
  set!: number[];
}
"
`;

exports[`inputs should properly generate input type classes for creating models and scalar fields: SampleModelCreatestringArrayFieldInput 1`] = `
"import { Args, ArgsType, Context, Field, Float, ID, Info, InputType, Int, Mutation, ObjectType, Query, ResolveField, Resolver, Root, registerEnumType } from \\"@nestjs/graphql\\";
import * as GraphQLScalars from \\"graphql-scalars\\";
import { Prisma } from \\"../../../../helpers/prisma-client-mock\\";
import { DecimalJSScalar } from \\"../../scalars\\";

@InputType(\\"SampleModelCreatestringArrayFieldInput\\", {
  isAbstract: true
})
export class SampleModelCreatestringArrayFieldInput {
  @Field(_type => [String], {
    nullable: false
  })
  set!: string[];
}
"
`;

exports[`inputs should properly generate input type classes for creating models and scalar fields: index 1`] = `
"export { BoolFieldUpdateOperationsInput } from \\"./BoolFieldUpdateOperationsInput\\";
export { BoolFilter } from \\"./BoolFilter\\";
export { BoolNullableFilter } from \\"./BoolNullableFilter\\";
export { BoolNullableWithAggregatesFilter } from \\"./BoolNullableWithAggregatesFilter\\";
export { BoolWithAggregatesFilter } from \\"./BoolWithAggregatesFilter\\";
export { DateTimeFieldUpdateOperationsInput } from \\"./DateTimeFieldUpdateOperationsInput\\";
export { DateTimeFilter } from \\"./DateTimeFilter\\";
export { DateTimeNullableFilter } from \\"./DateTimeNullableFilter\\";
export { DateTimeNullableWithAggregatesFilter } from \\"./DateTimeNullableWithAggregatesFilter\\";
export { DateTimeWithAggregatesFilter } from \\"./DateTimeWithAggregatesFilter\\";
export { EnumColorFieldUpdateOperationsInput } from \\"./EnumColorFieldUpdateOperationsInput\\";
export { EnumColorFilter } from \\"./EnumColorFilter\\";
export { EnumColorNullableFilter } from \\"./EnumColorNullableFilter\\";
export { EnumColorNullableWithAggregatesFilter } from \\"./EnumColorNullableWithAggregatesFilter\\";
export { EnumColorWithAggregatesFilter } from \\"./EnumColorWithAggregatesFilter\\";
export { FloatFieldUpdateOperationsInput } from \\"./FloatFieldUpdateOperationsInput\\";
export { FloatFilter } from \\"./FloatFilter\\";
export { FloatNullableFilter } from \\"./FloatNullableFilter\\";
export { FloatNullableWithAggregatesFilter } from \\"./FloatNullableWithAggregatesFilter\\";
export { FloatWithAggregatesFilter } from \\"./FloatWithAggregatesFilter\\";
export { IntFieldUpdateOperationsInput } from \\"./IntFieldUpdateOperationsInput\\";
export { IntFilter } from \\"./IntFilter\\";
export { IntNullableFilter } from \\"./IntNullableFilter\\";
export { IntNullableListFilter } from \\"./IntNullableListFilter\\";
export { IntNullableWithAggregatesFilter } from \\"./IntNullableWithAggregatesFilter\\";
export { IntWithAggregatesFilter } from \\"./IntWithAggregatesFilter\\";
export { JsonFilter } from \\"./JsonFilter\\";
export { JsonNullableFilter } from \\"./JsonNullableFilter\\";
export { JsonNullableWithAggregatesFilter } from \\"./JsonNullableWithAggregatesFilter\\";
export { JsonWithAggregatesFilter } from \\"./JsonWithAggregatesFilter\\";
export { NestedBoolFilter } from \\"./NestedBoolFilter\\";
export { NestedBoolNullableFilter } from \\"./NestedBoolNullableFilter\\";
export { NestedBoolNullableWithAggregatesFilter } from \\"./NestedBoolNullableWithAggregatesFilter\\";
export { NestedBoolWithAggregatesFilter } from \\"./NestedBoolWithAggregatesFilter\\";
export { NestedDateTimeFilter } from \\"./NestedDateTimeFilter\\";
export { NestedDateTimeNullableFilter } from \\"./NestedDateTimeNullableFilter\\";
export { NestedDateTimeNullableWithAggregatesFilter } from \\"./NestedDateTimeNullableWithAggregatesFilter\\";
export { NestedDateTimeWithAggregatesFilter } from \\"./NestedDateTimeWithAggregatesFilter\\";
export { NestedEnumColorFilter } from \\"./NestedEnumColorFilter\\";
export { NestedEnumColorNullableFilter } from \\"./NestedEnumColorNullableFilter\\";
export { NestedEnumColorNullableWithAggregatesFilter } from \\"./NestedEnumColorNullableWithAggregatesFilter\\";
export { NestedEnumColorWithAggregatesFilter } from \\"./NestedEnumColorWithAggregatesFilter\\";
export { NestedFloatFilter } from \\"./NestedFloatFilter\\";
export { NestedFloatNullableFilter } from \\"./NestedFloatNullableFilter\\";
export { NestedFloatNullableWithAggregatesFilter } from \\"./NestedFloatNullableWithAggregatesFilter\\";
export { NestedFloatWithAggregatesFilter } from \\"./NestedFloatWithAggregatesFilter\\";
export { NestedIntFilter } from \\"./NestedIntFilter\\";
export { NestedIntNullableFilter } from \\"./NestedIntNullableFilter\\";
export { NestedIntNullableWithAggregatesFilter } from \\"./NestedIntNullableWithAggregatesFilter\\";
export { NestedIntWithAggregatesFilter } from \\"./NestedIntWithAggregatesFilter\\";
export { NestedJsonFilter } from \\"./NestedJsonFilter\\";
export { NestedJsonNullableFilter } from \\"./NestedJsonNullableFilter\\";
export { NestedStringFilter } from \\"./NestedStringFilter\\";
export { NestedStringNullableFilter } from \\"./NestedStringNullableFilter\\";
export { NestedStringNullableWithAggregatesFilter } from \\"./NestedStringNullableWithAggregatesFilter\\";
export { NestedStringWithAggregatesFilter } from \\"./NestedStringWithAggregatesFilter\\";
export { NullableBoolFieldUpdateOperationsInput } from \\"./NullableBoolFieldUpdateOperationsInput\\";
export { NullableDateTimeFieldUpdateOperationsInput } from \\"./NullableDateTimeFieldUpdateOperationsInput\\";
export { NullableEnumColorFieldUpdateOperationsInput } from \\"./NullableEnumColorFieldUpdateOperationsInput\\";
export { NullableFloatFieldUpdateOperationsInput } from \\"./NullableFloatFieldUpdateOperationsInput\\";
export { NullableIntFieldUpdateOperationsInput } from \\"./NullableIntFieldUpdateOperationsInput\\";
export { NullableStringFieldUpdateOperationsInput } from \\"./NullableStringFieldUpdateOperationsInput\\";
export { SampleModelAvgOrderByAggregateInput } from \\"./SampleModelAvgOrderByAggregateInput\\";
export { SampleModelCountOrderByAggregateInput } from \\"./SampleModelCountOrderByAggregateInput\\";
export { SampleModelCreateInput } from \\"./SampleModelCreateInput\\";
export { SampleModelCreateManyInput } from \\"./SampleModelCreateManyInput\\";
export { SampleModelCreateintArrayFieldInput } from \\"./SampleModelCreateintArrayFieldInput\\";
export { SampleModelCreatestringArrayFieldInput } from \\"./SampleModelCreatestringArrayFieldInput\\";
export { SampleModelMaxOrderByAggregateInput } from \\"./SampleModelMaxOrderByAggregateInput\\";
export { SampleModelMinOrderByAggregateInput } from \\"./SampleModelMinOrderByAggregateInput\\";
export { SampleModelOrderByWithAggregationInput } from \\"./SampleModelOrderByWithAggregationInput\\";
export { SampleModelOrderByWithRelationInput } from \\"./SampleModelOrderByWithRelationInput\\";
export { SampleModelScalarWhereWithAggregatesInput } from \\"./SampleModelScalarWhereWithAggregatesInput\\";
export { SampleModelSumOrderByAggregateInput } from \\"./SampleModelSumOrderByAggregateInput\\";
export { SampleModelUpdateInput } from \\"./SampleModelUpdateInput\\";
export { SampleModelUpdateManyMutationInput } from \\"./SampleModelUpdateManyMutationInput\\";
export { SampleModelUpdateintArrayFieldInput } from \\"./SampleModelUpdateintArrayFieldInput\\";
export { SampleModelUpdatestringArrayFieldInput } from \\"./SampleModelUpdatestringArrayFieldInput\\";
export { SampleModelWhereInput } from \\"./SampleModelWhereInput\\";
export { SampleModelWhereUniqueInput } from \\"./SampleModelWhereUniqueInput\\";
export { StringFieldUpdateOperationsInput } from \\"./StringFieldUpdateOperationsInput\\";
export { StringFilter } from \\"./StringFilter\\";
export { StringNullableFilter } from \\"./StringNullableFilter\\";
export { StringNullableListFilter } from \\"./StringNullableListFilter\\";
export { StringNullableWithAggregatesFilter } from \\"./StringNullableWithAggregatesFilter\\";
export { StringWithAggregatesFilter } from \\"./StringWithAggregatesFilter\\";
"
`;

exports[`inputs should properly generate input type classes for filtering json fields: JsonFilter 1`] = `
"import { Args, ArgsType, Context, Field, Float, ID, Info, InputType, Int, Mutation, ObjectType, Query, ResolveField, Resolver, Root, registerEnumType } from \\"@nestjs/graphql\\";
import * as GraphQLScalars from \\"graphql-scalars\\";
import { Prisma } from \\"../../../../helpers/prisma-client-mock\\";
import { DecimalJSScalar } from \\"../../scalars\\";

@InputType(\\"JsonFilter\\", {
  isAbstract: true
})
export class JsonFilter {
  @Field(_type => GraphQLScalars.JSONResolver, {
    nullable: true
  })
  equals?: Prisma.InputJsonValue | undefined;

  @Field(_type => [String], {
    nullable: true
  })
  path?: string[] | undefined;

  @Field(_type => String, {
    nullable: true
  })
  string_contains?: string | undefined;

  @Field(_type => String, {
    nullable: true
  })
  string_starts_with?: string | undefined;

  @Field(_type => String, {
    nullable: true
  })
  string_ends_with?: string | undefined;

  @Field(_type => GraphQLScalars.JSONResolver, {
    nullable: true
  })
  array_contains?: Prisma.InputJsonValue | undefined;

  @Field(_type => GraphQLScalars.JSONResolver, {
    nullable: true
  })
  array_starts_with?: Prisma.InputJsonValue | undefined;

  @Field(_type => GraphQLScalars.JSONResolver, {
    nullable: true
  })
  array_ends_with?: Prisma.InputJsonValue | undefined;

  @Field(_type => GraphQLScalars.JSONResolver, {
    nullable: true
  })
  lt?: Prisma.InputJsonValue | undefined;

  @Field(_type => GraphQLScalars.JSONResolver, {
    nullable: true
  })
  lte?: Prisma.InputJsonValue | undefined;

  @Field(_type => GraphQLScalars.JSONResolver, {
    nullable: true
  })
  gt?: Prisma.InputJsonValue | undefined;

  @Field(_type => GraphQLScalars.JSONResolver, {
    nullable: true
  })
  gte?: Prisma.InputJsonValue | undefined;

  @Field(_type => GraphQLScalars.JSONResolver, {
    nullable: true
  })
  not?: Prisma.InputJsonValue | undefined;
}
"
`;

exports[`inputs should properly generate input type classes for filtering json fields: JsonWithAggregatesFilter 1`] = `
"import { Args, ArgsType, Context, Field, Float, ID, Info, InputType, Int, Mutation, ObjectType, Query, ResolveField, Resolver, Root, registerEnumType } from \\"@nestjs/graphql\\";
import * as GraphQLScalars from \\"graphql-scalars\\";
import { Prisma } from \\"../../../../helpers/prisma-client-mock\\";
import { DecimalJSScalar } from \\"../../scalars\\";
import { NestedIntFilter } from \\"../inputs/NestedIntFilter\\";
import { NestedJsonFilter } from \\"../inputs/NestedJsonFilter\\";

@InputType(\\"JsonWithAggregatesFilter\\", {
  isAbstract: true
})
export class JsonWithAggregatesFilter {
  @Field(_type => GraphQLScalars.JSONResolver, {
    nullable: true
  })
  equals?: Prisma.InputJsonValue | undefined;

  @Field(_type => [String], {
    nullable: true
  })
  path?: string[] | undefined;

  @Field(_type => String, {
    nullable: true
  })
  string_contains?: string | undefined;

  @Field(_type => String, {
    nullable: true
  })
  string_starts_with?: string | undefined;

  @Field(_type => String, {
    nullable: true
  })
  string_ends_with?: string | undefined;

  @Field(_type => GraphQLScalars.JSONResolver, {
    nullable: true
  })
  array_contains?: Prisma.InputJsonValue | undefined;

  @Field(_type => GraphQLScalars.JSONResolver, {
    nullable: true
  })
  array_starts_with?: Prisma.InputJsonValue | undefined;

  @Field(_type => GraphQLScalars.JSONResolver, {
    nullable: true
  })
  array_ends_with?: Prisma.InputJsonValue | undefined;

  @Field(_type => GraphQLScalars.JSONResolver, {
    nullable: true
  })
  lt?: Prisma.InputJsonValue | undefined;

  @Field(_type => GraphQLScalars.JSONResolver, {
    nullable: true
  })
  lte?: Prisma.InputJsonValue | undefined;

  @Field(_type => GraphQLScalars.JSONResolver, {
    nullable: true
  })
  gt?: Prisma.InputJsonValue | undefined;

  @Field(_type => GraphQLScalars.JSONResolver, {
    nullable: true
  })
  gte?: Prisma.InputJsonValue | undefined;

  @Field(_type => GraphQLScalars.JSONResolver, {
    nullable: true
  })
  not?: Prisma.InputJsonValue | undefined;

  @Field(_type => NestedIntFilter, {
    nullable: true
  })
  _count?: NestedIntFilter | undefined;

  @Field(_type => NestedJsonFilter, {
    nullable: true
  })
  _min?: NestedJsonFilter | undefined;

  @Field(_type => NestedJsonFilter, {
    nullable: true
  })
  _max?: NestedJsonFilter | undefined;
}
"
`;

exports[`inputs should properly generate input type classes for filtering json fields: NestedJsonFilter 1`] = `
"import { Args, ArgsType, Context, Field, Float, ID, Info, InputType, Int, Mutation, ObjectType, Query, ResolveField, Resolver, Root, registerEnumType } from \\"@nestjs/graphql\\";
import * as GraphQLScalars from \\"graphql-scalars\\";
import { Prisma } from \\"../../../../helpers/prisma-client-mock\\";
import { DecimalJSScalar } from \\"../../scalars\\";

@InputType(\\"NestedJsonFilter\\", {
  isAbstract: true
})
export class NestedJsonFilter {
  @Field(_type => GraphQLScalars.JSONResolver, {
    nullable: true
  })
  equals?: Prisma.InputJsonValue | undefined;

  @Field(_type => [String], {
    nullable: true
  })
  path?: string[] | undefined;

  @Field(_type => String, {
    nullable: true
  })
  string_contains?: string | undefined;

  @Field(_type => String, {
    nullable: true
  })
  string_starts_with?: string | undefined;

  @Field(_type => String, {
    nullable: true
  })
  string_ends_with?: string | undefined;

  @Field(_type => GraphQLScalars.JSONResolver, {
    nullable: true
  })
  array_contains?: Prisma.InputJsonValue | undefined;

  @Field(_type => GraphQLScalars.JSONResolver, {
    nullable: true
  })
  array_starts_with?: Prisma.InputJsonValue | undefined;

  @Field(_type => GraphQLScalars.JSONResolver, {
    nullable: true
  })
  array_ends_with?: Prisma.InputJsonValue | undefined;

  @Field(_type => GraphQLScalars.JSONResolver, {
    nullable: true
  })
  lt?: Prisma.InputJsonValue | undefined;

  @Field(_type => GraphQLScalars.JSONResolver, {
    nullable: true
  })
  lte?: Prisma.InputJsonValue | undefined;

  @Field(_type => GraphQLScalars.JSONResolver, {
    nullable: true
  })
  gt?: Prisma.InputJsonValue | undefined;

  @Field(_type => GraphQLScalars.JSONResolver, {
    nullable: true
  })
  gte?: Prisma.InputJsonValue | undefined;

  @Field(_type => GraphQLScalars.JSONResolver, {
    nullable: true
  })
  not?: Prisma.InputJsonValue | undefined;
}
"
`;

exports[`inputs should properly generate input type classes for filtering json fields: index 1`] = `
"export { BoolFieldUpdateOperationsInput } from \\"./BoolFieldUpdateOperationsInput\\";
export { BoolFilter } from \\"./BoolFilter\\";
export { BoolWithAggregatesFilter } from \\"./BoolWithAggregatesFilter\\";
export { DateTimeFieldUpdateOperationsInput } from \\"./DateTimeFieldUpdateOperationsInput\\";
export { DateTimeFilter } from \\"./DateTimeFilter\\";
export { DateTimeWithAggregatesFilter } from \\"./DateTimeWithAggregatesFilter\\";
export { FloatFieldUpdateOperationsInput } from \\"./FloatFieldUpdateOperationsInput\\";
export { FloatFilter } from \\"./FloatFilter\\";
export { FloatWithAggregatesFilter } from \\"./FloatWithAggregatesFilter\\";
export { IntFieldUpdateOperationsInput } from \\"./IntFieldUpdateOperationsInput\\";
export { IntFilter } from \\"./IntFilter\\";
export { IntWithAggregatesFilter } from \\"./IntWithAggregatesFilter\\";
export { JsonFilter } from \\"./JsonFilter\\";
export { JsonWithAggregatesFilter } from \\"./JsonWithAggregatesFilter\\";
export { NestedBoolFilter } from \\"./NestedBoolFilter\\";
export { NestedBoolWithAggregatesFilter } from \\"./NestedBoolWithAggregatesFilter\\";
export { NestedDateTimeFilter } from \\"./NestedDateTimeFilter\\";
export { NestedDateTimeWithAggregatesFilter } from \\"./NestedDateTimeWithAggregatesFilter\\";
export { NestedFloatFilter } from \\"./NestedFloatFilter\\";
export { NestedFloatWithAggregatesFilter } from \\"./NestedFloatWithAggregatesFilter\\";
export { NestedIntFilter } from \\"./NestedIntFilter\\";
export { NestedIntWithAggregatesFilter } from \\"./NestedIntWithAggregatesFilter\\";
export { NestedJsonFilter } from \\"./NestedJsonFilter\\";
export { NestedStringFilter } from \\"./NestedStringFilter\\";
export { NestedStringWithAggregatesFilter } from \\"./NestedStringWithAggregatesFilter\\";
export { SampleAvgOrderByAggregateInput } from \\"./SampleAvgOrderByAggregateInput\\";
export { SampleCountOrderByAggregateInput } from \\"./SampleCountOrderByAggregateInput\\";
export { SampleCreateInput } from \\"./SampleCreateInput\\";
export { SampleCreateManyInput } from \\"./SampleCreateManyInput\\";
export { SampleMaxOrderByAggregateInput } from \\"./SampleMaxOrderByAggregateInput\\";
export { SampleMinOrderByAggregateInput } from \\"./SampleMinOrderByAggregateInput\\";
export { SampleOrderByWithAggregationInput } from \\"./SampleOrderByWithAggregationInput\\";
export { SampleOrderByWithRelationInput } from \\"./SampleOrderByWithRelationInput\\";
export { SampleScalarWhereWithAggregatesInput } from \\"./SampleScalarWhereWithAggregatesInput\\";
export { SampleSumOrderByAggregateInput } from \\"./SampleSumOrderByAggregateInput\\";
export { SampleUpdateInput } from \\"./SampleUpdateInput\\";
export { SampleUpdateManyMutationInput } from \\"./SampleUpdateManyMutationInput\\";
export { SampleWhereInput } from \\"./SampleWhereInput\\";
export { SampleWhereUniqueInput } from \\"./SampleWhereUniqueInput\\";
export { StringFieldUpdateOperationsInput } from \\"./StringFieldUpdateOperationsInput\\";
export { StringFilter } from \\"./StringFilter\\";
export { StringWithAggregatesFilter } from \\"./StringWithAggregatesFilter\\";
"
`;

exports[`inputs should properly generate input type classes for filtering models by fields: SampleModelWhereInput 1`] = `
"import { Args, ArgsType, Context, Field, Float, ID, Info, InputType, Int, Mutation, ObjectType, Query, ResolveField, Resolver, Root, registerEnumType } from \\"@nestjs/graphql\\";
import * as GraphQLScalars from \\"graphql-scalars\\";
import { Prisma } from \\"../../../../helpers/prisma-client-mock\\";
import { DecimalJSScalar } from \\"../../scalars\\";
import { BoolFilter } from \\"../inputs/BoolFilter\\";
import { DateTimeFilter } from \\"../inputs/DateTimeFilter\\";
import { FloatFilter } from \\"../inputs/FloatFilter\\";
import { IntFilter } from \\"../inputs/IntFilter\\";
import { JsonFilter } from \\"../inputs/JsonFilter\\";
import { StringFilter } from \\"../inputs/StringFilter\\";
import { StringNullableFilter } from \\"../inputs/StringNullableFilter\\";

@InputType(\\"SampleModelWhereInput\\", {
  isAbstract: true
})
export class SampleModelWhereInput {
  @Field(_type => [SampleModelWhereInput], {
    nullable: true
  })
  AND?: SampleModelWhereInput[] | undefined;

  @Field(_type => [SampleModelWhereInput], {
    nullable: true
  })
  OR?: SampleModelWhereInput[] | undefined;

  @Field(_type => [SampleModelWhereInput], {
    nullable: true
  })
  NOT?: SampleModelWhereInput[] | undefined;

  @Field(_type => IntFilter, {
    nullable: true
  })
  intIdField?: IntFilter | undefined;

  @Field(_type => StringFilter, {
    nullable: true
  })
  stringField?: StringFilter | undefined;

  @Field(_type => StringNullableFilter, {
    nullable: true
  })
  optionalStringField?: StringNullableFilter | undefined;

  @Field(_type => IntFilter, {
    nullable: true
  })
  intField?: IntFilter | undefined;

  @Field(_type => FloatFilter, {
    nullable: true
  })
  floatField?: FloatFilter | undefined;

  @Field(_type => BoolFilter, {
    nullable: true
  })
  booleanField?: BoolFilter | undefined;

  @Field(_type => DateTimeFilter, {
    nullable: true
  })
  dateField?: DateTimeFilter | undefined;

  @Field(_type => JsonFilter, {
    nullable: true
  })
  jsonField?: JsonFilter | undefined;
}
"
`;

exports[`inputs should properly generate input type classes for filtering models by fields: SampleModelWhereUniqueInput 1`] = `
"import { Args, ArgsType, Context, Field, Float, ID, Info, InputType, Int, Mutation, ObjectType, Query, ResolveField, Resolver, Root, registerEnumType } from \\"@nestjs/graphql\\";
import * as GraphQLScalars from \\"graphql-scalars\\";
import { Prisma } from \\"../../../../helpers/prisma-client-mock\\";
import { DecimalJSScalar } from \\"../../scalars\\";

@InputType(\\"SampleModelWhereUniqueInput\\", {
  isAbstract: true
})
export class SampleModelWhereUniqueInput {
  @Field(_type => Int, {
    nullable: true
  })
  intIdField?: number | undefined;

  @Field(_type => String, {
    nullable: true
  })
  stringField?: string | undefined;
}
"
`;

exports[`inputs should properly generate input type classes for filtering models by fields: index 1`] = `
"export { BoolFieldUpdateOperationsInput } from \\"./BoolFieldUpdateOperationsInput\\";
export { BoolFilter } from \\"./BoolFilter\\";
export { BoolWithAggregatesFilter } from \\"./BoolWithAggregatesFilter\\";
export { DateTimeFieldUpdateOperationsInput } from \\"./DateTimeFieldUpdateOperationsInput\\";
export { DateTimeFilter } from \\"./DateTimeFilter\\";
export { DateTimeWithAggregatesFilter } from \\"./DateTimeWithAggregatesFilter\\";
export { FloatFieldUpdateOperationsInput } from \\"./FloatFieldUpdateOperationsInput\\";
export { FloatFilter } from \\"./FloatFilter\\";
export { FloatWithAggregatesFilter } from \\"./FloatWithAggregatesFilter\\";
export { IntFieldUpdateOperationsInput } from \\"./IntFieldUpdateOperationsInput\\";
export { IntFilter } from \\"./IntFilter\\";
export { IntWithAggregatesFilter } from \\"./IntWithAggregatesFilter\\";
export { JsonFilter } from \\"./JsonFilter\\";
export { JsonWithAggregatesFilter } from \\"./JsonWithAggregatesFilter\\";
export { NestedBoolFilter } from \\"./NestedBoolFilter\\";
export { NestedBoolWithAggregatesFilter } from \\"./NestedBoolWithAggregatesFilter\\";
export { NestedDateTimeFilter } from \\"./NestedDateTimeFilter\\";
export { NestedDateTimeWithAggregatesFilter } from \\"./NestedDateTimeWithAggregatesFilter\\";
export { NestedFloatFilter } from \\"./NestedFloatFilter\\";
export { NestedFloatWithAggregatesFilter } from \\"./NestedFloatWithAggregatesFilter\\";
export { NestedIntFilter } from \\"./NestedIntFilter\\";
export { NestedIntNullableFilter } from \\"./NestedIntNullableFilter\\";
export { NestedIntWithAggregatesFilter } from \\"./NestedIntWithAggregatesFilter\\";
export { NestedJsonFilter } from \\"./NestedJsonFilter\\";
export { NestedStringFilter } from \\"./NestedStringFilter\\";
export { NestedStringNullableFilter } from \\"./NestedStringNullableFilter\\";
export { NestedStringNullableWithAggregatesFilter } from \\"./NestedStringNullableWithAggregatesFilter\\";
export { NestedStringWithAggregatesFilter } from \\"./NestedStringWithAggregatesFilter\\";
export { NullableStringFieldUpdateOperationsInput } from \\"./NullableStringFieldUpdateOperationsInput\\";
export { SampleModelAvgOrderByAggregateInput } from \\"./SampleModelAvgOrderByAggregateInput\\";
export { SampleModelCountOrderByAggregateInput } from \\"./SampleModelCountOrderByAggregateInput\\";
export { SampleModelCreateInput } from \\"./SampleModelCreateInput\\";
export { SampleModelCreateManyInput } from \\"./SampleModelCreateManyInput\\";
export { SampleModelMaxOrderByAggregateInput } from \\"./SampleModelMaxOrderByAggregateInput\\";
export { SampleModelMinOrderByAggregateInput } from \\"./SampleModelMinOrderByAggregateInput\\";
export { SampleModelOrderByWithAggregationInput } from \\"./SampleModelOrderByWithAggregationInput\\";
export { SampleModelOrderByWithRelationInput } from \\"./SampleModelOrderByWithRelationInput\\";
export { SampleModelScalarWhereWithAggregatesInput } from \\"./SampleModelScalarWhereWithAggregatesInput\\";
export { SampleModelSumOrderByAggregateInput } from \\"./SampleModelSumOrderByAggregateInput\\";
export { SampleModelUpdateInput } from \\"./SampleModelUpdateInput\\";
export { SampleModelUpdateManyMutationInput } from \\"./SampleModelUpdateManyMutationInput\\";
export { SampleModelWhereInput } from \\"./SampleModelWhereInput\\";
export { SampleModelWhereUniqueInput } from \\"./SampleModelWhereUniqueInput\\";
export { StringFieldUpdateOperationsInput } from \\"./StringFieldUpdateOperationsInput\\";
export { StringFilter } from \\"./StringFilter\\";
export { StringNullableFilter } from \\"./StringNullableFilter\\";
export { StringNullableWithAggregatesFilter } from \\"./StringNullableWithAggregatesFilter\\";
export { StringWithAggregatesFilter } from \\"./StringWithAggregatesFilter\\";
"
`;

exports[`inputs should properly generate input type classes for filtering models by many to many relation fields: FirstModelOrderByWithRelationInput 1`] = `
"import { Args, ArgsType, Context, Field, Float, ID, Info, InputType, Int, Mutation, ObjectType, Query, ResolveField, Resolver, Root, registerEnumType } from \\"@nestjs/graphql\\";
import * as GraphQLScalars from \\"graphql-scalars\\";
import { Prisma } from \\"../../../../helpers/prisma-client-mock\\";
import { DecimalJSScalar } from \\"../../scalars\\";
import { SecondModelOrderByRelationAggregateInput } from \\"../inputs/SecondModelOrderByRelationAggregateInput\\";
import { SortOrder } from \\"../../enums/SortOrder\\";

@InputType(\\"FirstModelOrderByWithRelationInput\\", {
  isAbstract: true
})
export class FirstModelOrderByWithRelationInput {
  @Field(_type => SortOrder, {
    nullable: true
  })
  idField?: \\"asc\\" | \\"desc\\" | undefined;

  @Field(_type => SortOrder, {
    nullable: true
  })
  uniqueStringField?: \\"asc\\" | \\"desc\\" | undefined;

  @Field(_type => SortOrder, {
    nullable: true
  })
  floatField?: \\"asc\\" | \\"desc\\" | undefined;

  @Field(_type => SecondModelOrderByRelationAggregateInput, {
    nullable: true
  })
  secondModelsField?: SecondModelOrderByRelationAggregateInput | undefined;
}
"
`;

exports[`inputs should properly generate input type classes for filtering models by many to many relation fields: FirstModelScalarWhereInput 1`] = `
"import { Args, ArgsType, Context, Field, Float, ID, Info, InputType, Int, Mutation, ObjectType, Query, ResolveField, Resolver, Root, registerEnumType } from \\"@nestjs/graphql\\";
import * as GraphQLScalars from \\"graphql-scalars\\";
import { Prisma } from \\"../../../../helpers/prisma-client-mock\\";
import { DecimalJSScalar } from \\"../../scalars\\";
import { FloatFilter } from \\"../inputs/FloatFilter\\";
import { IntFilter } from \\"../inputs/IntFilter\\";
import { StringFilter } from \\"../inputs/StringFilter\\";

@InputType(\\"FirstModelScalarWhereInput\\", {
  isAbstract: true
})
export class FirstModelScalarWhereInput {
  @Field(_type => [FirstModelScalarWhereInput], {
    nullable: true
  })
  AND?: FirstModelScalarWhereInput[] | undefined;

  @Field(_type => [FirstModelScalarWhereInput], {
    nullable: true
  })
  OR?: FirstModelScalarWhereInput[] | undefined;

  @Field(_type => [FirstModelScalarWhereInput], {
    nullable: true
  })
  NOT?: FirstModelScalarWhereInput[] | undefined;

  @Field(_type => IntFilter, {
    nullable: true
  })
  idField?: IntFilter | undefined;

  @Field(_type => StringFilter, {
    nullable: true
  })
  uniqueStringField?: StringFilter | undefined;

  @Field(_type => FloatFilter, {
    nullable: true
  })
  floatField?: FloatFilter | undefined;
}
"
`;

exports[`inputs should properly generate input type classes for filtering models by many to many relation fields: FirstModelWhereInput 1`] = `
"import { Args, ArgsType, Context, Field, Float, ID, Info, InputType, Int, Mutation, ObjectType, Query, ResolveField, Resolver, Root, registerEnumType } from \\"@nestjs/graphql\\";
import * as GraphQLScalars from \\"graphql-scalars\\";
import { Prisma } from \\"../../../../helpers/prisma-client-mock\\";
import { DecimalJSScalar } from \\"../../scalars\\";
import { FloatFilter } from \\"../inputs/FloatFilter\\";
import { IntFilter } from \\"../inputs/IntFilter\\";
import { SecondModelListRelationFilter } from \\"../inputs/SecondModelListRelationFilter\\";
import { StringFilter } from \\"../inputs/StringFilter\\";

@InputType(\\"FirstModelWhereInput\\", {
  isAbstract: true
})
export class FirstModelWhereInput {
  @Field(_type => [FirstModelWhereInput], {
    nullable: true
  })
  AND?: FirstModelWhereInput[] | undefined;

  @Field(_type => [FirstModelWhereInput], {
    nullable: true
  })
  OR?: FirstModelWhereInput[] | undefined;

  @Field(_type => [FirstModelWhereInput], {
    nullable: true
  })
  NOT?: FirstModelWhereInput[] | undefined;

  @Field(_type => IntFilter, {
    nullable: true
  })
  idField?: IntFilter | undefined;

  @Field(_type => StringFilter, {
    nullable: true
  })
  uniqueStringField?: StringFilter | undefined;

  @Field(_type => FloatFilter, {
    nullable: true
  })
  floatField?: FloatFilter | undefined;

  @Field(_type => SecondModelListRelationFilter, {
    nullable: true
  })
  secondModelsField?: SecondModelListRelationFilter | undefined;
}
"
`;

exports[`inputs should properly generate input type classes for filtering models by many to many relation fields: FirstModelWhereUniqueInput 1`] = `
"import { Args, ArgsType, Context, Field, Float, ID, Info, InputType, Int, Mutation, ObjectType, Query, ResolveField, Resolver, Root, registerEnumType } from \\"@nestjs/graphql\\";
import * as GraphQLScalars from \\"graphql-scalars\\";
import { Prisma } from \\"../../../../helpers/prisma-client-mock\\";
import { DecimalJSScalar } from \\"../../scalars\\";

@InputType(\\"FirstModelWhereUniqueInput\\", {
  isAbstract: true
})
export class FirstModelWhereUniqueInput {
  @Field(_type => Int, {
    nullable: true
  })
  idField?: number | undefined;

  @Field(_type => String, {
    nullable: true
  })
  uniqueStringField?: string | undefined;
}
"
`;

exports[`inputs should properly generate input type classes for filtering models by many to many relation fields: index 1`] = `
"export { FirstModelAvgOrderByAggregateInput } from \\"./FirstModelAvgOrderByAggregateInput\\";
export { FirstModelCountOrderByAggregateInput } from \\"./FirstModelCountOrderByAggregateInput\\";
export { FirstModelCreateInput } from \\"./FirstModelCreateInput\\";
export { FirstModelCreateManyInput } from \\"./FirstModelCreateManyInput\\";
export { FirstModelCreateNestedManyWithoutSecondModelsFieldInput } from \\"./FirstModelCreateNestedManyWithoutSecondModelsFieldInput\\";
export { FirstModelCreateOrConnectWithoutSecondModelsFieldInput } from \\"./FirstModelCreateOrConnectWithoutSecondModelsFieldInput\\";
export { FirstModelCreateWithoutSecondModelsFieldInput } from \\"./FirstModelCreateWithoutSecondModelsFieldInput\\";
export { FirstModelListRelationFilter } from \\"./FirstModelListRelationFilter\\";
export { FirstModelMaxOrderByAggregateInput } from \\"./FirstModelMaxOrderByAggregateInput\\";
export { FirstModelMinOrderByAggregateInput } from \\"./FirstModelMinOrderByAggregateInput\\";
export { FirstModelOrderByRelationAggregateInput } from \\"./FirstModelOrderByRelationAggregateInput\\";
export { FirstModelOrderByWithAggregationInput } from \\"./FirstModelOrderByWithAggregationInput\\";
export { FirstModelOrderByWithRelationInput } from \\"./FirstModelOrderByWithRelationInput\\";
export { FirstModelScalarWhereInput } from \\"./FirstModelScalarWhereInput\\";
export { FirstModelScalarWhereWithAggregatesInput } from \\"./FirstModelScalarWhereWithAggregatesInput\\";
export { FirstModelSumOrderByAggregateInput } from \\"./FirstModelSumOrderByAggregateInput\\";
export { FirstModelUpdateInput } from \\"./FirstModelUpdateInput\\";
export { FirstModelUpdateManyMutationInput } from \\"./FirstModelUpdateManyMutationInput\\";
export { FirstModelUpdateManyWithWhereWithoutSecondModelsFieldInput } from \\"./FirstModelUpdateManyWithWhereWithoutSecondModelsFieldInput\\";
export { FirstModelUpdateManyWithoutSecondModelsFieldNestedInput } from \\"./FirstModelUpdateManyWithoutSecondModelsFieldNestedInput\\";
export { FirstModelUpdateWithWhereUniqueWithoutSecondModelsFieldInput } from \\"./FirstModelUpdateWithWhereUniqueWithoutSecondModelsFieldInput\\";
export { FirstModelUpdateWithoutSecondModelsFieldInput } from \\"./FirstModelUpdateWithoutSecondModelsFieldInput\\";
export { FirstModelUpsertWithWhereUniqueWithoutSecondModelsFieldInput } from \\"./FirstModelUpsertWithWhereUniqueWithoutSecondModelsFieldInput\\";
export { FirstModelWhereInput } from \\"./FirstModelWhereInput\\";
export { FirstModelWhereUniqueInput } from \\"./FirstModelWhereUniqueInput\\";
export { FloatFieldUpdateOperationsInput } from \\"./FloatFieldUpdateOperationsInput\\";
export { FloatFilter } from \\"./FloatFilter\\";
export { FloatWithAggregatesFilter } from \\"./FloatWithAggregatesFilter\\";
export { IntFieldUpdateOperationsInput } from \\"./IntFieldUpdateOperationsInput\\";
export { IntFilter } from \\"./IntFilter\\";
export { IntWithAggregatesFilter } from \\"./IntWithAggregatesFilter\\";
export { NestedFloatFilter } from \\"./NestedFloatFilter\\";
export { NestedFloatWithAggregatesFilter } from \\"./NestedFloatWithAggregatesFilter\\";
export { NestedIntFilter } from \\"./NestedIntFilter\\";
export { NestedIntWithAggregatesFilter } from \\"./NestedIntWithAggregatesFilter\\";
export { NestedStringFilter } from \\"./NestedStringFilter\\";
export { NestedStringWithAggregatesFilter } from \\"./NestedStringWithAggregatesFilter\\";
export { SecondModelAvgOrderByAggregateInput } from \\"./SecondModelAvgOrderByAggregateInput\\";
export { SecondModelCountOrderByAggregateInput } from \\"./SecondModelCountOrderByAggregateInput\\";
export { SecondModelCreateInput } from \\"./SecondModelCreateInput\\";
export { SecondModelCreateManyInput } from \\"./SecondModelCreateManyInput\\";
export { SecondModelCreateNestedManyWithoutFirstModelsFieldInput } from \\"./SecondModelCreateNestedManyWithoutFirstModelsFieldInput\\";
export { SecondModelCreateOrConnectWithoutFirstModelsFieldInput } from \\"./SecondModelCreateOrConnectWithoutFirstModelsFieldInput\\";
export { SecondModelCreateWithoutFirstModelsFieldInput } from \\"./SecondModelCreateWithoutFirstModelsFieldInput\\";
export { SecondModelListRelationFilter } from \\"./SecondModelListRelationFilter\\";
export { SecondModelMaxOrderByAggregateInput } from \\"./SecondModelMaxOrderByAggregateInput\\";
export { SecondModelMinOrderByAggregateInput } from \\"./SecondModelMinOrderByAggregateInput\\";
export { SecondModelOrderByRelationAggregateInput } from \\"./SecondModelOrderByRelationAggregateInput\\";
export { SecondModelOrderByWithAggregationInput } from \\"./SecondModelOrderByWithAggregationInput\\";
export { SecondModelOrderByWithRelationInput } from \\"./SecondModelOrderByWithRelationInput\\";
export { SecondModelScalarWhereInput } from \\"./SecondModelScalarWhereInput\\";
export { SecondModelScalarWhereWithAggregatesInput } from \\"./SecondModelScalarWhereWithAggregatesInput\\";
export { SecondModelSumOrderByAggregateInput } from \\"./SecondModelSumOrderByAggregateInput\\";
export { SecondModelUpdateInput } from \\"./SecondModelUpdateInput\\";
export { SecondModelUpdateManyMutationInput } from \\"./SecondModelUpdateManyMutationInput\\";
export { SecondModelUpdateManyWithWhereWithoutFirstModelsFieldInput } from \\"./SecondModelUpdateManyWithWhereWithoutFirstModelsFieldInput\\";
export { SecondModelUpdateManyWithoutFirstModelsFieldNestedInput } from \\"./SecondModelUpdateManyWithoutFirstModelsFieldNestedInput\\";
export { SecondModelUpdateWithWhereUniqueWithoutFirstModelsFieldInput } from \\"./SecondModelUpdateWithWhereUniqueWithoutFirstModelsFieldInput\\";
export { SecondModelUpdateWithoutFirstModelsFieldInput } from \\"./SecondModelUpdateWithoutFirstModelsFieldInput\\";
export { SecondModelUpsertWithWhereUniqueWithoutFirstModelsFieldInput } from \\"./SecondModelUpsertWithWhereUniqueWithoutFirstModelsFieldInput\\";
export { SecondModelWhereInput } from \\"./SecondModelWhereInput\\";
export { SecondModelWhereUniqueInput } from \\"./SecondModelWhereUniqueInput\\";
export { StringFieldUpdateOperationsInput } from \\"./StringFieldUpdateOperationsInput\\";
export { StringFilter } from \\"./StringFilter\\";
export { StringWithAggregatesFilter } from \\"./StringWithAggregatesFilter\\";
"
`;

exports[`inputs should properly generate input type classes for filtering models by one to many relation fields: FirstModelOrderByWithRelationInput 1`] = `
"import { Args, ArgsType, Context, Field, Float, ID, Info, InputType, Int, Mutation, ObjectType, Query, ResolveField, Resolver, Root, registerEnumType } from \\"@nestjs/graphql\\";
import * as GraphQLScalars from \\"graphql-scalars\\";
import { Prisma } from \\"../../../../helpers/prisma-client-mock\\";
import { DecimalJSScalar } from \\"../../scalars\\";
import { SecondModelOrderByRelationAggregateInput } from \\"../inputs/SecondModelOrderByRelationAggregateInput\\";
import { SortOrder } from \\"../../enums/SortOrder\\";

@InputType(\\"FirstModelOrderByWithRelationInput\\", {
  isAbstract: true
})
export class FirstModelOrderByWithRelationInput {
  @Field(_type => SortOrder, {
    nullable: true
  })
  idField?: \\"asc\\" | \\"desc\\" | undefined;

  @Field(_type => SortOrder, {
    nullable: true
  })
  uniqueStringField?: \\"asc\\" | \\"desc\\" | undefined;

  @Field(_type => SortOrder, {
    nullable: true
  })
  floatField?: \\"asc\\" | \\"desc\\" | undefined;

  @Field(_type => SecondModelOrderByRelationAggregateInput, {
    nullable: true
  })
  secondModelsField?: SecondModelOrderByRelationAggregateInput | undefined;
}
"
`;

exports[`inputs should properly generate input type classes for filtering models by one to many relation fields: FirstModelRelationFilter 1`] = `
"import { Args, ArgsType, Context, Field, Float, ID, Info, InputType, Int, Mutation, ObjectType, Query, ResolveField, Resolver, Root, registerEnumType } from \\"@nestjs/graphql\\";
import * as GraphQLScalars from \\"graphql-scalars\\";
import { Prisma } from \\"../../../../helpers/prisma-client-mock\\";
import { DecimalJSScalar } from \\"../../scalars\\";
import { FirstModelWhereInput } from \\"../inputs/FirstModelWhereInput\\";

@InputType(\\"FirstModelRelationFilter\\", {
  isAbstract: true
})
export class FirstModelRelationFilter {
  @Field(_type => FirstModelWhereInput, {
    nullable: true
  })
  is?: FirstModelWhereInput | undefined;

  @Field(_type => FirstModelWhereInput, {
    nullable: true
  })
  isNot?: FirstModelWhereInput | undefined;
}
"
`;

exports[`inputs should properly generate input type classes for filtering models by one to many relation fields: FirstModelWhereInput 1`] = `
"import { Args, ArgsType, Context, Field, Float, ID, Info, InputType, Int, Mutation, ObjectType, Query, ResolveField, Resolver, Root, registerEnumType } from \\"@nestjs/graphql\\";
import * as GraphQLScalars from \\"graphql-scalars\\";
import { Prisma } from \\"../../../../helpers/prisma-client-mock\\";
import { DecimalJSScalar } from \\"../../scalars\\";
import { FloatFilter } from \\"../inputs/FloatFilter\\";
import { IntFilter } from \\"../inputs/IntFilter\\";
import { SecondModelListRelationFilter } from \\"../inputs/SecondModelListRelationFilter\\";
import { StringFilter } from \\"../inputs/StringFilter\\";

@InputType(\\"FirstModelWhereInput\\", {
  isAbstract: true
})
export class FirstModelWhereInput {
  @Field(_type => [FirstModelWhereInput], {
    nullable: true
  })
  AND?: FirstModelWhereInput[] | undefined;

  @Field(_type => [FirstModelWhereInput], {
    nullable: true
  })
  OR?: FirstModelWhereInput[] | undefined;

  @Field(_type => [FirstModelWhereInput], {
    nullable: true
  })
  NOT?: FirstModelWhereInput[] | undefined;

  @Field(_type => IntFilter, {
    nullable: true
  })
  idField?: IntFilter | undefined;

  @Field(_type => StringFilter, {
    nullable: true
  })
  uniqueStringField?: StringFilter | undefined;

  @Field(_type => FloatFilter, {
    nullable: true
  })
  floatField?: FloatFilter | undefined;

  @Field(_type => SecondModelListRelationFilter, {
    nullable: true
  })
  secondModelsField?: SecondModelListRelationFilter | undefined;
}
"
`;

exports[`inputs should properly generate input type classes for filtering models by one to many relation fields: FirstModelWhereUniqueInput 1`] = `
"import { Args, ArgsType, Context, Field, Float, ID, Info, InputType, Int, Mutation, ObjectType, Query, ResolveField, Resolver, Root, registerEnumType } from \\"@nestjs/graphql\\";
import * as GraphQLScalars from \\"graphql-scalars\\";
import { Prisma } from \\"../../../../helpers/prisma-client-mock\\";
import { DecimalJSScalar } from \\"../../scalars\\";

@InputType(\\"FirstModelWhereUniqueInput\\", {
  isAbstract: true
})
export class FirstModelWhereUniqueInput {
  @Field(_type => Int, {
    nullable: true
  })
  idField?: number | undefined;

  @Field(_type => String, {
    nullable: true
  })
  uniqueStringField?: string | undefined;
}
"
`;

exports[`inputs should properly generate input type classes for filtering models by one to many relation fields: SecondModelListRelationFilter 1`] = `
"import { Args, ArgsType, Context, Field, Float, ID, Info, InputType, Int, Mutation, ObjectType, Query, ResolveField, Resolver, Root, registerEnumType } from \\"@nestjs/graphql\\";
import * as GraphQLScalars from \\"graphql-scalars\\";
import { Prisma } from \\"../../../../helpers/prisma-client-mock\\";
import { DecimalJSScalar } from \\"../../scalars\\";
import { SecondModelWhereInput } from \\"../inputs/SecondModelWhereInput\\";

@InputType(\\"SecondModelListRelationFilter\\", {
  isAbstract: true
})
export class SecondModelListRelationFilter {
  @Field(_type => SecondModelWhereInput, {
    nullable: true
  })
  every?: SecondModelWhereInput | undefined;

  @Field(_type => SecondModelWhereInput, {
    nullable: true
  })
  some?: SecondModelWhereInput | undefined;

  @Field(_type => SecondModelWhereInput, {
    nullable: true
  })
  none?: SecondModelWhereInput | undefined;
}
"
`;

exports[`inputs should properly generate input type classes for filtering models by one to many relation fields: SecondModelOrderByWithRelationInput 1`] = `
"import { Args, ArgsType, Context, Field, Float, ID, Info, InputType, Int, Mutation, ObjectType, Query, ResolveField, Resolver, Root, registerEnumType } from \\"@nestjs/graphql\\";
import * as GraphQLScalars from \\"graphql-scalars\\";
import { Prisma } from \\"../../../../helpers/prisma-client-mock\\";
import { DecimalJSScalar } from \\"../../scalars\\";
import { FirstModelOrderByWithRelationInput } from \\"../inputs/FirstModelOrderByWithRelationInput\\";
import { SortOrder } from \\"../../enums/SortOrder\\";

@InputType(\\"SecondModelOrderByWithRelationInput\\", {
  isAbstract: true
})
export class SecondModelOrderByWithRelationInput {
  @Field(_type => SortOrder, {
    nullable: true
  })
  idField?: \\"asc\\" | \\"desc\\" | undefined;

  @Field(_type => SortOrder, {
    nullable: true
  })
  uniqueStringField?: \\"asc\\" | \\"desc\\" | undefined;

  @Field(_type => SortOrder, {
    nullable: true
  })
  floatField?: \\"asc\\" | \\"desc\\" | undefined;

  @Field(_type => SortOrder, {
    nullable: true
  })
  firstModelFieldId?: \\"asc\\" | \\"desc\\" | undefined;

  @Field(_type => FirstModelOrderByWithRelationInput, {
    nullable: true
  })
  firstModelField?: FirstModelOrderByWithRelationInput | undefined;
}
"
`;

exports[`inputs should properly generate input type classes for filtering models by one to many relation fields: SecondModelScalarWhereInput 1`] = `
"import { Args, ArgsType, Context, Field, Float, ID, Info, InputType, Int, Mutation, ObjectType, Query, ResolveField, Resolver, Root, registerEnumType } from \\"@nestjs/graphql\\";
import * as GraphQLScalars from \\"graphql-scalars\\";
import { Prisma } from \\"../../../../helpers/prisma-client-mock\\";
import { DecimalJSScalar } from \\"../../scalars\\";
import { FloatFilter } from \\"../inputs/FloatFilter\\";
import { IntFilter } from \\"../inputs/IntFilter\\";
import { StringFilter } from \\"../inputs/StringFilter\\";

@InputType(\\"SecondModelScalarWhereInput\\", {
  isAbstract: true
})
export class SecondModelScalarWhereInput {
  @Field(_type => [SecondModelScalarWhereInput], {
    nullable: true
  })
  AND?: SecondModelScalarWhereInput[] | undefined;

  @Field(_type => [SecondModelScalarWhereInput], {
    nullable: true
  })
  OR?: SecondModelScalarWhereInput[] | undefined;

  @Field(_type => [SecondModelScalarWhereInput], {
    nullable: true
  })
  NOT?: SecondModelScalarWhereInput[] | undefined;

  @Field(_type => IntFilter, {
    nullable: true
  })
  idField?: IntFilter | undefined;

  @Field(_type => StringFilter, {
    nullable: true
  })
  uniqueStringField?: StringFilter | undefined;

  @Field(_type => FloatFilter, {
    nullable: true
  })
  floatField?: FloatFilter | undefined;

  @Field(_type => IntFilter, {
    nullable: true
  })
  firstModelFieldId?: IntFilter | undefined;
}
"
`;

exports[`inputs should properly generate input type classes for filtering models by one to many relation fields: SecondModelWhereInput 1`] = `
"import { Args, ArgsType, Context, Field, Float, ID, Info, InputType, Int, Mutation, ObjectType, Query, ResolveField, Resolver, Root, registerEnumType } from \\"@nestjs/graphql\\";
import * as GraphQLScalars from \\"graphql-scalars\\";
import { Prisma } from \\"../../../../helpers/prisma-client-mock\\";
import { DecimalJSScalar } from \\"../../scalars\\";
import { FirstModelRelationFilter } from \\"../inputs/FirstModelRelationFilter\\";
import { FloatFilter } from \\"../inputs/FloatFilter\\";
import { IntFilter } from \\"../inputs/IntFilter\\";
import { StringFilter } from \\"../inputs/StringFilter\\";

@InputType(\\"SecondModelWhereInput\\", {
  isAbstract: true
})
export class SecondModelWhereInput {
  @Field(_type => [SecondModelWhereInput], {
    nullable: true
  })
  AND?: SecondModelWhereInput[] | undefined;

  @Field(_type => [SecondModelWhereInput], {
    nullable: true
  })
  OR?: SecondModelWhereInput[] | undefined;

  @Field(_type => [SecondModelWhereInput], {
    nullable: true
  })
  NOT?: SecondModelWhereInput[] | undefined;

  @Field(_type => IntFilter, {
    nullable: true
  })
  idField?: IntFilter | undefined;

  @Field(_type => StringFilter, {
    nullable: true
  })
  uniqueStringField?: StringFilter | undefined;

  @Field(_type => FloatFilter, {
    nullable: true
  })
  floatField?: FloatFilter | undefined;

  @Field(_type => IntFilter, {
    nullable: true
  })
  firstModelFieldId?: IntFilter | undefined;

  @Field(_type => FirstModelRelationFilter, {
    nullable: true
  })
  firstModelField?: FirstModelRelationFilter | undefined;
}
"
`;

exports[`inputs should properly generate input type classes for filtering models by one to many relation fields: SecondModelWhereUniqueInput 1`] = `
"import { Args, ArgsType, Context, Field, Float, ID, Info, InputType, Int, Mutation, ObjectType, Query, ResolveField, Resolver, Root, registerEnumType } from \\"@nestjs/graphql\\";
import * as GraphQLScalars from \\"graphql-scalars\\";
import { Prisma } from \\"../../../../helpers/prisma-client-mock\\";
import { DecimalJSScalar } from \\"../../scalars\\";

@InputType(\\"SecondModelWhereUniqueInput\\", {
  isAbstract: true
})
export class SecondModelWhereUniqueInput {
  @Field(_type => Int, {
    nullable: true
  })
  idField?: number | undefined;

  @Field(_type => String, {
    nullable: true
  })
  uniqueStringField?: string | undefined;
}
"
`;

exports[`inputs should properly generate input type classes for filtering models by one to many relation fields: index 1`] = `
"export { FirstModelAvgOrderByAggregateInput } from \\"./FirstModelAvgOrderByAggregateInput\\";
export { FirstModelCountOrderByAggregateInput } from \\"./FirstModelCountOrderByAggregateInput\\";
export { FirstModelCreateInput } from \\"./FirstModelCreateInput\\";
export { FirstModelCreateManyInput } from \\"./FirstModelCreateManyInput\\";
export { FirstModelCreateNestedOneWithoutSecondModelsFieldInput } from \\"./FirstModelCreateNestedOneWithoutSecondModelsFieldInput\\";
export { FirstModelCreateOrConnectWithoutSecondModelsFieldInput } from \\"./FirstModelCreateOrConnectWithoutSecondModelsFieldInput\\";
export { FirstModelCreateWithoutSecondModelsFieldInput } from \\"./FirstModelCreateWithoutSecondModelsFieldInput\\";
export { FirstModelMaxOrderByAggregateInput } from \\"./FirstModelMaxOrderByAggregateInput\\";
export { FirstModelMinOrderByAggregateInput } from \\"./FirstModelMinOrderByAggregateInput\\";
export { FirstModelOrderByWithAggregationInput } from \\"./FirstModelOrderByWithAggregationInput\\";
export { FirstModelOrderByWithRelationInput } from \\"./FirstModelOrderByWithRelationInput\\";
export { FirstModelRelationFilter } from \\"./FirstModelRelationFilter\\";
export { FirstModelScalarWhereWithAggregatesInput } from \\"./FirstModelScalarWhereWithAggregatesInput\\";
export { FirstModelSumOrderByAggregateInput } from \\"./FirstModelSumOrderByAggregateInput\\";
export { FirstModelUpdateInput } from \\"./FirstModelUpdateInput\\";
export { FirstModelUpdateManyMutationInput } from \\"./FirstModelUpdateManyMutationInput\\";
export { FirstModelUpdateOneRequiredWithoutSecondModelsFieldNestedInput } from \\"./FirstModelUpdateOneRequiredWithoutSecondModelsFieldNestedInput\\";
export { FirstModelUpdateWithoutSecondModelsFieldInput } from \\"./FirstModelUpdateWithoutSecondModelsFieldInput\\";
export { FirstModelUpsertWithoutSecondModelsFieldInput } from \\"./FirstModelUpsertWithoutSecondModelsFieldInput\\";
export { FirstModelWhereInput } from \\"./FirstModelWhereInput\\";
export { FirstModelWhereUniqueInput } from \\"./FirstModelWhereUniqueInput\\";
export { FloatFieldUpdateOperationsInput } from \\"./FloatFieldUpdateOperationsInput\\";
export { FloatFilter } from \\"./FloatFilter\\";
export { FloatWithAggregatesFilter } from \\"./FloatWithAggregatesFilter\\";
export { IntFieldUpdateOperationsInput } from \\"./IntFieldUpdateOperationsInput\\";
export { IntFilter } from \\"./IntFilter\\";
export { IntWithAggregatesFilter } from \\"./IntWithAggregatesFilter\\";
export { NestedFloatFilter } from \\"./NestedFloatFilter\\";
export { NestedFloatWithAggregatesFilter } from \\"./NestedFloatWithAggregatesFilter\\";
export { NestedIntFilter } from \\"./NestedIntFilter\\";
export { NestedIntWithAggregatesFilter } from \\"./NestedIntWithAggregatesFilter\\";
export { NestedStringFilter } from \\"./NestedStringFilter\\";
export { NestedStringWithAggregatesFilter } from \\"./NestedStringWithAggregatesFilter\\";
export { SecondModelAvgOrderByAggregateInput } from \\"./SecondModelAvgOrderByAggregateInput\\";
export { SecondModelCountOrderByAggregateInput } from \\"./SecondModelCountOrderByAggregateInput\\";
export { SecondModelCreateInput } from \\"./SecondModelCreateInput\\";
export { SecondModelCreateManyFirstModelFieldInput } from \\"./SecondModelCreateManyFirstModelFieldInput\\";
export { SecondModelCreateManyFirstModelFieldInputEnvelope } from \\"./SecondModelCreateManyFirstModelFieldInputEnvelope\\";
export { SecondModelCreateManyInput } from \\"./SecondModelCreateManyInput\\";
export { SecondModelCreateNestedManyWithoutFirstModelFieldInput } from \\"./SecondModelCreateNestedManyWithoutFirstModelFieldInput\\";
export { SecondModelCreateOrConnectWithoutFirstModelFieldInput } from \\"./SecondModelCreateOrConnectWithoutFirstModelFieldInput\\";
export { SecondModelCreateWithoutFirstModelFieldInput } from \\"./SecondModelCreateWithoutFirstModelFieldInput\\";
export { SecondModelListRelationFilter } from \\"./SecondModelListRelationFilter\\";
export { SecondModelMaxOrderByAggregateInput } from \\"./SecondModelMaxOrderByAggregateInput\\";
export { SecondModelMinOrderByAggregateInput } from \\"./SecondModelMinOrderByAggregateInput\\";
export { SecondModelOrderByRelationAggregateInput } from \\"./SecondModelOrderByRelationAggregateInput\\";
export { SecondModelOrderByWithAggregationInput } from \\"./SecondModelOrderByWithAggregationInput\\";
export { SecondModelOrderByWithRelationInput } from \\"./SecondModelOrderByWithRelationInput\\";
export { SecondModelScalarWhereInput } from \\"./SecondModelScalarWhereInput\\";
export { SecondModelScalarWhereWithAggregatesInput } from \\"./SecondModelScalarWhereWithAggregatesInput\\";
export { SecondModelSumOrderByAggregateInput } from \\"./SecondModelSumOrderByAggregateInput\\";
export { SecondModelUpdateInput } from \\"./SecondModelUpdateInput\\";
export { SecondModelUpdateManyMutationInput } from \\"./SecondModelUpdateManyMutationInput\\";
export { SecondModelUpdateManyWithWhereWithoutFirstModelFieldInput } from \\"./SecondModelUpdateManyWithWhereWithoutFirstModelFieldInput\\";
export { SecondModelUpdateManyWithoutFirstModelFieldNestedInput } from \\"./SecondModelUpdateManyWithoutFirstModelFieldNestedInput\\";
export { SecondModelUpdateWithWhereUniqueWithoutFirstModelFieldInput } from \\"./SecondModelUpdateWithWhereUniqueWithoutFirstModelFieldInput\\";
export { SecondModelUpdateWithoutFirstModelFieldInput } from \\"./SecondModelUpdateWithoutFirstModelFieldInput\\";
export { SecondModelUpsertWithWhereUniqueWithoutFirstModelFieldInput } from \\"./SecondModelUpsertWithWhereUniqueWithoutFirstModelFieldInput\\";
export { SecondModelWhereInput } from \\"./SecondModelWhereInput\\";
export { SecondModelWhereUniqueInput } from \\"./SecondModelWhereUniqueInput\\";
export { StringFieldUpdateOperationsInput } from \\"./StringFieldUpdateOperationsInput\\";
export { StringFilter } from \\"./StringFilter\\";
export { StringWithAggregatesFilter } from \\"./StringWithAggregatesFilter\\";
"
`;

exports[`inputs should properly generate input type classes for filtering scalar fields: BoolFilter 1`] = `
"import { Args, ArgsType, Context, Field, Float, ID, Info, InputType, Int, Mutation, ObjectType, Query, ResolveField, Resolver, Root, registerEnumType } from \\"@nestjs/graphql\\";
import * as GraphQLScalars from \\"graphql-scalars\\";
import { Prisma } from \\"../../../../helpers/prisma-client-mock\\";
import { DecimalJSScalar } from \\"../../scalars\\";
import { NestedBoolFilter } from \\"../inputs/NestedBoolFilter\\";

@InputType(\\"BoolFilter\\", {
  isAbstract: true
})
export class BoolFilter {
  @Field(_type => Boolean, {
    nullable: true
  })
  equals?: boolean | undefined;

  @Field(_type => NestedBoolFilter, {
    nullable: true
  })
  not?: NestedBoolFilter | undefined;
}
"
`;

exports[`inputs should properly generate input type classes for filtering scalar fields: DateTimeFilter 1`] = `
"import { Args, ArgsType, Context, Field, Float, ID, Info, InputType, Int, Mutation, ObjectType, Query, ResolveField, Resolver, Root, registerEnumType } from \\"@nestjs/graphql\\";
import * as GraphQLScalars from \\"graphql-scalars\\";
import { Prisma } from \\"../../../../helpers/prisma-client-mock\\";
import { DecimalJSScalar } from \\"../../scalars\\";
import { NestedDateTimeFilter } from \\"../inputs/NestedDateTimeFilter\\";

@InputType(\\"DateTimeFilter\\", {
  isAbstract: true
})
export class DateTimeFilter {
  @Field(_type => Date, {
    nullable: true
  })
  equals?: Date | undefined;

  @Field(_type => [Date], {
    nullable: true
  })
  in?: Date[] | undefined;

  @Field(_type => [Date], {
    nullable: true
  })
  notIn?: Date[] | undefined;

  @Field(_type => Date, {
    nullable: true
  })
  lt?: Date | undefined;

  @Field(_type => Date, {
    nullable: true
  })
  lte?: Date | undefined;

  @Field(_type => Date, {
    nullable: true
  })
  gt?: Date | undefined;

  @Field(_type => Date, {
    nullable: true
  })
  gte?: Date | undefined;

  @Field(_type => NestedDateTimeFilter, {
    nullable: true
  })
  not?: NestedDateTimeFilter | undefined;
}
"
`;

exports[`inputs should properly generate input type classes for filtering scalar fields: FloatFilter 1`] = `
"import { Args, ArgsType, Context, Field, Float, ID, Info, InputType, Int, Mutation, ObjectType, Query, ResolveField, Resolver, Root, registerEnumType } from \\"@nestjs/graphql\\";
import * as GraphQLScalars from \\"graphql-scalars\\";
import { Prisma } from \\"../../../../helpers/prisma-client-mock\\";
import { DecimalJSScalar } from \\"../../scalars\\";
import { NestedFloatFilter } from \\"../inputs/NestedFloatFilter\\";

@InputType(\\"FloatFilter\\", {
  isAbstract: true
})
export class FloatFilter {
  @Field(_type => Float, {
    nullable: true
  })
  equals?: number | undefined;

  @Field(_type => [Float], {
    nullable: true
  })
  in?: number[] | undefined;

  @Field(_type => [Float], {
    nullable: true
  })
  notIn?: number[] | undefined;

  @Field(_type => Float, {
    nullable: true
  })
  lt?: number | undefined;

  @Field(_type => Float, {
    nullable: true
  })
  lte?: number | undefined;

  @Field(_type => Float, {
    nullable: true
  })
  gt?: number | undefined;

  @Field(_type => Float, {
    nullable: true
  })
  gte?: number | undefined;

  @Field(_type => NestedFloatFilter, {
    nullable: true
  })
  not?: NestedFloatFilter | undefined;
}
"
`;

exports[`inputs should properly generate input type classes for filtering scalar fields: IntFilter 1`] = `
"import { Args, ArgsType, Context, Field, Float, ID, Info, InputType, Int, Mutation, ObjectType, Query, ResolveField, Resolver, Root, registerEnumType } from \\"@nestjs/graphql\\";
import * as GraphQLScalars from \\"graphql-scalars\\";
import { Prisma } from \\"../../../../helpers/prisma-client-mock\\";
import { DecimalJSScalar } from \\"../../scalars\\";
import { NestedIntFilter } from \\"../inputs/NestedIntFilter\\";

@InputType(\\"IntFilter\\", {
  isAbstract: true
})
export class IntFilter {
  @Field(_type => Int, {
    nullable: true
  })
  equals?: number | undefined;

  @Field(_type => [Int], {
    nullable: true
  })
  in?: number[] | undefined;

  @Field(_type => [Int], {
    nullable: true
  })
  notIn?: number[] | undefined;

  @Field(_type => Int, {
    nullable: true
  })
  lt?: number | undefined;

  @Field(_type => Int, {
    nullable: true
  })
  lte?: number | undefined;

  @Field(_type => Int, {
    nullable: true
  })
  gt?: number | undefined;

  @Field(_type => Int, {
    nullable: true
  })
  gte?: number | undefined;

  @Field(_type => NestedIntFilter, {
    nullable: true
  })
  not?: NestedIntFilter | undefined;
}
"
`;

exports[`inputs should properly generate input type classes for filtering scalar fields: IntNullableListFilter 1`] = `
"import { Args, ArgsType, Context, Field, Float, ID, Info, InputType, Int, Mutation, ObjectType, Query, ResolveField, Resolver, Root, registerEnumType } from \\"@nestjs/graphql\\";
import * as GraphQLScalars from \\"graphql-scalars\\";
import { Prisma } from \\"../../../../helpers/prisma-client-mock\\";
import { DecimalJSScalar } from \\"../../scalars\\";

@InputType(\\"IntNullableListFilter\\", {
  isAbstract: true
})
export class IntNullableListFilter {
  @Field(_type => [Int], {
    nullable: true
  })
  equals?: number[] | undefined;

  @Field(_type => Int, {
    nullable: true
  })
  has?: number | undefined;

  @Field(_type => [Int], {
    nullable: true
  })
  hasEvery?: number[] | undefined;

  @Field(_type => [Int], {
    nullable: true
  })
  hasSome?: number[] | undefined;

  @Field(_type => Boolean, {
    nullable: true
  })
  isEmpty?: boolean | undefined;
}
"
`;

exports[`inputs should properly generate input type classes for filtering scalar fields: JsonFilter 1`] = `
"import { Args, ArgsType, Context, Field, Float, ID, Info, InputType, Int, Mutation, ObjectType, Query, ResolveField, Resolver, Root, registerEnumType } from \\"@nestjs/graphql\\";
import * as GraphQLScalars from \\"graphql-scalars\\";
import { Prisma } from \\"../../../../helpers/prisma-client-mock\\";
import { DecimalJSScalar } from \\"../../scalars\\";

@InputType(\\"JsonFilter\\", {
  isAbstract: true
})
export class JsonFilter {
  @Field(_type => GraphQLScalars.JSONResolver, {
    nullable: true
  })
  equals?: Prisma.InputJsonValue | undefined;

  @Field(_type => [String], {
    nullable: true
  })
  path?: string[] | undefined;

  @Field(_type => String, {
    nullable: true
  })
  string_contains?: string | undefined;

  @Field(_type => String, {
    nullable: true
  })
  string_starts_with?: string | undefined;

  @Field(_type => String, {
    nullable: true
  })
  string_ends_with?: string | undefined;

  @Field(_type => GraphQLScalars.JSONResolver, {
    nullable: true
  })
  array_contains?: Prisma.InputJsonValue | undefined;

  @Field(_type => GraphQLScalars.JSONResolver, {
    nullable: true
  })
  array_starts_with?: Prisma.InputJsonValue | undefined;

  @Field(_type => GraphQLScalars.JSONResolver, {
    nullable: true
  })
  array_ends_with?: Prisma.InputJsonValue | undefined;

  @Field(_type => GraphQLScalars.JSONResolver, {
    nullable: true
  })
  lt?: Prisma.InputJsonValue | undefined;

  @Field(_type => GraphQLScalars.JSONResolver, {
    nullable: true
  })
  lte?: Prisma.InputJsonValue | undefined;

  @Field(_type => GraphQLScalars.JSONResolver, {
    nullable: true
  })
  gt?: Prisma.InputJsonValue | undefined;

  @Field(_type => GraphQLScalars.JSONResolver, {
    nullable: true
  })
  gte?: Prisma.InputJsonValue | undefined;

  @Field(_type => GraphQLScalars.JSONResolver, {
    nullable: true
  })
  not?: Prisma.InputJsonValue | undefined;
}
"
`;

exports[`inputs should properly generate input type classes for filtering scalar fields: NestedBoolFilter 1`] = `
"import { Args, ArgsType, Context, Field, Float, ID, Info, InputType, Int, Mutation, ObjectType, Query, ResolveField, Resolver, Root, registerEnumType } from \\"@nestjs/graphql\\";
import * as GraphQLScalars from \\"graphql-scalars\\";
import { Prisma } from \\"../../../../helpers/prisma-client-mock\\";
import { DecimalJSScalar } from \\"../../scalars\\";

@InputType(\\"NestedBoolFilter\\", {
  isAbstract: true
})
export class NestedBoolFilter {
  @Field(_type => Boolean, {
    nullable: true
  })
  equals?: boolean | undefined;

  @Field(_type => NestedBoolFilter, {
    nullable: true
  })
  not?: NestedBoolFilter | undefined;
}
"
`;

exports[`inputs should properly generate input type classes for filtering scalar fields: NestedDateTimeFilter 1`] = `
"import { Args, ArgsType, Context, Field, Float, ID, Info, InputType, Int, Mutation, ObjectType, Query, ResolveField, Resolver, Root, registerEnumType } from \\"@nestjs/graphql\\";
import * as GraphQLScalars from \\"graphql-scalars\\";
import { Prisma } from \\"../../../../helpers/prisma-client-mock\\";
import { DecimalJSScalar } from \\"../../scalars\\";

@InputType(\\"NestedDateTimeFilter\\", {
  isAbstract: true
})
export class NestedDateTimeFilter {
  @Field(_type => Date, {
    nullable: true
  })
  equals?: Date | undefined;

  @Field(_type => [Date], {
    nullable: true
  })
  in?: Date[] | undefined;

  @Field(_type => [Date], {
    nullable: true
  })
  notIn?: Date[] | undefined;

  @Field(_type => Date, {
    nullable: true
  })
  lt?: Date | undefined;

  @Field(_type => Date, {
    nullable: true
  })
  lte?: Date | undefined;

  @Field(_type => Date, {
    nullable: true
  })
  gt?: Date | undefined;

  @Field(_type => Date, {
    nullable: true
  })
  gte?: Date | undefined;

  @Field(_type => NestedDateTimeFilter, {
    nullable: true
  })
  not?: NestedDateTimeFilter | undefined;
}
"
`;

exports[`inputs should properly generate input type classes for filtering scalar fields: NestedFloatFilter 1`] = `
"import { Args, ArgsType, Context, Field, Float, ID, Info, InputType, Int, Mutation, ObjectType, Query, ResolveField, Resolver, Root, registerEnumType } from \\"@nestjs/graphql\\";
import * as GraphQLScalars from \\"graphql-scalars\\";
import { Prisma } from \\"../../../../helpers/prisma-client-mock\\";
import { DecimalJSScalar } from \\"../../scalars\\";

@InputType(\\"NestedFloatFilter\\", {
  isAbstract: true
})
export class NestedFloatFilter {
  @Field(_type => Float, {
    nullable: true
  })
  equals?: number | undefined;

  @Field(_type => [Float], {
    nullable: true
  })
  in?: number[] | undefined;

  @Field(_type => [Float], {
    nullable: true
  })
  notIn?: number[] | undefined;

  @Field(_type => Float, {
    nullable: true
  })
  lt?: number | undefined;

  @Field(_type => Float, {
    nullable: true
  })
  lte?: number | undefined;

  @Field(_type => Float, {
    nullable: true
  })
  gt?: number | undefined;

  @Field(_type => Float, {
    nullable: true
  })
  gte?: number | undefined;

  @Field(_type => NestedFloatFilter, {
    nullable: true
  })
  not?: NestedFloatFilter | undefined;
}
"
`;

exports[`inputs should properly generate input type classes for filtering scalar fields: NestedIntFilter 1`] = `
"import { Args, ArgsType, Context, Field, Float, ID, Info, InputType, Int, Mutation, ObjectType, Query, ResolveField, Resolver, Root, registerEnumType } from \\"@nestjs/graphql\\";
import * as GraphQLScalars from \\"graphql-scalars\\";
import { Prisma } from \\"../../../../helpers/prisma-client-mock\\";
import { DecimalJSScalar } from \\"../../scalars\\";

@InputType(\\"NestedIntFilter\\", {
  isAbstract: true
})
export class NestedIntFilter {
  @Field(_type => Int, {
    nullable: true
  })
  equals?: number | undefined;

  @Field(_type => [Int], {
    nullable: true
  })
  in?: number[] | undefined;

  @Field(_type => [Int], {
    nullable: true
  })
  notIn?: number[] | undefined;

  @Field(_type => Int, {
    nullable: true
  })
  lt?: number | undefined;

  @Field(_type => Int, {
    nullable: true
  })
  lte?: number | undefined;

  @Field(_type => Int, {
    nullable: true
  })
  gt?: number | undefined;

  @Field(_type => Int, {
    nullable: true
  })
  gte?: number | undefined;

  @Field(_type => NestedIntFilter, {
    nullable: true
  })
  not?: NestedIntFilter | undefined;
}
"
`;

exports[`inputs should properly generate input type classes for filtering scalar fields: NestedJsonFilter 1`] = `
"import { Args, ArgsType, Context, Field, Float, ID, Info, InputType, Int, Mutation, ObjectType, Query, ResolveField, Resolver, Root, registerEnumType } from \\"@nestjs/graphql\\";
import * as GraphQLScalars from \\"graphql-scalars\\";
import { Prisma } from \\"../../../../helpers/prisma-client-mock\\";
import { DecimalJSScalar } from \\"../../scalars\\";

@InputType(\\"NestedJsonFilter\\", {
  isAbstract: true
})
export class NestedJsonFilter {
  @Field(_type => GraphQLScalars.JSONResolver, {
    nullable: true
  })
  equals?: Prisma.InputJsonValue | undefined;

  @Field(_type => [String], {
    nullable: true
  })
  path?: string[] | undefined;

  @Field(_type => String, {
    nullable: true
  })
  string_contains?: string | undefined;

  @Field(_type => String, {
    nullable: true
  })
  string_starts_with?: string | undefined;

  @Field(_type => String, {
    nullable: true
  })
  string_ends_with?: string | undefined;

  @Field(_type => GraphQLScalars.JSONResolver, {
    nullable: true
  })
  array_contains?: Prisma.InputJsonValue | undefined;

  @Field(_type => GraphQLScalars.JSONResolver, {
    nullable: true
  })
  array_starts_with?: Prisma.InputJsonValue | undefined;

  @Field(_type => GraphQLScalars.JSONResolver, {
    nullable: true
  })
  array_ends_with?: Prisma.InputJsonValue | undefined;

  @Field(_type => GraphQLScalars.JSONResolver, {
    nullable: true
  })
  lt?: Prisma.InputJsonValue | undefined;

  @Field(_type => GraphQLScalars.JSONResolver, {
    nullable: true
  })
  lte?: Prisma.InputJsonValue | undefined;

  @Field(_type => GraphQLScalars.JSONResolver, {
    nullable: true
  })
  gt?: Prisma.InputJsonValue | undefined;

  @Field(_type => GraphQLScalars.JSONResolver, {
    nullable: true
  })
  gte?: Prisma.InputJsonValue | undefined;

  @Field(_type => GraphQLScalars.JSONResolver, {
    nullable: true
  })
  not?: Prisma.InputJsonValue | undefined;
}
"
`;

exports[`inputs should properly generate input type classes for filtering scalar fields: NestedStringNullableFilter 1`] = `
"import { Args, ArgsType, Context, Field, Float, ID, Info, InputType, Int, Mutation, ObjectType, Query, ResolveField, Resolver, Root, registerEnumType } from \\"@nestjs/graphql\\";
import * as GraphQLScalars from \\"graphql-scalars\\";
import { Prisma } from \\"../../../../helpers/prisma-client-mock\\";
import { DecimalJSScalar } from \\"../../scalars\\";

@InputType(\\"NestedStringNullableFilter\\", {
  isAbstract: true
})
export class NestedStringNullableFilter {
  @Field(_type => String, {
    nullable: true
  })
  equals?: string | undefined;

  @Field(_type => [String], {
    nullable: true
  })
  in?: string[] | undefined;

  @Field(_type => [String], {
    nullable: true
  })
  notIn?: string[] | undefined;

  @Field(_type => String, {
    nullable: true
  })
  lt?: string | undefined;

  @Field(_type => String, {
    nullable: true
  })
  lte?: string | undefined;

  @Field(_type => String, {
    nullable: true
  })
  gt?: string | undefined;

  @Field(_type => String, {
    nullable: true
  })
  gte?: string | undefined;

  @Field(_type => String, {
    nullable: true
  })
  contains?: string | undefined;

  @Field(_type => String, {
    nullable: true
  })
  startsWith?: string | undefined;

  @Field(_type => String, {
    nullable: true
  })
  endsWith?: string | undefined;

  @Field(_type => NestedStringNullableFilter, {
    nullable: true
  })
  not?: NestedStringNullableFilter | undefined;
}
"
`;

exports[`inputs should properly generate input type classes for filtering scalar fields: StringFilter 1`] = `
"import { Args, ArgsType, Context, Field, Float, ID, Info, InputType, Int, Mutation, ObjectType, Query, ResolveField, Resolver, Root, registerEnumType } from \\"@nestjs/graphql\\";
import * as GraphQLScalars from \\"graphql-scalars\\";
import { Prisma } from \\"../../../../helpers/prisma-client-mock\\";
import { DecimalJSScalar } from \\"../../scalars\\";
import { NestedStringFilter } from \\"../inputs/NestedStringFilter\\";
import { QueryMode } from \\"../../enums/QueryMode\\";

@InputType(\\"StringFilter\\", {
  isAbstract: true
})
export class StringFilter {
  @Field(_type => String, {
    nullable: true
  })
  equals?: string | undefined;

  @Field(_type => [String], {
    nullable: true
  })
  in?: string[] | undefined;

  @Field(_type => [String], {
    nullable: true
  })
  notIn?: string[] | undefined;

  @Field(_type => String, {
    nullable: true
  })
  lt?: string | undefined;

  @Field(_type => String, {
    nullable: true
  })
  lte?: string | undefined;

  @Field(_type => String, {
    nullable: true
  })
  gt?: string | undefined;

  @Field(_type => String, {
    nullable: true
  })
  gte?: string | undefined;

  @Field(_type => String, {
    nullable: true
  })
  contains?: string | undefined;

  @Field(_type => String, {
    nullable: true
  })
  startsWith?: string | undefined;

  @Field(_type => String, {
    nullable: true
  })
  endsWith?: string | undefined;

  @Field(_type => QueryMode, {
    nullable: true
  })
  mode?: \\"default\\" | \\"insensitive\\" | undefined;

  @Field(_type => NestedStringFilter, {
    nullable: true
  })
  not?: NestedStringFilter | undefined;
}
"
`;

exports[`inputs should properly generate input type classes for filtering scalar fields: StringNullableFilter 1`] = `
"import { Args, ArgsType, Context, Field, Float, ID, Info, InputType, Int, Mutation, ObjectType, Query, ResolveField, Resolver, Root, registerEnumType } from \\"@nestjs/graphql\\";
import * as GraphQLScalars from \\"graphql-scalars\\";
import { Prisma } from \\"../../../../helpers/prisma-client-mock\\";
import { DecimalJSScalar } from \\"../../scalars\\";
import { NestedStringNullableFilter } from \\"../inputs/NestedStringNullableFilter\\";
import { QueryMode } from \\"../../enums/QueryMode\\";

@InputType(\\"StringNullableFilter\\", {
  isAbstract: true
})
export class StringNullableFilter {
  @Field(_type => String, {
    nullable: true
  })
  equals?: string | undefined;

  @Field(_type => [String], {
    nullable: true
  })
  in?: string[] | undefined;

  @Field(_type => [String], {
    nullable: true
  })
  notIn?: string[] | undefined;

  @Field(_type => String, {
    nullable: true
  })
  lt?: string | undefined;

  @Field(_type => String, {
    nullable: true
  })
  lte?: string | undefined;

  @Field(_type => String, {
    nullable: true
  })
  gt?: string | undefined;

  @Field(_type => String, {
    nullable: true
  })
  gte?: string | undefined;

  @Field(_type => String, {
    nullable: true
  })
  contains?: string | undefined;

  @Field(_type => String, {
    nullable: true
  })
  startsWith?: string | undefined;

  @Field(_type => String, {
    nullable: true
  })
  endsWith?: string | undefined;

  @Field(_type => QueryMode, {
    nullable: true
  })
  mode?: \\"default\\" | \\"insensitive\\" | undefined;

  @Field(_type => NestedStringNullableFilter, {
    nullable: true
  })
  not?: NestedStringNullableFilter | undefined;
}
"
`;

exports[`inputs should properly generate input type classes for filtering scalar fields: StringNullableListFilter 1`] = `
"import { Args, ArgsType, Context, Field, Float, ID, Info, InputType, Int, Mutation, ObjectType, Query, ResolveField, Resolver, Root, registerEnumType } from \\"@nestjs/graphql\\";
import * as GraphQLScalars from \\"graphql-scalars\\";
import { Prisma } from \\"../../../../helpers/prisma-client-mock\\";
import { DecimalJSScalar } from \\"../../scalars\\";

@InputType(\\"StringNullableListFilter\\", {
  isAbstract: true
})
export class StringNullableListFilter {
  @Field(_type => [String], {
    nullable: true
  })
  equals?: string[] | undefined;

  @Field(_type => String, {
    nullable: true
  })
  has?: string | undefined;

  @Field(_type => [String], {
    nullable: true
  })
  hasEvery?: string[] | undefined;

  @Field(_type => [String], {
    nullable: true
  })
  hasSome?: string[] | undefined;

  @Field(_type => Boolean, {
    nullable: true
  })
  isEmpty?: boolean | undefined;
}
"
`;

exports[`inputs should properly generate input type classes for filtering scalar fields: index 1`] = `
"export { BoolFieldUpdateOperationsInput } from \\"./BoolFieldUpdateOperationsInput\\";
export { BoolFilter } from \\"./BoolFilter\\";
export { BoolNullableFilter } from \\"./BoolNullableFilter\\";
export { BoolNullableWithAggregatesFilter } from \\"./BoolNullableWithAggregatesFilter\\";
export { BoolWithAggregatesFilter } from \\"./BoolWithAggregatesFilter\\";
export { DateTimeFieldUpdateOperationsInput } from \\"./DateTimeFieldUpdateOperationsInput\\";
export { DateTimeFilter } from \\"./DateTimeFilter\\";
export { DateTimeNullableFilter } from \\"./DateTimeNullableFilter\\";
export { DateTimeNullableWithAggregatesFilter } from \\"./DateTimeNullableWithAggregatesFilter\\";
export { DateTimeWithAggregatesFilter } from \\"./DateTimeWithAggregatesFilter\\";
export { FloatFieldUpdateOperationsInput } from \\"./FloatFieldUpdateOperationsInput\\";
export { FloatFilter } from \\"./FloatFilter\\";
export { FloatNullableFilter } from \\"./FloatNullableFilter\\";
export { FloatNullableWithAggregatesFilter } from \\"./FloatNullableWithAggregatesFilter\\";
export { FloatWithAggregatesFilter } from \\"./FloatWithAggregatesFilter\\";
export { IntFieldUpdateOperationsInput } from \\"./IntFieldUpdateOperationsInput\\";
export { IntFilter } from \\"./IntFilter\\";
export { IntNullableFilter } from \\"./IntNullableFilter\\";
export { IntNullableListFilter } from \\"./IntNullableListFilter\\";
export { IntNullableWithAggregatesFilter } from \\"./IntNullableWithAggregatesFilter\\";
export { IntWithAggregatesFilter } from \\"./IntWithAggregatesFilter\\";
export { JsonFilter } from \\"./JsonFilter\\";
export { JsonNullableFilter } from \\"./JsonNullableFilter\\";
export { JsonNullableWithAggregatesFilter } from \\"./JsonNullableWithAggregatesFilter\\";
export { JsonWithAggregatesFilter } from \\"./JsonWithAggregatesFilter\\";
export { NestedBoolFilter } from \\"./NestedBoolFilter\\";
export { NestedBoolNullableFilter } from \\"./NestedBoolNullableFilter\\";
export { NestedBoolNullableWithAggregatesFilter } from \\"./NestedBoolNullableWithAggregatesFilter\\";
export { NestedBoolWithAggregatesFilter } from \\"./NestedBoolWithAggregatesFilter\\";
export { NestedDateTimeFilter } from \\"./NestedDateTimeFilter\\";
export { NestedDateTimeNullableFilter } from \\"./NestedDateTimeNullableFilter\\";
export { NestedDateTimeNullableWithAggregatesFilter } from \\"./NestedDateTimeNullableWithAggregatesFilter\\";
export { NestedDateTimeWithAggregatesFilter } from \\"./NestedDateTimeWithAggregatesFilter\\";
export { NestedFloatFilter } from \\"./NestedFloatFilter\\";
export { NestedFloatNullableFilter } from \\"./NestedFloatNullableFilter\\";
export { NestedFloatNullableWithAggregatesFilter } from \\"./NestedFloatNullableWithAggregatesFilter\\";
export { NestedFloatWithAggregatesFilter } from \\"./NestedFloatWithAggregatesFilter\\";
export { NestedIntFilter } from \\"./NestedIntFilter\\";
export { NestedIntNullableFilter } from \\"./NestedIntNullableFilter\\";
export { NestedIntNullableWithAggregatesFilter } from \\"./NestedIntNullableWithAggregatesFilter\\";
export { NestedIntWithAggregatesFilter } from \\"./NestedIntWithAggregatesFilter\\";
export { NestedJsonFilter } from \\"./NestedJsonFilter\\";
export { NestedJsonNullableFilter } from \\"./NestedJsonNullableFilter\\";
export { NestedStringFilter } from \\"./NestedStringFilter\\";
export { NestedStringNullableFilter } from \\"./NestedStringNullableFilter\\";
export { NestedStringNullableWithAggregatesFilter } from \\"./NestedStringNullableWithAggregatesFilter\\";
export { NestedStringWithAggregatesFilter } from \\"./NestedStringWithAggregatesFilter\\";
export { NullableBoolFieldUpdateOperationsInput } from \\"./NullableBoolFieldUpdateOperationsInput\\";
export { NullableDateTimeFieldUpdateOperationsInput } from \\"./NullableDateTimeFieldUpdateOperationsInput\\";
export { NullableFloatFieldUpdateOperationsInput } from \\"./NullableFloatFieldUpdateOperationsInput\\";
export { NullableIntFieldUpdateOperationsInput } from \\"./NullableIntFieldUpdateOperationsInput\\";
export { NullableStringFieldUpdateOperationsInput } from \\"./NullableStringFieldUpdateOperationsInput\\";
export { SampleModelAvgOrderByAggregateInput } from \\"./SampleModelAvgOrderByAggregateInput\\";
export { SampleModelCountOrderByAggregateInput } from \\"./SampleModelCountOrderByAggregateInput\\";
export { SampleModelCreateInput } from \\"./SampleModelCreateInput\\";
export { SampleModelCreateManyInput } from \\"./SampleModelCreateManyInput\\";
export { SampleModelCreateintArrayFieldInput } from \\"./SampleModelCreateintArrayFieldInput\\";
export { SampleModelCreatestringArrayFieldInput } from \\"./SampleModelCreatestringArrayFieldInput\\";
export { SampleModelMaxOrderByAggregateInput } from \\"./SampleModelMaxOrderByAggregateInput\\";
export { SampleModelMinOrderByAggregateInput } from \\"./SampleModelMinOrderByAggregateInput\\";
export { SampleModelOrderByWithAggregationInput } from \\"./SampleModelOrderByWithAggregationInput\\";
export { SampleModelOrderByWithRelationInput } from \\"./SampleModelOrderByWithRelationInput\\";
export { SampleModelScalarWhereWithAggregatesInput } from \\"./SampleModelScalarWhereWithAggregatesInput\\";
export { SampleModelSumOrderByAggregateInput } from \\"./SampleModelSumOrderByAggregateInput\\";
export { SampleModelUpdateInput } from \\"./SampleModelUpdateInput\\";
export { SampleModelUpdateManyMutationInput } from \\"./SampleModelUpdateManyMutationInput\\";
export { SampleModelUpdateintArrayFieldInput } from \\"./SampleModelUpdateintArrayFieldInput\\";
export { SampleModelUpdatestringArrayFieldInput } from \\"./SampleModelUpdatestringArrayFieldInput\\";
export { SampleModelWhereInput } from \\"./SampleModelWhereInput\\";
export { SampleModelWhereUniqueInput } from \\"./SampleModelWhereUniqueInput\\";
export { StringFieldUpdateOperationsInput } from \\"./StringFieldUpdateOperationsInput\\";
export { StringFilter } from \\"./StringFilter\\";
export { StringNullableFilter } from \\"./StringNullableFilter\\";
export { StringNullableListFilter } from \\"./StringNullableListFilter\\";
export { StringNullableWithAggregatesFilter } from \\"./StringNullableWithAggregatesFilter\\";
export { StringWithAggregatesFilter } from \\"./StringWithAggregatesFilter\\";
"
`;

exports[`inputs should properly generate input type classes for inserting many entities: FirstModelCreateManyInput 1`] = `
"import { Args, ArgsType, Context, Field, Float, ID, Info, InputType, Int, Mutation, ObjectType, Query, ResolveField, Resolver, Root, registerEnumType } from \\"@nestjs/graphql\\";
import * as GraphQLScalars from \\"graphql-scalars\\";
import { Prisma } from \\"../../../../helpers/prisma-client-mock\\";
import { DecimalJSScalar } from \\"../../scalars\\";

@InputType(\\"FirstModelCreateManyInput\\", {
  isAbstract: true
})
export class FirstModelCreateManyInput {
  @Field(_type => Int, {
    nullable: true
  })
  idField?: number | undefined;

  @Field(_type => String, {
    nullable: false
  })
  uniqueStringField!: string;

  @Field(_type => Float, {
    nullable: false
  })
  floatField!: number;
}
"
`;

exports[`inputs should properly generate input type classes for inserting many entities: SecondModelCreateManyFirstModelFieldInput 1`] = `
"import { Args, ArgsType, Context, Field, Float, ID, Info, InputType, Int, Mutation, ObjectType, Query, ResolveField, Resolver, Root, registerEnumType } from \\"@nestjs/graphql\\";
import * as GraphQLScalars from \\"graphql-scalars\\";
import { Prisma } from \\"../../../../helpers/prisma-client-mock\\";
import { DecimalJSScalar } from \\"../../scalars\\";

@InputType(\\"SecondModelCreateManyFirstModelFieldInput\\", {
  isAbstract: true
})
export class SecondModelCreateManyFirstModelFieldInput {
  @Field(_type => Int, {
    nullable: true
  })
  idField?: number | undefined;

  @Field(_type => String, {
    nullable: false
  })
  uniqueStringField!: string;

  @Field(_type => Float, {
    nullable: false
  })
  floatField!: number;
}
"
`;

exports[`inputs should properly generate input type classes for inserting many entities: SecondModelCreateManyFirstModelFieldInputEnvelope 1`] = `
"import { Args, ArgsType, Context, Field, Float, ID, Info, InputType, Int, Mutation, ObjectType, Query, ResolveField, Resolver, Root, registerEnumType } from \\"@nestjs/graphql\\";
import * as GraphQLScalars from \\"graphql-scalars\\";
import { Prisma } from \\"../../../../helpers/prisma-client-mock\\";
import { DecimalJSScalar } from \\"../../scalars\\";
import { SecondModelCreateManyFirstModelFieldInput } from \\"../inputs/SecondModelCreateManyFirstModelFieldInput\\";

@InputType(\\"SecondModelCreateManyFirstModelFieldInputEnvelope\\", {
  isAbstract: true
})
export class SecondModelCreateManyFirstModelFieldInputEnvelope {
  @Field(_type => [SecondModelCreateManyFirstModelFieldInput], {
    nullable: false
  })
  data!: SecondModelCreateManyFirstModelFieldInput[];

  @Field(_type => Boolean, {
    nullable: true
  })
  skipDuplicates?: boolean | undefined;
}
"
`;

exports[`inputs should properly generate input type classes for inserting many entities: SecondModelCreateManyInput 1`] = `
"import { Args, ArgsType, Context, Field, Float, ID, Info, InputType, Int, Mutation, ObjectType, Query, ResolveField, Resolver, Root, registerEnumType } from \\"@nestjs/graphql\\";
import * as GraphQLScalars from \\"graphql-scalars\\";
import { Prisma } from \\"../../../../helpers/prisma-client-mock\\";
import { DecimalJSScalar } from \\"../../scalars\\";

@InputType(\\"SecondModelCreateManyInput\\", {
  isAbstract: true
})
export class SecondModelCreateManyInput {
  @Field(_type => Int, {
    nullable: true
  })
  idField?: number | undefined;

  @Field(_type => String, {
    nullable: false
  })
  uniqueStringField!: string;

  @Field(_type => Float, {
    nullable: false
  })
  floatField!: number;

  @Field(_type => Int, {
    nullable: false
  })
  firstModelFieldId!: number;
}
"
`;

exports[`inputs should properly generate input type classes for inserting many entities: index 1`] = `
"export { FirstModelAvgOrderByAggregateInput } from \\"./FirstModelAvgOrderByAggregateInput\\";
export { FirstModelCountOrderByAggregateInput } from \\"./FirstModelCountOrderByAggregateInput\\";
export { FirstModelCreateInput } from \\"./FirstModelCreateInput\\";
export { FirstModelCreateManyInput } from \\"./FirstModelCreateManyInput\\";
export { FirstModelCreateNestedOneWithoutSecondModelsFieldInput } from \\"./FirstModelCreateNestedOneWithoutSecondModelsFieldInput\\";
export { FirstModelCreateOrConnectWithoutSecondModelsFieldInput } from \\"./FirstModelCreateOrConnectWithoutSecondModelsFieldInput\\";
export { FirstModelCreateWithoutSecondModelsFieldInput } from \\"./FirstModelCreateWithoutSecondModelsFieldInput\\";
export { FirstModelMaxOrderByAggregateInput } from \\"./FirstModelMaxOrderByAggregateInput\\";
export { FirstModelMinOrderByAggregateInput } from \\"./FirstModelMinOrderByAggregateInput\\";
export { FirstModelOrderByWithAggregationInput } from \\"./FirstModelOrderByWithAggregationInput\\";
export { FirstModelOrderByWithRelationInput } from \\"./FirstModelOrderByWithRelationInput\\";
export { FirstModelRelationFilter } from \\"./FirstModelRelationFilter\\";
export { FirstModelScalarWhereWithAggregatesInput } from \\"./FirstModelScalarWhereWithAggregatesInput\\";
export { FirstModelSumOrderByAggregateInput } from \\"./FirstModelSumOrderByAggregateInput\\";
export { FirstModelUpdateInput } from \\"./FirstModelUpdateInput\\";
export { FirstModelUpdateManyMutationInput } from \\"./FirstModelUpdateManyMutationInput\\";
export { FirstModelUpdateOneRequiredWithoutSecondModelsFieldNestedInput } from \\"./FirstModelUpdateOneRequiredWithoutSecondModelsFieldNestedInput\\";
export { FirstModelUpdateWithoutSecondModelsFieldInput } from \\"./FirstModelUpdateWithoutSecondModelsFieldInput\\";
export { FirstModelUpsertWithoutSecondModelsFieldInput } from \\"./FirstModelUpsertWithoutSecondModelsFieldInput\\";
export { FirstModelWhereInput } from \\"./FirstModelWhereInput\\";
export { FirstModelWhereUniqueInput } from \\"./FirstModelWhereUniqueInput\\";
export { FloatFieldUpdateOperationsInput } from \\"./FloatFieldUpdateOperationsInput\\";
export { FloatFilter } from \\"./FloatFilter\\";
export { FloatWithAggregatesFilter } from \\"./FloatWithAggregatesFilter\\";
export { IntFieldUpdateOperationsInput } from \\"./IntFieldUpdateOperationsInput\\";
export { IntFilter } from \\"./IntFilter\\";
export { IntWithAggregatesFilter } from \\"./IntWithAggregatesFilter\\";
export { NestedFloatFilter } from \\"./NestedFloatFilter\\";
export { NestedFloatWithAggregatesFilter } from \\"./NestedFloatWithAggregatesFilter\\";
export { NestedIntFilter } from \\"./NestedIntFilter\\";
export { NestedIntWithAggregatesFilter } from \\"./NestedIntWithAggregatesFilter\\";
export { NestedStringFilter } from \\"./NestedStringFilter\\";
export { NestedStringWithAggregatesFilter } from \\"./NestedStringWithAggregatesFilter\\";
export { SecondModelAvgOrderByAggregateInput } from \\"./SecondModelAvgOrderByAggregateInput\\";
export { SecondModelCountOrderByAggregateInput } from \\"./SecondModelCountOrderByAggregateInput\\";
export { SecondModelCreateInput } from \\"./SecondModelCreateInput\\";
export { SecondModelCreateManyFirstModelFieldInput } from \\"./SecondModelCreateManyFirstModelFieldInput\\";
export { SecondModelCreateManyFirstModelFieldInputEnvelope } from \\"./SecondModelCreateManyFirstModelFieldInputEnvelope\\";
export { SecondModelCreateManyInput } from \\"./SecondModelCreateManyInput\\";
export { SecondModelCreateNestedManyWithoutFirstModelFieldInput } from \\"./SecondModelCreateNestedManyWithoutFirstModelFieldInput\\";
export { SecondModelCreateOrConnectWithoutFirstModelFieldInput } from \\"./SecondModelCreateOrConnectWithoutFirstModelFieldInput\\";
export { SecondModelCreateWithoutFirstModelFieldInput } from \\"./SecondModelCreateWithoutFirstModelFieldInput\\";
export { SecondModelListRelationFilter } from \\"./SecondModelListRelationFilter\\";
export { SecondModelMaxOrderByAggregateInput } from \\"./SecondModelMaxOrderByAggregateInput\\";
export { SecondModelMinOrderByAggregateInput } from \\"./SecondModelMinOrderByAggregateInput\\";
export { SecondModelOrderByRelationAggregateInput } from \\"./SecondModelOrderByRelationAggregateInput\\";
export { SecondModelOrderByWithAggregationInput } from \\"./SecondModelOrderByWithAggregationInput\\";
export { SecondModelOrderByWithRelationInput } from \\"./SecondModelOrderByWithRelationInput\\";
export { SecondModelScalarWhereInput } from \\"./SecondModelScalarWhereInput\\";
export { SecondModelScalarWhereWithAggregatesInput } from \\"./SecondModelScalarWhereWithAggregatesInput\\";
export { SecondModelSumOrderByAggregateInput } from \\"./SecondModelSumOrderByAggregateInput\\";
export { SecondModelUpdateInput } from \\"./SecondModelUpdateInput\\";
export { SecondModelUpdateManyMutationInput } from \\"./SecondModelUpdateManyMutationInput\\";
export { SecondModelUpdateManyWithWhereWithoutFirstModelFieldInput } from \\"./SecondModelUpdateManyWithWhereWithoutFirstModelFieldInput\\";
export { SecondModelUpdateManyWithoutFirstModelFieldNestedInput } from \\"./SecondModelUpdateManyWithoutFirstModelFieldNestedInput\\";
export { SecondModelUpdateWithWhereUniqueWithoutFirstModelFieldInput } from \\"./SecondModelUpdateWithWhereUniqueWithoutFirstModelFieldInput\\";
export { SecondModelUpdateWithoutFirstModelFieldInput } from \\"./SecondModelUpdateWithoutFirstModelFieldInput\\";
export { SecondModelUpsertWithWhereUniqueWithoutFirstModelFieldInput } from \\"./SecondModelUpsertWithWhereUniqueWithoutFirstModelFieldInput\\";
export { SecondModelWhereInput } from \\"./SecondModelWhereInput\\";
export { SecondModelWhereUniqueInput } from \\"./SecondModelWhereUniqueInput\\";
export { StringFieldUpdateOperationsInput } from \\"./StringFieldUpdateOperationsInput\\";
export { StringFilter } from \\"./StringFilter\\";
export { StringWithAggregatesFilter } from \\"./StringWithAggregatesFilter\\";
"
`;

exports[`inputs should properly generate input type classes for model with composite unique index: DirectorFirstNameLastNameCompoundUniqueInput 1`] = `
"import { Args, ArgsType, Context, Field, Float, ID, Info, InputType, Int, Mutation, ObjectType, Query, ResolveField, Resolver, Root, registerEnumType } from \\"@nestjs/graphql\\";
import * as GraphQLScalars from \\"graphql-scalars\\";
import { Prisma } from \\"../../../../helpers/prisma-client-mock\\";
import { DecimalJSScalar } from \\"../../scalars\\";

@InputType(\\"DirectorFirstNameLastNameCompoundUniqueInput\\", {
  isAbstract: true
})
export class DirectorFirstNameLastNameCompoundUniqueInput {
  @Field(_type => String, {
    nullable: false
  })
  firstName!: string;

  @Field(_type => String, {
    nullable: false
  })
  lastName!: string;
}
"
`;

exports[`inputs should properly generate input type classes for model with composite unique index: DirectorOrderByWithRelationInput 1`] = `
"import { Args, ArgsType, Context, Field, Float, ID, Info, InputType, Int, Mutation, ObjectType, Query, ResolveField, Resolver, Root, registerEnumType } from \\"@nestjs/graphql\\";
import * as GraphQLScalars from \\"graphql-scalars\\";
import { Prisma } from \\"../../../../helpers/prisma-client-mock\\";
import { DecimalJSScalar } from \\"../../scalars\\";
import { MovieOrderByRelationAggregateInput } from \\"../inputs/MovieOrderByRelationAggregateInput\\";
import { SortOrder } from \\"../../enums/SortOrder\\";

@InputType(\\"DirectorOrderByWithRelationInput\\", {
  isAbstract: true
})
export class DirectorOrderByWithRelationInput {
  @Field(_type => SortOrder, {
    nullable: true
  })
  firstName?: \\"asc\\" | \\"desc\\" | undefined;

  @Field(_type => SortOrder, {
    nullable: true
  })
  lastName?: \\"asc\\" | \\"desc\\" | undefined;

  @Field(_type => SortOrder, {
    nullable: true
  })
  age?: \\"asc\\" | \\"desc\\" | undefined;

  @Field(_type => MovieOrderByRelationAggregateInput, {
    nullable: true
  })
  movies?: MovieOrderByRelationAggregateInput | undefined;
}
"
`;

exports[`inputs should properly generate input type classes for model with composite unique index: DirectorWhereInput 1`] = `
"import { Args, ArgsType, Context, Field, Float, ID, Info, InputType, Int, Mutation, ObjectType, Query, ResolveField, Resolver, Root, registerEnumType } from \\"@nestjs/graphql\\";
import * as GraphQLScalars from \\"graphql-scalars\\";
import { Prisma } from \\"../../../../helpers/prisma-client-mock\\";
import { DecimalJSScalar } from \\"../../scalars\\";
import { IntFilter } from \\"../inputs/IntFilter\\";
import { MovieListRelationFilter } from \\"../inputs/MovieListRelationFilter\\";
import { StringFilter } from \\"../inputs/StringFilter\\";

@InputType(\\"DirectorWhereInput\\", {
  isAbstract: true
})
export class DirectorWhereInput {
  @Field(_type => [DirectorWhereInput], {
    nullable: true
  })
  AND?: DirectorWhereInput[] | undefined;

  @Field(_type => [DirectorWhereInput], {
    nullable: true
  })
  OR?: DirectorWhereInput[] | undefined;

  @Field(_type => [DirectorWhereInput], {
    nullable: true
  })
  NOT?: DirectorWhereInput[] | undefined;

  @Field(_type => StringFilter, {
    nullable: true
  })
  firstName?: StringFilter | undefined;

  @Field(_type => StringFilter, {
    nullable: true
  })
  lastName?: StringFilter | undefined;

  @Field(_type => IntFilter, {
    nullable: true
  })
  age?: IntFilter | undefined;

  @Field(_type => MovieListRelationFilter, {
    nullable: true
  })
  movies?: MovieListRelationFilter | undefined;
}
"
`;

exports[`inputs should properly generate input type classes for model with composite unique index: DirectorWhereUniqueInput 1`] = `
"import { Args, ArgsType, Context, Field, Float, ID, Info, InputType, Int, Mutation, ObjectType, Query, ResolveField, Resolver, Root, registerEnumType } from \\"@nestjs/graphql\\";
import * as GraphQLScalars from \\"graphql-scalars\\";
import { Prisma } from \\"../../../../helpers/prisma-client-mock\\";
import { DecimalJSScalar } from \\"../../scalars\\";
import { DirectorFirstNameLastNameCompoundUniqueInput } from \\"../inputs/DirectorFirstNameLastNameCompoundUniqueInput\\";

@InputType(\\"DirectorWhereUniqueInput\\", {
  isAbstract: true
})
export class DirectorWhereUniqueInput {
  @Field(_type => DirectorFirstNameLastNameCompoundUniqueInput, {
    nullable: true
  })
  firstName_lastName?: DirectorFirstNameLastNameCompoundUniqueInput | undefined;
}
"
`;

exports[`inputs should properly generate input type classes for model with composite unique index: index 1`] = `
"export { DirectorAvgOrderByAggregateInput } from \\"./DirectorAvgOrderByAggregateInput\\";
export { DirectorCountOrderByAggregateInput } from \\"./DirectorCountOrderByAggregateInput\\";
export { DirectorCreateInput } from \\"./DirectorCreateInput\\";
export { DirectorCreateManyInput } from \\"./DirectorCreateManyInput\\";
export { DirectorCreateNestedOneWithoutMoviesInput } from \\"./DirectorCreateNestedOneWithoutMoviesInput\\";
export { DirectorCreateOrConnectWithoutMoviesInput } from \\"./DirectorCreateOrConnectWithoutMoviesInput\\";
export { DirectorCreateWithoutMoviesInput } from \\"./DirectorCreateWithoutMoviesInput\\";
export { DirectorFirstNameLastNameCompoundUniqueInput } from \\"./DirectorFirstNameLastNameCompoundUniqueInput\\";
export { DirectorMaxOrderByAggregateInput } from \\"./DirectorMaxOrderByAggregateInput\\";
export { DirectorMinOrderByAggregateInput } from \\"./DirectorMinOrderByAggregateInput\\";
export { DirectorOrderByWithAggregationInput } from \\"./DirectorOrderByWithAggregationInput\\";
export { DirectorOrderByWithRelationInput } from \\"./DirectorOrderByWithRelationInput\\";
export { DirectorRelationFilter } from \\"./DirectorRelationFilter\\";
export { DirectorScalarWhereWithAggregatesInput } from \\"./DirectorScalarWhereWithAggregatesInput\\";
export { DirectorSumOrderByAggregateInput } from \\"./DirectorSumOrderByAggregateInput\\";
export { DirectorUpdateInput } from \\"./DirectorUpdateInput\\";
export { DirectorUpdateManyMutationInput } from \\"./DirectorUpdateManyMutationInput\\";
export { DirectorUpdateOneRequiredWithoutMoviesNestedInput } from \\"./DirectorUpdateOneRequiredWithoutMoviesNestedInput\\";
export { DirectorUpdateWithoutMoviesInput } from \\"./DirectorUpdateWithoutMoviesInput\\";
export { DirectorUpsertWithoutMoviesInput } from \\"./DirectorUpsertWithoutMoviesInput\\";
export { DirectorWhereInput } from \\"./DirectorWhereInput\\";
export { DirectorWhereUniqueInput } from \\"./DirectorWhereUniqueInput\\";
export { FloatFieldUpdateOperationsInput } from \\"./FloatFieldUpdateOperationsInput\\";
export { FloatFilter } from \\"./FloatFilter\\";
export { FloatWithAggregatesFilter } from \\"./FloatWithAggregatesFilter\\";
export { IntFieldUpdateOperationsInput } from \\"./IntFieldUpdateOperationsInput\\";
export { IntFilter } from \\"./IntFilter\\";
export { IntWithAggregatesFilter } from \\"./IntWithAggregatesFilter\\";
export { MovieAvgOrderByAggregateInput } from \\"./MovieAvgOrderByAggregateInput\\";
export { MovieCountOrderByAggregateInput } from \\"./MovieCountOrderByAggregateInput\\";
export { MovieCreateInput } from \\"./MovieCreateInput\\";
export { MovieCreateManyDirectorInput } from \\"./MovieCreateManyDirectorInput\\";
export { MovieCreateManyDirectorInputEnvelope } from \\"./MovieCreateManyDirectorInputEnvelope\\";
export { MovieCreateManyInput } from \\"./MovieCreateManyInput\\";
export { MovieCreateNestedManyWithoutDirectorInput } from \\"./MovieCreateNestedManyWithoutDirectorInput\\";
export { MovieCreateOrConnectWithoutDirectorInput } from \\"./MovieCreateOrConnectWithoutDirectorInput\\";
export { MovieCreateWithoutDirectorInput } from \\"./MovieCreateWithoutDirectorInput\\";
export { MovieDirectorFirstNameDirectorLastNameTitleCompoundUniqueInput } from \\"./MovieDirectorFirstNameDirectorLastNameTitleCompoundUniqueInput\\";
export { MovieListRelationFilter } from \\"./MovieListRelationFilter\\";
export { MovieMaxOrderByAggregateInput } from \\"./MovieMaxOrderByAggregateInput\\";
export { MovieMinOrderByAggregateInput } from \\"./MovieMinOrderByAggregateInput\\";
export { MovieOrderByRelationAggregateInput } from \\"./MovieOrderByRelationAggregateInput\\";
export { MovieOrderByWithAggregationInput } from \\"./MovieOrderByWithAggregationInput\\";
export { MovieOrderByWithRelationInput } from \\"./MovieOrderByWithRelationInput\\";
export { MovieScalarWhereInput } from \\"./MovieScalarWhereInput\\";
export { MovieScalarWhereWithAggregatesInput } from \\"./MovieScalarWhereWithAggregatesInput\\";
export { MovieSumOrderByAggregateInput } from \\"./MovieSumOrderByAggregateInput\\";
export { MovieUpdateInput } from \\"./MovieUpdateInput\\";
export { MovieUpdateManyMutationInput } from \\"./MovieUpdateManyMutationInput\\";
export { MovieUpdateManyWithWhereWithoutDirectorInput } from \\"./MovieUpdateManyWithWhereWithoutDirectorInput\\";
export { MovieUpdateManyWithoutDirectorNestedInput } from \\"./MovieUpdateManyWithoutDirectorNestedInput\\";
export { MovieUpdateWithWhereUniqueWithoutDirectorInput } from \\"./MovieUpdateWithWhereUniqueWithoutDirectorInput\\";
export { MovieUpdateWithoutDirectorInput } from \\"./MovieUpdateWithoutDirectorInput\\";
export { MovieUpsertWithWhereUniqueWithoutDirectorInput } from \\"./MovieUpsertWithWhereUniqueWithoutDirectorInput\\";
export { MovieWhereInput } from \\"./MovieWhereInput\\";
export { MovieWhereUniqueInput } from \\"./MovieWhereUniqueInput\\";
export { NestedFloatFilter } from \\"./NestedFloatFilter\\";
export { NestedFloatWithAggregatesFilter } from \\"./NestedFloatWithAggregatesFilter\\";
export { NestedIntFilter } from \\"./NestedIntFilter\\";
export { NestedIntWithAggregatesFilter } from \\"./NestedIntWithAggregatesFilter\\";
export { NestedStringFilter } from \\"./NestedStringFilter\\";
export { NestedStringWithAggregatesFilter } from \\"./NestedStringWithAggregatesFilter\\";
export { StringFieldUpdateOperationsInput } from \\"./StringFieldUpdateOperationsInput\\";
export { StringFilter } from \\"./StringFilter\\";
export { StringWithAggregatesFilter } from \\"./StringWithAggregatesFilter\\";
"
`;

exports[`inputs should properly generate input type classes for model with id keys with relation: MovieDirectorFirstNameDirectorLastNameTitleCompoundUniqueInput 1`] = `
"import { Args, ArgsType, Context, Field, Float, ID, Info, InputType, Int, Mutation, ObjectType, Query, ResolveField, Resolver, Root, registerEnumType } from \\"@nestjs/graphql\\";
import * as GraphQLScalars from \\"graphql-scalars\\";
import { Prisma } from \\"../../../../helpers/prisma-client-mock\\";
import { DecimalJSScalar } from \\"../../scalars\\";

@InputType(\\"MovieDirectorFirstNameDirectorLastNameTitleCompoundUniqueInput\\", {
  isAbstract: true
})
export class MovieDirectorFirstNameDirectorLastNameTitleCompoundUniqueInput {
  @Field(_type => String, {
    nullable: false
  })
  directorFirstName!: string;

  @Field(_type => String, {
    nullable: false
  })
  directorLastName!: string;

  @Field(_type => String, {
    nullable: false
  })
  title!: string;
}
"
`;

exports[`inputs should properly generate input type classes for model with id keys with relation: MovieOrderByWithRelationInput 1`] = `
"import { Args, ArgsType, Context, Field, Float, ID, Info, InputType, Int, Mutation, ObjectType, Query, ResolveField, Resolver, Root, registerEnumType } from \\"@nestjs/graphql\\";
import * as GraphQLScalars from \\"graphql-scalars\\";
import { Prisma } from \\"../../../../helpers/prisma-client-mock\\";
import { DecimalJSScalar } from \\"../../scalars\\";
import { DirectorOrderByWithRelationInput } from \\"../inputs/DirectorOrderByWithRelationInput\\";
import { SortOrder } from \\"../../enums/SortOrder\\";

@InputType(\\"MovieOrderByWithRelationInput\\", {
  isAbstract: true
})
export class MovieOrderByWithRelationInput {
  @Field(_type => SortOrder, {
    nullable: true
  })
  directorFirstName?: \\"asc\\" | \\"desc\\" | undefined;

  @Field(_type => SortOrder, {
    nullable: true
  })
  directorLastName?: \\"asc\\" | \\"desc\\" | undefined;

  @Field(_type => DirectorOrderByWithRelationInput, {
    nullable: true
  })
  director?: DirectorOrderByWithRelationInput | undefined;

  @Field(_type => SortOrder, {
    nullable: true
  })
  title?: \\"asc\\" | \\"desc\\" | undefined;

  @Field(_type => SortOrder, {
    nullable: true
  })
  rating?: \\"asc\\" | \\"desc\\" | undefined;
}
"
`;

exports[`inputs should properly generate input type classes for model with id keys with relation: MovieScalarWhereInput 1`] = `
"import { Args, ArgsType, Context, Field, Float, ID, Info, InputType, Int, Mutation, ObjectType, Query, ResolveField, Resolver, Root, registerEnumType } from \\"@nestjs/graphql\\";
import * as GraphQLScalars from \\"graphql-scalars\\";
import { Prisma } from \\"../../../../helpers/prisma-client-mock\\";
import { DecimalJSScalar } from \\"../../scalars\\";
import { FloatFilter } from \\"../inputs/FloatFilter\\";
import { StringFilter } from \\"../inputs/StringFilter\\";

@InputType(\\"MovieScalarWhereInput\\", {
  isAbstract: true
})
export class MovieScalarWhereInput {
  @Field(_type => [MovieScalarWhereInput], {
    nullable: true
  })
  AND?: MovieScalarWhereInput[] | undefined;

  @Field(_type => [MovieScalarWhereInput], {
    nullable: true
  })
  OR?: MovieScalarWhereInput[] | undefined;

  @Field(_type => [MovieScalarWhereInput], {
    nullable: true
  })
  NOT?: MovieScalarWhereInput[] | undefined;

  @Field(_type => StringFilter, {
    nullable: true
  })
  directorFirstName?: StringFilter | undefined;

  @Field(_type => StringFilter, {
    nullable: true
  })
  directorLastName?: StringFilter | undefined;

  @Field(_type => StringFilter, {
    nullable: true
  })
  title?: StringFilter | undefined;

  @Field(_type => FloatFilter, {
    nullable: true
  })
  rating?: FloatFilter | undefined;
}
"
`;

exports[`inputs should properly generate input type classes for model with id keys with relation: MovieWhereInput 1`] = `
"import { Args, ArgsType, Context, Field, Float, ID, Info, InputType, Int, Mutation, ObjectType, Query, ResolveField, Resolver, Root, registerEnumType } from \\"@nestjs/graphql\\";
import * as GraphQLScalars from \\"graphql-scalars\\";
import { Prisma } from \\"../../../../helpers/prisma-client-mock\\";
import { DecimalJSScalar } from \\"../../scalars\\";
import { DirectorRelationFilter } from \\"../inputs/DirectorRelationFilter\\";
import { FloatFilter } from \\"../inputs/FloatFilter\\";
import { StringFilter } from \\"../inputs/StringFilter\\";

@InputType(\\"MovieWhereInput\\", {
  isAbstract: true
})
export class MovieWhereInput {
  @Field(_type => [MovieWhereInput], {
    nullable: true
  })
  AND?: MovieWhereInput[] | undefined;

  @Field(_type => [MovieWhereInput], {
    nullable: true
  })
  OR?: MovieWhereInput[] | undefined;

  @Field(_type => [MovieWhereInput], {
    nullable: true
  })
  NOT?: MovieWhereInput[] | undefined;

  @Field(_type => StringFilter, {
    nullable: true
  })
  directorFirstName?: StringFilter | undefined;

  @Field(_type => StringFilter, {
    nullable: true
  })
  directorLastName?: StringFilter | undefined;

  @Field(_type => DirectorRelationFilter, {
    nullable: true
  })
  director?: DirectorRelationFilter | undefined;

  @Field(_type => StringFilter, {
    nullable: true
  })
  title?: StringFilter | undefined;

  @Field(_type => FloatFilter, {
    nullable: true
  })
  rating?: FloatFilter | undefined;
}
"
`;

exports[`inputs should properly generate input type classes for model with id keys with relation: MovieWhereUniqueInput 1`] = `
"import { Args, ArgsType, Context, Field, Float, ID, Info, InputType, Int, Mutation, ObjectType, Query, ResolveField, Resolver, Root, registerEnumType } from \\"@nestjs/graphql\\";
import * as GraphQLScalars from \\"graphql-scalars\\";
import { Prisma } from \\"../../../../helpers/prisma-client-mock\\";
import { DecimalJSScalar } from \\"../../scalars\\";
import { MovieDirectorFirstNameDirectorLastNameTitleCompoundUniqueInput } from \\"../inputs/MovieDirectorFirstNameDirectorLastNameTitleCompoundUniqueInput\\";

@InputType(\\"MovieWhereUniqueInput\\", {
  isAbstract: true
})
export class MovieWhereUniqueInput {
  @Field(_type => MovieDirectorFirstNameDirectorLastNameTitleCompoundUniqueInput, {
    nullable: true
  })
  directorFirstName_directorLastName_title?: MovieDirectorFirstNameDirectorLastNameTitleCompoundUniqueInput | undefined;
}
"
`;

exports[`inputs should properly generate input type classes for model with id keys with relation: index 1`] = `
"export { DirectorAvgOrderByAggregateInput } from \\"./DirectorAvgOrderByAggregateInput\\";
export { DirectorCountOrderByAggregateInput } from \\"./DirectorCountOrderByAggregateInput\\";
export { DirectorCreateInput } from \\"./DirectorCreateInput\\";
export { DirectorCreateManyInput } from \\"./DirectorCreateManyInput\\";
export { DirectorCreateNestedOneWithoutMoviesInput } from \\"./DirectorCreateNestedOneWithoutMoviesInput\\";
export { DirectorCreateOrConnectWithoutMoviesInput } from \\"./DirectorCreateOrConnectWithoutMoviesInput\\";
export { DirectorCreateWithoutMoviesInput } from \\"./DirectorCreateWithoutMoviesInput\\";
export { DirectorFirstNameLastNameCompoundUniqueInput } from \\"./DirectorFirstNameLastNameCompoundUniqueInput\\";
export { DirectorMaxOrderByAggregateInput } from \\"./DirectorMaxOrderByAggregateInput\\";
export { DirectorMinOrderByAggregateInput } from \\"./DirectorMinOrderByAggregateInput\\";
export { DirectorOrderByWithAggregationInput } from \\"./DirectorOrderByWithAggregationInput\\";
export { DirectorOrderByWithRelationInput } from \\"./DirectorOrderByWithRelationInput\\";
export { DirectorRelationFilter } from \\"./DirectorRelationFilter\\";
export { DirectorScalarWhereWithAggregatesInput } from \\"./DirectorScalarWhereWithAggregatesInput\\";
export { DirectorSumOrderByAggregateInput } from \\"./DirectorSumOrderByAggregateInput\\";
export { DirectorUpdateInput } from \\"./DirectorUpdateInput\\";
export { DirectorUpdateManyMutationInput } from \\"./DirectorUpdateManyMutationInput\\";
export { DirectorUpdateOneRequiredWithoutMoviesNestedInput } from \\"./DirectorUpdateOneRequiredWithoutMoviesNestedInput\\";
export { DirectorUpdateWithoutMoviesInput } from \\"./DirectorUpdateWithoutMoviesInput\\";
export { DirectorUpsertWithoutMoviesInput } from \\"./DirectorUpsertWithoutMoviesInput\\";
export { DirectorWhereInput } from \\"./DirectorWhereInput\\";
export { DirectorWhereUniqueInput } from \\"./DirectorWhereUniqueInput\\";
export { FloatFieldUpdateOperationsInput } from \\"./FloatFieldUpdateOperationsInput\\";
export { FloatFilter } from \\"./FloatFilter\\";
export { FloatWithAggregatesFilter } from \\"./FloatWithAggregatesFilter\\";
export { IntFieldUpdateOperationsInput } from \\"./IntFieldUpdateOperationsInput\\";
export { IntFilter } from \\"./IntFilter\\";
export { IntWithAggregatesFilter } from \\"./IntWithAggregatesFilter\\";
export { MovieAvgOrderByAggregateInput } from \\"./MovieAvgOrderByAggregateInput\\";
export { MovieCountOrderByAggregateInput } from \\"./MovieCountOrderByAggregateInput\\";
export { MovieCreateInput } from \\"./MovieCreateInput\\";
export { MovieCreateManyDirectorInput } from \\"./MovieCreateManyDirectorInput\\";
export { MovieCreateManyDirectorInputEnvelope } from \\"./MovieCreateManyDirectorInputEnvelope\\";
export { MovieCreateManyInput } from \\"./MovieCreateManyInput\\";
export { MovieCreateNestedManyWithoutDirectorInput } from \\"./MovieCreateNestedManyWithoutDirectorInput\\";
export { MovieCreateOrConnectWithoutDirectorInput } from \\"./MovieCreateOrConnectWithoutDirectorInput\\";
export { MovieCreateWithoutDirectorInput } from \\"./MovieCreateWithoutDirectorInput\\";
export { MovieDirectorFirstNameDirectorLastNameTitleCompoundUniqueInput } from \\"./MovieDirectorFirstNameDirectorLastNameTitleCompoundUniqueInput\\";
export { MovieListRelationFilter } from \\"./MovieListRelationFilter\\";
export { MovieMaxOrderByAggregateInput } from \\"./MovieMaxOrderByAggregateInput\\";
export { MovieMinOrderByAggregateInput } from \\"./MovieMinOrderByAggregateInput\\";
export { MovieOrderByRelationAggregateInput } from \\"./MovieOrderByRelationAggregateInput\\";
export { MovieOrderByWithAggregationInput } from \\"./MovieOrderByWithAggregationInput\\";
export { MovieOrderByWithRelationInput } from \\"./MovieOrderByWithRelationInput\\";
export { MovieScalarWhereInput } from \\"./MovieScalarWhereInput\\";
export { MovieScalarWhereWithAggregatesInput } from \\"./MovieScalarWhereWithAggregatesInput\\";
export { MovieSumOrderByAggregateInput } from \\"./MovieSumOrderByAggregateInput\\";
export { MovieUpdateInput } from \\"./MovieUpdateInput\\";
export { MovieUpdateManyMutationInput } from \\"./MovieUpdateManyMutationInput\\";
export { MovieUpdateManyWithWhereWithoutDirectorInput } from \\"./MovieUpdateManyWithWhereWithoutDirectorInput\\";
export { MovieUpdateManyWithoutDirectorNestedInput } from \\"./MovieUpdateManyWithoutDirectorNestedInput\\";
export { MovieUpdateWithWhereUniqueWithoutDirectorInput } from \\"./MovieUpdateWithWhereUniqueWithoutDirectorInput\\";
export { MovieUpdateWithoutDirectorInput } from \\"./MovieUpdateWithoutDirectorInput\\";
export { MovieUpsertWithWhereUniqueWithoutDirectorInput } from \\"./MovieUpsertWithWhereUniqueWithoutDirectorInput\\";
export { MovieWhereInput } from \\"./MovieWhereInput\\";
export { MovieWhereUniqueInput } from \\"./MovieWhereUniqueInput\\";
export { NestedFloatFilter } from \\"./NestedFloatFilter\\";
export { NestedFloatWithAggregatesFilter } from \\"./NestedFloatWithAggregatesFilter\\";
export { NestedIntFilter } from \\"./NestedIntFilter\\";
export { NestedIntWithAggregatesFilter } from \\"./NestedIntWithAggregatesFilter\\";
export { NestedStringFilter } from \\"./NestedStringFilter\\";
export { NestedStringWithAggregatesFilter } from \\"./NestedStringWithAggregatesFilter\\";
export { StringFieldUpdateOperationsInput } from \\"./StringFieldUpdateOperationsInput\\";
export { StringFilter } from \\"./StringFilter\\";
export { StringWithAggregatesFilter } from \\"./StringWithAggregatesFilter\\";
"
`;

exports[`inputs should properly generate input type classes for model with native types: NativeTypeModelCreateInput 1`] = `
"import { Args, ArgsType, Context, Field, Float, ID, Info, InputType, Int, Mutation, ObjectType, Query, ResolveField, Resolver, Root, registerEnumType } from \\"@nestjs/graphql\\";
import * as GraphQLScalars from \\"graphql-scalars\\";
import { Prisma } from \\"../../../../helpers/prisma-client-mock\\";
import { DecimalJSScalar } from \\"../../scalars\\";

@InputType(\\"NativeTypeModelCreateInput\\", {
  isAbstract: true
})
export class NativeTypeModelCreateInput {
  @Field(_type => GraphQLScalars.BigIntResolver, {
    nullable: true
  })
  bigInt?: bigint | undefined;

  @Field(_type => GraphQLScalars.ByteResolver, {
    nullable: true
  })
  byteA?: Buffer | undefined;

  @Field(_type => DecimalJSScalar, {
    nullable: true
  })
  decimal?: Prisma.Decimal | undefined;
}
"
`;

exports[`inputs should properly generate input type classes for model with native types: NativeTypeModelOrderByWithRelationInput 1`] = `
"import { Args, ArgsType, Context, Field, Float, ID, Info, InputType, Int, Mutation, ObjectType, Query, ResolveField, Resolver, Root, registerEnumType } from \\"@nestjs/graphql\\";
import * as GraphQLScalars from \\"graphql-scalars\\";
import { Prisma } from \\"../../../../helpers/prisma-client-mock\\";
import { DecimalJSScalar } from \\"../../scalars\\";
import { SortOrder } from \\"../../enums/SortOrder\\";

@InputType(\\"NativeTypeModelOrderByWithRelationInput\\", {
  isAbstract: true
})
export class NativeTypeModelOrderByWithRelationInput {
  @Field(_type => SortOrder, {
    nullable: true
  })
  id?: \\"asc\\" | \\"desc\\" | undefined;

  @Field(_type => SortOrder, {
    nullable: true
  })
  bigInt?: \\"asc\\" | \\"desc\\" | undefined;

  @Field(_type => SortOrder, {
    nullable: true
  })
  byteA?: \\"asc\\" | \\"desc\\" | undefined;

  @Field(_type => SortOrder, {
    nullable: true
  })
  decimal?: \\"asc\\" | \\"desc\\" | undefined;
}
"
`;

exports[`inputs should properly generate input type classes for model with native types: NativeTypeModelUpdateInput 1`] = `
"import { Args, ArgsType, Context, Field, Float, ID, Info, InputType, Int, Mutation, ObjectType, Query, ResolveField, Resolver, Root, registerEnumType } from \\"@nestjs/graphql\\";
import * as GraphQLScalars from \\"graphql-scalars\\";
import { Prisma } from \\"../../../../helpers/prisma-client-mock\\";
import { DecimalJSScalar } from \\"../../scalars\\";
import { NullableBigIntFieldUpdateOperationsInput } from \\"../inputs/NullableBigIntFieldUpdateOperationsInput\\";
import { NullableBytesFieldUpdateOperationsInput } from \\"../inputs/NullableBytesFieldUpdateOperationsInput\\";
import { NullableDecimalFieldUpdateOperationsInput } from \\"../inputs/NullableDecimalFieldUpdateOperationsInput\\";

@InputType(\\"NativeTypeModelUpdateInput\\", {
  isAbstract: true
})
export class NativeTypeModelUpdateInput {
  @Field(_type => NullableBigIntFieldUpdateOperationsInput, {
    nullable: true
  })
  bigInt?: NullableBigIntFieldUpdateOperationsInput | undefined;

  @Field(_type => NullableBytesFieldUpdateOperationsInput, {
    nullable: true
  })
  byteA?: NullableBytesFieldUpdateOperationsInput | undefined;

  @Field(_type => NullableDecimalFieldUpdateOperationsInput, {
    nullable: true
  })
  decimal?: NullableDecimalFieldUpdateOperationsInput | undefined;
}
"
`;

exports[`inputs should properly generate input type classes for model with native types: NativeTypeModelUpdateManyMutationInput 1`] = `
"import { Args, ArgsType, Context, Field, Float, ID, Info, InputType, Int, Mutation, ObjectType, Query, ResolveField, Resolver, Root, registerEnumType } from \\"@nestjs/graphql\\";
import * as GraphQLScalars from \\"graphql-scalars\\";
import { Prisma } from \\"../../../../helpers/prisma-client-mock\\";
import { DecimalJSScalar } from \\"../../scalars\\";
import { NullableBigIntFieldUpdateOperationsInput } from \\"../inputs/NullableBigIntFieldUpdateOperationsInput\\";
import { NullableBytesFieldUpdateOperationsInput } from \\"../inputs/NullableBytesFieldUpdateOperationsInput\\";
import { NullableDecimalFieldUpdateOperationsInput } from \\"../inputs/NullableDecimalFieldUpdateOperationsInput\\";

@InputType(\\"NativeTypeModelUpdateManyMutationInput\\", {
  isAbstract: true
})
export class NativeTypeModelUpdateManyMutationInput {
  @Field(_type => NullableBigIntFieldUpdateOperationsInput, {
    nullable: true
  })
  bigInt?: NullableBigIntFieldUpdateOperationsInput | undefined;

  @Field(_type => NullableBytesFieldUpdateOperationsInput, {
    nullable: true
  })
  byteA?: NullableBytesFieldUpdateOperationsInput | undefined;

  @Field(_type => NullableDecimalFieldUpdateOperationsInput, {
    nullable: true
  })
  decimal?: NullableDecimalFieldUpdateOperationsInput | undefined;
}
"
`;

exports[`inputs should properly generate input type classes for model with native types: NativeTypeModelWhereInput 1`] = `
"import { Args, ArgsType, Context, Field, Float, ID, Info, InputType, Int, Mutation, ObjectType, Query, ResolveField, Resolver, Root, registerEnumType } from \\"@nestjs/graphql\\";
import * as GraphQLScalars from \\"graphql-scalars\\";
import { Prisma } from \\"../../../../helpers/prisma-client-mock\\";
import { DecimalJSScalar } from \\"../../scalars\\";
import { BigIntNullableFilter } from \\"../inputs/BigIntNullableFilter\\";
import { BytesNullableFilter } from \\"../inputs/BytesNullableFilter\\";
import { DecimalNullableFilter } from \\"../inputs/DecimalNullableFilter\\";
import { IntFilter } from \\"../inputs/IntFilter\\";

@InputType(\\"NativeTypeModelWhereInput\\", {
  isAbstract: true
})
export class NativeTypeModelWhereInput {
  @Field(_type => [NativeTypeModelWhereInput], {
    nullable: true
  })
  AND?: NativeTypeModelWhereInput[] | undefined;

  @Field(_type => [NativeTypeModelWhereInput], {
    nullable: true
  })
  OR?: NativeTypeModelWhereInput[] | undefined;

  @Field(_type => [NativeTypeModelWhereInput], {
    nullable: true
  })
  NOT?: NativeTypeModelWhereInput[] | undefined;

  @Field(_type => IntFilter, {
    nullable: true
  })
  id?: IntFilter | undefined;

  @Field(_type => BigIntNullableFilter, {
    nullable: true
  })
  bigInt?: BigIntNullableFilter | undefined;

  @Field(_type => BytesNullableFilter, {
    nullable: true
  })
  byteA?: BytesNullableFilter | undefined;

  @Field(_type => DecimalNullableFilter, {
    nullable: true
  })
  decimal?: DecimalNullableFilter | undefined;
}
"
`;

exports[`inputs should properly generate input type classes for model with native types: NativeTypeModelWhereUniqueInput 1`] = `
"import { Args, ArgsType, Context, Field, Float, ID, Info, InputType, Int, Mutation, ObjectType, Query, ResolveField, Resolver, Root, registerEnumType } from \\"@nestjs/graphql\\";
import * as GraphQLScalars from \\"graphql-scalars\\";
import { Prisma } from \\"../../../../helpers/prisma-client-mock\\";
import { DecimalJSScalar } from \\"../../scalars\\";

@InputType(\\"NativeTypeModelWhereUniqueInput\\", {
  isAbstract: true
})
export class NativeTypeModelWhereUniqueInput {
  @Field(_type => Int, {
    nullable: true
  })
  id?: number | undefined;
}
"
`;

exports[`inputs should properly generate input type classes for model with native types: index 1`] = `
"export { BigIntNullableFilter } from \\"./BigIntNullableFilter\\";
export { BigIntNullableWithAggregatesFilter } from \\"./BigIntNullableWithAggregatesFilter\\";
export { BytesNullableFilter } from \\"./BytesNullableFilter\\";
export { BytesNullableWithAggregatesFilter } from \\"./BytesNullableWithAggregatesFilter\\";
export { DecimalNullableFilter } from \\"./DecimalNullableFilter\\";
export { DecimalNullableWithAggregatesFilter } from \\"./DecimalNullableWithAggregatesFilter\\";
export { IntFieldUpdateOperationsInput } from \\"./IntFieldUpdateOperationsInput\\";
export { IntFilter } from \\"./IntFilter\\";
export { IntWithAggregatesFilter } from \\"./IntWithAggregatesFilter\\";
export { NativeTypeModelAvgOrderByAggregateInput } from \\"./NativeTypeModelAvgOrderByAggregateInput\\";
export { NativeTypeModelCountOrderByAggregateInput } from \\"./NativeTypeModelCountOrderByAggregateInput\\";
export { NativeTypeModelCreateInput } from \\"./NativeTypeModelCreateInput\\";
export { NativeTypeModelCreateManyInput } from \\"./NativeTypeModelCreateManyInput\\";
export { NativeTypeModelMaxOrderByAggregateInput } from \\"./NativeTypeModelMaxOrderByAggregateInput\\";
export { NativeTypeModelMinOrderByAggregateInput } from \\"./NativeTypeModelMinOrderByAggregateInput\\";
export { NativeTypeModelOrderByWithAggregationInput } from \\"./NativeTypeModelOrderByWithAggregationInput\\";
export { NativeTypeModelOrderByWithRelationInput } from \\"./NativeTypeModelOrderByWithRelationInput\\";
export { NativeTypeModelScalarWhereWithAggregatesInput } from \\"./NativeTypeModelScalarWhereWithAggregatesInput\\";
export { NativeTypeModelSumOrderByAggregateInput } from \\"./NativeTypeModelSumOrderByAggregateInput\\";
export { NativeTypeModelUpdateInput } from \\"./NativeTypeModelUpdateInput\\";
export { NativeTypeModelUpdateManyMutationInput } from \\"./NativeTypeModelUpdateManyMutationInput\\";
export { NativeTypeModelWhereInput } from \\"./NativeTypeModelWhereInput\\";
export { NativeTypeModelWhereUniqueInput } from \\"./NativeTypeModelWhereUniqueInput\\";
export { NestedBigIntNullableFilter } from \\"./NestedBigIntNullableFilter\\";
export { NestedBigIntNullableWithAggregatesFilter } from \\"./NestedBigIntNullableWithAggregatesFilter\\";
export { NestedBytesNullableFilter } from \\"./NestedBytesNullableFilter\\";
export { NestedBytesNullableWithAggregatesFilter } from \\"./NestedBytesNullableWithAggregatesFilter\\";
export { NestedDecimalNullableFilter } from \\"./NestedDecimalNullableFilter\\";
export { NestedDecimalNullableWithAggregatesFilter } from \\"./NestedDecimalNullableWithAggregatesFilter\\";
export { NestedFloatFilter } from \\"./NestedFloatFilter\\";
export { NestedFloatNullableFilter } from \\"./NestedFloatNullableFilter\\";
export { NestedIntFilter } from \\"./NestedIntFilter\\";
export { NestedIntNullableFilter } from \\"./NestedIntNullableFilter\\";
export { NestedIntWithAggregatesFilter } from \\"./NestedIntWithAggregatesFilter\\";
export { NullableBigIntFieldUpdateOperationsInput } from \\"./NullableBigIntFieldUpdateOperationsInput\\";
export { NullableBytesFieldUpdateOperationsInput } from \\"./NullableBytesFieldUpdateOperationsInput\\";
export { NullableDecimalFieldUpdateOperationsInput } from \\"./NullableDecimalFieldUpdateOperationsInput\\";
"
`;

exports[`inputs should properly generate input type classes for sorting by many-to-many relation fields: FirstModelOrderByWithRelationInput 1`] = `
"import { Args, ArgsType, Context, Field, Float, ID, Info, InputType, Int, Mutation, ObjectType, Query, ResolveField, Resolver, Root, registerEnumType } from \\"@nestjs/graphql\\";
import * as GraphQLScalars from \\"graphql-scalars\\";
import { Prisma } from \\"../../../../helpers/prisma-client-mock\\";
import { DecimalJSScalar } from \\"../../scalars\\";
import { SecondModelOrderByRelationAggregateInput } from \\"../inputs/SecondModelOrderByRelationAggregateInput\\";
import { SortOrder } from \\"../../enums/SortOrder\\";

@InputType(\\"FirstModelOrderByWithRelationInput\\", {
  isAbstract: true
})
export class FirstModelOrderByWithRelationInput {
  @Field(_type => SortOrder, {
    nullable: true
  })
  idField?: \\"asc\\" | \\"desc\\" | undefined;

  @Field(_type => SortOrder, {
    nullable: true
  })
  uniqueStringField?: \\"asc\\" | \\"desc\\" | undefined;

  @Field(_type => SortOrder, {
    nullable: true
  })
  floatField?: \\"asc\\" | \\"desc\\" | undefined;

  @Field(_type => SecondModelOrderByRelationAggregateInput, {
    nullable: true
  })
  secondModelsField?: SecondModelOrderByRelationAggregateInput | undefined;
}
"
`;

exports[`inputs should properly generate input type classes for sorting by many-to-many relation fields: SampleAvgOrderByAggregateInput 1`] = `
"import { Args, ArgsType, Context, Field, Float, ID, Info, InputType, Int, Mutation, ObjectType, Query, ResolveField, Resolver, Root, registerEnumType } from \\"@nestjs/graphql\\";
import * as GraphQLScalars from \\"graphql-scalars\\";
import { Prisma } from \\"../../../../helpers/prisma-client-mock\\";
import { DecimalJSScalar } from \\"../../scalars\\";
import { SortOrder } from \\"../../enums/SortOrder\\";

@InputType(\\"SampleAvgOrderByAggregateInput\\", {
  isAbstract: true
})
export class SampleAvgOrderByAggregateInput {
  @Field(_type => SortOrder, {
    nullable: true
  })
  idField?: \\"asc\\" | \\"desc\\" | undefined;

  @Field(_type => SortOrder, {
    nullable: true
  })
  floatField?: \\"asc\\" | \\"desc\\" | undefined;

  @Field(_type => SortOrder, {
    nullable: true
  })
  intField?: \\"asc\\" | \\"desc\\" | undefined;
}
"
`;

exports[`inputs should properly generate input type classes for sorting by many-to-many relation fields: SampleCountOrderByAggregateInput 1`] = `
"import { Args, ArgsType, Context, Field, Float, ID, Info, InputType, Int, Mutation, ObjectType, Query, ResolveField, Resolver, Root, registerEnumType } from \\"@nestjs/graphql\\";
import * as GraphQLScalars from \\"graphql-scalars\\";
import { Prisma } from \\"../../../../helpers/prisma-client-mock\\";
import { DecimalJSScalar } from \\"../../scalars\\";
import { SortOrder } from \\"../../enums/SortOrder\\";

@InputType(\\"SampleCountOrderByAggregateInput\\", {
  isAbstract: true
})
export class SampleCountOrderByAggregateInput {
  @Field(_type => SortOrder, {
    nullable: true
  })
  idField?: \\"asc\\" | \\"desc\\" | undefined;

  @Field(_type => SortOrder, {
    nullable: true
  })
  stringField?: \\"asc\\" | \\"desc\\" | undefined;

  @Field(_type => SortOrder, {
    nullable: true
  })
  floatField?: \\"asc\\" | \\"desc\\" | undefined;

  @Field(_type => SortOrder, {
    nullable: true
  })
  intField?: \\"asc\\" | \\"desc\\" | undefined;

  @Field(_type => SortOrder, {
    nullable: true
  })
  booleanField?: \\"asc\\" | \\"desc\\" | undefined;

  @Field(_type => SortOrder, {
    nullable: true
  })
  dateField?: \\"asc\\" | \\"desc\\" | undefined;

  @Field(_type => SortOrder, {
    nullable: true
  })
  jsonField?: \\"asc\\" | \\"desc\\" | undefined;
}
"
`;

exports[`inputs should properly generate input type classes for sorting by many-to-many relation fields: SampleMaxOrderByAggregateInput 1`] = `
"import { Args, ArgsType, Context, Field, Float, ID, Info, InputType, Int, Mutation, ObjectType, Query, ResolveField, Resolver, Root, registerEnumType } from \\"@nestjs/graphql\\";
import * as GraphQLScalars from \\"graphql-scalars\\";
import { Prisma } from \\"../../../../helpers/prisma-client-mock\\";
import { DecimalJSScalar } from \\"../../scalars\\";
import { SortOrder } from \\"../../enums/SortOrder\\";

@InputType(\\"SampleMaxOrderByAggregateInput\\", {
  isAbstract: true
})
export class SampleMaxOrderByAggregateInput {
  @Field(_type => SortOrder, {
    nullable: true
  })
  idField?: \\"asc\\" | \\"desc\\" | undefined;

  @Field(_type => SortOrder, {
    nullable: true
  })
  stringField?: \\"asc\\" | \\"desc\\" | undefined;

  @Field(_type => SortOrder, {
    nullable: true
  })
  floatField?: \\"asc\\" | \\"desc\\" | undefined;

  @Field(_type => SortOrder, {
    nullable: true
  })
  intField?: \\"asc\\" | \\"desc\\" | undefined;

  @Field(_type => SortOrder, {
    nullable: true
  })
  booleanField?: \\"asc\\" | \\"desc\\" | undefined;

  @Field(_type => SortOrder, {
    nullable: true
  })
  dateField?: \\"asc\\" | \\"desc\\" | undefined;
}
"
`;

exports[`inputs should properly generate input type classes for sorting by many-to-many relation fields: SampleMinOrderByAggregateInput 1`] = `
"import { Args, ArgsType, Context, Field, Float, ID, Info, InputType, Int, Mutation, ObjectType, Query, ResolveField, Resolver, Root, registerEnumType } from \\"@nestjs/graphql\\";
import * as GraphQLScalars from \\"graphql-scalars\\";
import { Prisma } from \\"../../../../helpers/prisma-client-mock\\";
import { DecimalJSScalar } from \\"../../scalars\\";
import { SortOrder } from \\"../../enums/SortOrder\\";

@InputType(\\"SampleMinOrderByAggregateInput\\", {
  isAbstract: true
})
export class SampleMinOrderByAggregateInput {
  @Field(_type => SortOrder, {
    nullable: true
  })
  idField?: \\"asc\\" | \\"desc\\" | undefined;

  @Field(_type => SortOrder, {
    nullable: true
  })
  stringField?: \\"asc\\" | \\"desc\\" | undefined;

  @Field(_type => SortOrder, {
    nullable: true
  })
  floatField?: \\"asc\\" | \\"desc\\" | undefined;

  @Field(_type => SortOrder, {
    nullable: true
  })
  intField?: \\"asc\\" | \\"desc\\" | undefined;

  @Field(_type => SortOrder, {
    nullable: true
  })
  booleanField?: \\"asc\\" | \\"desc\\" | undefined;

  @Field(_type => SortOrder, {
    nullable: true
  })
  dateField?: \\"asc\\" | \\"desc\\" | undefined;
}
"
`;

exports[`inputs should properly generate input type classes for sorting by many-to-many relation fields: SampleOrderByWithAggregationInput 1`] = `
"import { Args, ArgsType, Context, Field, Float, ID, Info, InputType, Int, Mutation, ObjectType, Query, ResolveField, Resolver, Root, registerEnumType } from \\"@nestjs/graphql\\";
import * as GraphQLScalars from \\"graphql-scalars\\";
import { Prisma } from \\"../../../../helpers/prisma-client-mock\\";
import { DecimalJSScalar } from \\"../../scalars\\";
import { SampleAvgOrderByAggregateInput } from \\"../inputs/SampleAvgOrderByAggregateInput\\";
import { SampleCountOrderByAggregateInput } from \\"../inputs/SampleCountOrderByAggregateInput\\";
import { SampleMaxOrderByAggregateInput } from \\"../inputs/SampleMaxOrderByAggregateInput\\";
import { SampleMinOrderByAggregateInput } from \\"../inputs/SampleMinOrderByAggregateInput\\";
import { SampleSumOrderByAggregateInput } from \\"../inputs/SampleSumOrderByAggregateInput\\";
import { SortOrder } from \\"../../enums/SortOrder\\";

@InputType(\\"SampleOrderByWithAggregationInput\\", {
  isAbstract: true
})
export class SampleOrderByWithAggregationInput {
  @Field(_type => SortOrder, {
    nullable: true
  })
  idField?: \\"asc\\" | \\"desc\\" | undefined;

  @Field(_type => SortOrder, {
    nullable: true
  })
  stringField?: \\"asc\\" | \\"desc\\" | undefined;

  @Field(_type => SortOrder, {
    nullable: true
  })
  floatField?: \\"asc\\" | \\"desc\\" | undefined;

  @Field(_type => SortOrder, {
    nullable: true
  })
  intField?: \\"asc\\" | \\"desc\\" | undefined;

  @Field(_type => SortOrder, {
    nullable: true
  })
  booleanField?: \\"asc\\" | \\"desc\\" | undefined;

  @Field(_type => SortOrder, {
    nullable: true
  })
  dateField?: \\"asc\\" | \\"desc\\" | undefined;

  @Field(_type => SortOrder, {
    nullable: true
  })
  jsonField?: \\"asc\\" | \\"desc\\" | undefined;

  @Field(_type => SampleCountOrderByAggregateInput, {
    nullable: true
  })
  _count?: SampleCountOrderByAggregateInput | undefined;

  @Field(_type => SampleAvgOrderByAggregateInput, {
    nullable: true
  })
  _avg?: SampleAvgOrderByAggregateInput | undefined;

  @Field(_type => SampleMaxOrderByAggregateInput, {
    nullable: true
  })
  _max?: SampleMaxOrderByAggregateInput | undefined;

  @Field(_type => SampleMinOrderByAggregateInput, {
    nullable: true
  })
  _min?: SampleMinOrderByAggregateInput | undefined;

  @Field(_type => SampleSumOrderByAggregateInput, {
    nullable: true
  })
  _sum?: SampleSumOrderByAggregateInput | undefined;
}
"
`;

exports[`inputs should properly generate input type classes for sorting by many-to-many relation fields: SecondModelOrderByRelationAggregateInput 1`] = `
"import { Args, ArgsType, Context, Field, Float, ID, Info, InputType, Int, Mutation, ObjectType, Query, ResolveField, Resolver, Root, registerEnumType } from \\"@nestjs/graphql\\";
import * as GraphQLScalars from \\"graphql-scalars\\";
import { Prisma } from \\"../../../../helpers/prisma-client-mock\\";
import { DecimalJSScalar } from \\"../../scalars\\";
import { SortOrder } from \\"../../enums/SortOrder\\";

@InputType(\\"SecondModelOrderByRelationAggregateInput\\", {
  isAbstract: true
})
export class SecondModelOrderByRelationAggregateInput {
  @Field(_type => SortOrder, {
    nullable: true
  })
  _count?: \\"asc\\" | \\"desc\\" | undefined;
}
"
`;

exports[`inputs should properly generate input type classes for sorting by many-to-many relation fields: index 1`] = `
"export { FirstModelAvgOrderByAggregateInput } from \\"./FirstModelAvgOrderByAggregateInput\\";
export { FirstModelCountOrderByAggregateInput } from \\"./FirstModelCountOrderByAggregateInput\\";
export { FirstModelCreateInput } from \\"./FirstModelCreateInput\\";
export { FirstModelCreateManyInput } from \\"./FirstModelCreateManyInput\\";
export { FirstModelCreateNestedManyWithoutSecondModelsFieldInput } from \\"./FirstModelCreateNestedManyWithoutSecondModelsFieldInput\\";
export { FirstModelCreateOrConnectWithoutSecondModelsFieldInput } from \\"./FirstModelCreateOrConnectWithoutSecondModelsFieldInput\\";
export { FirstModelCreateWithoutSecondModelsFieldInput } from \\"./FirstModelCreateWithoutSecondModelsFieldInput\\";
export { FirstModelListRelationFilter } from \\"./FirstModelListRelationFilter\\";
export { FirstModelMaxOrderByAggregateInput } from \\"./FirstModelMaxOrderByAggregateInput\\";
export { FirstModelMinOrderByAggregateInput } from \\"./FirstModelMinOrderByAggregateInput\\";
export { FirstModelOrderByRelationAggregateInput } from \\"./FirstModelOrderByRelationAggregateInput\\";
export { FirstModelOrderByWithAggregationInput } from \\"./FirstModelOrderByWithAggregationInput\\";
export { FirstModelOrderByWithRelationInput } from \\"./FirstModelOrderByWithRelationInput\\";
export { FirstModelScalarWhereInput } from \\"./FirstModelScalarWhereInput\\";
export { FirstModelScalarWhereWithAggregatesInput } from \\"./FirstModelScalarWhereWithAggregatesInput\\";
export { FirstModelSumOrderByAggregateInput } from \\"./FirstModelSumOrderByAggregateInput\\";
export { FirstModelUpdateInput } from \\"./FirstModelUpdateInput\\";
export { FirstModelUpdateManyMutationInput } from \\"./FirstModelUpdateManyMutationInput\\";
export { FirstModelUpdateManyWithWhereWithoutSecondModelsFieldInput } from \\"./FirstModelUpdateManyWithWhereWithoutSecondModelsFieldInput\\";
export { FirstModelUpdateManyWithoutSecondModelsFieldNestedInput } from \\"./FirstModelUpdateManyWithoutSecondModelsFieldNestedInput\\";
export { FirstModelUpdateWithWhereUniqueWithoutSecondModelsFieldInput } from \\"./FirstModelUpdateWithWhereUniqueWithoutSecondModelsFieldInput\\";
export { FirstModelUpdateWithoutSecondModelsFieldInput } from \\"./FirstModelUpdateWithoutSecondModelsFieldInput\\";
export { FirstModelUpsertWithWhereUniqueWithoutSecondModelsFieldInput } from \\"./FirstModelUpsertWithWhereUniqueWithoutSecondModelsFieldInput\\";
export { FirstModelWhereInput } from \\"./FirstModelWhereInput\\";
export { FirstModelWhereUniqueInput } from \\"./FirstModelWhereUniqueInput\\";
export { FloatFieldUpdateOperationsInput } from \\"./FloatFieldUpdateOperationsInput\\";
export { FloatFilter } from \\"./FloatFilter\\";
export { FloatWithAggregatesFilter } from \\"./FloatWithAggregatesFilter\\";
export { IntFieldUpdateOperationsInput } from \\"./IntFieldUpdateOperationsInput\\";
export { IntFilter } from \\"./IntFilter\\";
export { IntWithAggregatesFilter } from \\"./IntWithAggregatesFilter\\";
export { NestedFloatFilter } from \\"./NestedFloatFilter\\";
export { NestedFloatWithAggregatesFilter } from \\"./NestedFloatWithAggregatesFilter\\";
export { NestedIntFilter } from \\"./NestedIntFilter\\";
export { NestedIntWithAggregatesFilter } from \\"./NestedIntWithAggregatesFilter\\";
export { NestedStringFilter } from \\"./NestedStringFilter\\";
export { NestedStringWithAggregatesFilter } from \\"./NestedStringWithAggregatesFilter\\";
export { SecondModelAvgOrderByAggregateInput } from \\"./SecondModelAvgOrderByAggregateInput\\";
export { SecondModelCountOrderByAggregateInput } from \\"./SecondModelCountOrderByAggregateInput\\";
export { SecondModelCreateInput } from \\"./SecondModelCreateInput\\";
export { SecondModelCreateManyInput } from \\"./SecondModelCreateManyInput\\";
export { SecondModelCreateNestedManyWithoutFirstModelsFieldInput } from \\"./SecondModelCreateNestedManyWithoutFirstModelsFieldInput\\";
export { SecondModelCreateOrConnectWithoutFirstModelsFieldInput } from \\"./SecondModelCreateOrConnectWithoutFirstModelsFieldInput\\";
export { SecondModelCreateWithoutFirstModelsFieldInput } from \\"./SecondModelCreateWithoutFirstModelsFieldInput\\";
export { SecondModelListRelationFilter } from \\"./SecondModelListRelationFilter\\";
export { SecondModelMaxOrderByAggregateInput } from \\"./SecondModelMaxOrderByAggregateInput\\";
export { SecondModelMinOrderByAggregateInput } from \\"./SecondModelMinOrderByAggregateInput\\";
export { SecondModelOrderByRelationAggregateInput } from \\"./SecondModelOrderByRelationAggregateInput\\";
export { SecondModelOrderByWithAggregationInput } from \\"./SecondModelOrderByWithAggregationInput\\";
export { SecondModelOrderByWithRelationInput } from \\"./SecondModelOrderByWithRelationInput\\";
export { SecondModelScalarWhereInput } from \\"./SecondModelScalarWhereInput\\";
export { SecondModelScalarWhereWithAggregatesInput } from \\"./SecondModelScalarWhereWithAggregatesInput\\";
export { SecondModelSumOrderByAggregateInput } from \\"./SecondModelSumOrderByAggregateInput\\";
export { SecondModelUpdateInput } from \\"./SecondModelUpdateInput\\";
export { SecondModelUpdateManyMutationInput } from \\"./SecondModelUpdateManyMutationInput\\";
export { SecondModelUpdateManyWithWhereWithoutFirstModelsFieldInput } from \\"./SecondModelUpdateManyWithWhereWithoutFirstModelsFieldInput\\";
export { SecondModelUpdateManyWithoutFirstModelsFieldNestedInput } from \\"./SecondModelUpdateManyWithoutFirstModelsFieldNestedInput\\";
export { SecondModelUpdateWithWhereUniqueWithoutFirstModelsFieldInput } from \\"./SecondModelUpdateWithWhereUniqueWithoutFirstModelsFieldInput\\";
export { SecondModelUpdateWithoutFirstModelsFieldInput } from \\"./SecondModelUpdateWithoutFirstModelsFieldInput\\";
export { SecondModelUpsertWithWhereUniqueWithoutFirstModelsFieldInput } from \\"./SecondModelUpsertWithWhereUniqueWithoutFirstModelsFieldInput\\";
export { SecondModelWhereInput } from \\"./SecondModelWhereInput\\";
export { SecondModelWhereUniqueInput } from \\"./SecondModelWhereUniqueInput\\";
export { StringFieldUpdateOperationsInput } from \\"./StringFieldUpdateOperationsInput\\";
export { StringFilter } from \\"./StringFilter\\";
export { StringWithAggregatesFilter } from \\"./StringWithAggregatesFilter\\";
"
`;

exports[`inputs should properly generate input type classes for sorting by many-to-many relation fields: index 2`] = `
"export { BoolFieldUpdateOperationsInput } from \\"./BoolFieldUpdateOperationsInput\\";
export { BoolFilter } from \\"./BoolFilter\\";
export { BoolWithAggregatesFilter } from \\"./BoolWithAggregatesFilter\\";
export { DateTimeFieldUpdateOperationsInput } from \\"./DateTimeFieldUpdateOperationsInput\\";
export { DateTimeFilter } from \\"./DateTimeFilter\\";
export { DateTimeWithAggregatesFilter } from \\"./DateTimeWithAggregatesFilter\\";
export { FloatFieldUpdateOperationsInput } from \\"./FloatFieldUpdateOperationsInput\\";
export { FloatFilter } from \\"./FloatFilter\\";
export { FloatWithAggregatesFilter } from \\"./FloatWithAggregatesFilter\\";
export { IntFieldUpdateOperationsInput } from \\"./IntFieldUpdateOperationsInput\\";
export { IntFilter } from \\"./IntFilter\\";
export { IntWithAggregatesFilter } from \\"./IntWithAggregatesFilter\\";
export { JsonFilter } from \\"./JsonFilter\\";
export { JsonWithAggregatesFilter } from \\"./JsonWithAggregatesFilter\\";
export { NestedBoolFilter } from \\"./NestedBoolFilter\\";
export { NestedBoolWithAggregatesFilter } from \\"./NestedBoolWithAggregatesFilter\\";
export { NestedDateTimeFilter } from \\"./NestedDateTimeFilter\\";
export { NestedDateTimeWithAggregatesFilter } from \\"./NestedDateTimeWithAggregatesFilter\\";
export { NestedFloatFilter } from \\"./NestedFloatFilter\\";
export { NestedFloatWithAggregatesFilter } from \\"./NestedFloatWithAggregatesFilter\\";
export { NestedIntFilter } from \\"./NestedIntFilter\\";
export { NestedIntWithAggregatesFilter } from \\"./NestedIntWithAggregatesFilter\\";
export { NestedJsonFilter } from \\"./NestedJsonFilter\\";
export { NestedStringFilter } from \\"./NestedStringFilter\\";
export { NestedStringWithAggregatesFilter } from \\"./NestedStringWithAggregatesFilter\\";
export { SampleAvgOrderByAggregateInput } from \\"./SampleAvgOrderByAggregateInput\\";
export { SampleCountOrderByAggregateInput } from \\"./SampleCountOrderByAggregateInput\\";
export { SampleCreateInput } from \\"./SampleCreateInput\\";
export { SampleCreateManyInput } from \\"./SampleCreateManyInput\\";
export { SampleMaxOrderByAggregateInput } from \\"./SampleMaxOrderByAggregateInput\\";
export { SampleMinOrderByAggregateInput } from \\"./SampleMinOrderByAggregateInput\\";
export { SampleOrderByWithAggregationInput } from \\"./SampleOrderByWithAggregationInput\\";
export { SampleOrderByWithRelationInput } from \\"./SampleOrderByWithRelationInput\\";
export { SampleScalarWhereWithAggregatesInput } from \\"./SampleScalarWhereWithAggregatesInput\\";
export { SampleSumOrderByAggregateInput } from \\"./SampleSumOrderByAggregateInput\\";
export { SampleUpdateInput } from \\"./SampleUpdateInput\\";
export { SampleUpdateManyMutationInput } from \\"./SampleUpdateManyMutationInput\\";
export { SampleWhereInput } from \\"./SampleWhereInput\\";
export { SampleWhereUniqueInput } from \\"./SampleWhereUniqueInput\\";
export { StringFieldUpdateOperationsInput } from \\"./StringFieldUpdateOperationsInput\\";
export { StringFilter } from \\"./StringFilter\\";
export { StringWithAggregatesFilter } from \\"./StringWithAggregatesFilter\\";
"
`;

exports[`inputs should properly generate input type classes for sorting by one-to-many relation fields: FirstModelOrderByWithRelationInput 1`] = `
"import { Args, ArgsType, Context, Field, Float, ID, Info, InputType, Int, Mutation, ObjectType, Query, ResolveField, Resolver, Root, registerEnumType } from \\"@nestjs/graphql\\";
import * as GraphQLScalars from \\"graphql-scalars\\";
import { Prisma } from \\"../../../../helpers/prisma-client-mock\\";
import { DecimalJSScalar } from \\"../../scalars\\";
import { SecondModelOrderByRelationAggregateInput } from \\"../inputs/SecondModelOrderByRelationAggregateInput\\";
import { SortOrder } from \\"../../enums/SortOrder\\";

@InputType(\\"FirstModelOrderByWithRelationInput\\", {
  isAbstract: true
})
export class FirstModelOrderByWithRelationInput {
  @Field(_type => SortOrder, {
    nullable: true
  })
  idField?: \\"asc\\" | \\"desc\\" | undefined;

  @Field(_type => SortOrder, {
    nullable: true
  })
  uniqueStringField?: \\"asc\\" | \\"desc\\" | undefined;

  @Field(_type => SortOrder, {
    nullable: true
  })
  floatField?: \\"asc\\" | \\"desc\\" | undefined;

  @Field(_type => SecondModelOrderByRelationAggregateInput, {
    nullable: true
  })
  secondModelsField?: SecondModelOrderByRelationAggregateInput | undefined;
}
"
`;

exports[`inputs should properly generate input type classes for sorting by one-to-many relation fields: SecondModelOrderByRelationAggregateInput 1`] = `
"import { Args, ArgsType, Context, Field, Float, ID, Info, InputType, Int, Mutation, ObjectType, Query, ResolveField, Resolver, Root, registerEnumType } from \\"@nestjs/graphql\\";
import * as GraphQLScalars from \\"graphql-scalars\\";
import { Prisma } from \\"../../../../helpers/prisma-client-mock\\";
import { DecimalJSScalar } from \\"../../scalars\\";
import { SortOrder } from \\"../../enums/SortOrder\\";

@InputType(\\"SecondModelOrderByRelationAggregateInput\\", {
  isAbstract: true
})
export class SecondModelOrderByRelationAggregateInput {
  @Field(_type => SortOrder, {
    nullable: true
  })
  _count?: \\"asc\\" | \\"desc\\" | undefined;
}
"
`;

exports[`inputs should properly generate input type classes for sorting by one-to-many relation fields: SecondModelOrderByWithRelationInput 1`] = `
"import { Args, ArgsType, Context, Field, Float, ID, Info, InputType, Int, Mutation, ObjectType, Query, ResolveField, Resolver, Root, registerEnumType } from \\"@nestjs/graphql\\";
import * as GraphQLScalars from \\"graphql-scalars\\";
import { Prisma } from \\"../../../../helpers/prisma-client-mock\\";
import { DecimalJSScalar } from \\"../../scalars\\";
import { FirstModelOrderByWithRelationInput } from \\"../inputs/FirstModelOrderByWithRelationInput\\";
import { SortOrder } from \\"../../enums/SortOrder\\";

@InputType(\\"SecondModelOrderByWithRelationInput\\", {
  isAbstract: true
})
export class SecondModelOrderByWithRelationInput {
  @Field(_type => SortOrder, {
    nullable: true
  })
  idField?: \\"asc\\" | \\"desc\\" | undefined;

  @Field(_type => SortOrder, {
    nullable: true
  })
  uniqueStringField?: \\"asc\\" | \\"desc\\" | undefined;

  @Field(_type => SortOrder, {
    nullable: true
  })
  floatField?: \\"asc\\" | \\"desc\\" | undefined;

  @Field(_type => SortOrder, {
    nullable: true
  })
  firstModelFieldId?: \\"asc\\" | \\"desc\\" | undefined;

  @Field(_type => FirstModelOrderByWithRelationInput, {
    nullable: true
  })
  firstModelField?: FirstModelOrderByWithRelationInput | undefined;
}
"
`;

exports[`inputs should properly generate input type classes for sorting by one-to-many relation fields: index 1`] = `
"export { FirstModelAvgOrderByAggregateInput } from \\"./FirstModelAvgOrderByAggregateInput\\";
export { FirstModelCountOrderByAggregateInput } from \\"./FirstModelCountOrderByAggregateInput\\";
export { FirstModelCreateInput } from \\"./FirstModelCreateInput\\";
export { FirstModelCreateManyInput } from \\"./FirstModelCreateManyInput\\";
export { FirstModelCreateNestedOneWithoutSecondModelsFieldInput } from \\"./FirstModelCreateNestedOneWithoutSecondModelsFieldInput\\";
export { FirstModelCreateOrConnectWithoutSecondModelsFieldInput } from \\"./FirstModelCreateOrConnectWithoutSecondModelsFieldInput\\";
export { FirstModelCreateWithoutSecondModelsFieldInput } from \\"./FirstModelCreateWithoutSecondModelsFieldInput\\";
export { FirstModelMaxOrderByAggregateInput } from \\"./FirstModelMaxOrderByAggregateInput\\";
export { FirstModelMinOrderByAggregateInput } from \\"./FirstModelMinOrderByAggregateInput\\";
export { FirstModelOrderByWithAggregationInput } from \\"./FirstModelOrderByWithAggregationInput\\";
export { FirstModelOrderByWithRelationInput } from \\"./FirstModelOrderByWithRelationInput\\";
export { FirstModelRelationFilter } from \\"./FirstModelRelationFilter\\";
export { FirstModelScalarWhereWithAggregatesInput } from \\"./FirstModelScalarWhereWithAggregatesInput\\";
export { FirstModelSumOrderByAggregateInput } from \\"./FirstModelSumOrderByAggregateInput\\";
export { FirstModelUpdateInput } from \\"./FirstModelUpdateInput\\";
export { FirstModelUpdateManyMutationInput } from \\"./FirstModelUpdateManyMutationInput\\";
export { FirstModelUpdateOneRequiredWithoutSecondModelsFieldNestedInput } from \\"./FirstModelUpdateOneRequiredWithoutSecondModelsFieldNestedInput\\";
export { FirstModelUpdateWithoutSecondModelsFieldInput } from \\"./FirstModelUpdateWithoutSecondModelsFieldInput\\";
export { FirstModelUpsertWithoutSecondModelsFieldInput } from \\"./FirstModelUpsertWithoutSecondModelsFieldInput\\";
export { FirstModelWhereInput } from \\"./FirstModelWhereInput\\";
export { FirstModelWhereUniqueInput } from \\"./FirstModelWhereUniqueInput\\";
export { FloatFieldUpdateOperationsInput } from \\"./FloatFieldUpdateOperationsInput\\";
export { FloatFilter } from \\"./FloatFilter\\";
export { FloatWithAggregatesFilter } from \\"./FloatWithAggregatesFilter\\";
export { IntFieldUpdateOperationsInput } from \\"./IntFieldUpdateOperationsInput\\";
export { IntFilter } from \\"./IntFilter\\";
export { IntWithAggregatesFilter } from \\"./IntWithAggregatesFilter\\";
export { NestedFloatFilter } from \\"./NestedFloatFilter\\";
export { NestedFloatWithAggregatesFilter } from \\"./NestedFloatWithAggregatesFilter\\";
export { NestedIntFilter } from \\"./NestedIntFilter\\";
export { NestedIntWithAggregatesFilter } from \\"./NestedIntWithAggregatesFilter\\";
export { NestedStringFilter } from \\"./NestedStringFilter\\";
export { NestedStringWithAggregatesFilter } from \\"./NestedStringWithAggregatesFilter\\";
export { SecondModelAvgOrderByAggregateInput } from \\"./SecondModelAvgOrderByAggregateInput\\";
export { SecondModelCountOrderByAggregateInput } from \\"./SecondModelCountOrderByAggregateInput\\";
export { SecondModelCreateInput } from \\"./SecondModelCreateInput\\";
export { SecondModelCreateManyFirstModelFieldInput } from \\"./SecondModelCreateManyFirstModelFieldInput\\";
export { SecondModelCreateManyFirstModelFieldInputEnvelope } from \\"./SecondModelCreateManyFirstModelFieldInputEnvelope\\";
export { SecondModelCreateManyInput } from \\"./SecondModelCreateManyInput\\";
export { SecondModelCreateNestedManyWithoutFirstModelFieldInput } from \\"./SecondModelCreateNestedManyWithoutFirstModelFieldInput\\";
export { SecondModelCreateOrConnectWithoutFirstModelFieldInput } from \\"./SecondModelCreateOrConnectWithoutFirstModelFieldInput\\";
export { SecondModelCreateWithoutFirstModelFieldInput } from \\"./SecondModelCreateWithoutFirstModelFieldInput\\";
export { SecondModelListRelationFilter } from \\"./SecondModelListRelationFilter\\";
export { SecondModelMaxOrderByAggregateInput } from \\"./SecondModelMaxOrderByAggregateInput\\";
export { SecondModelMinOrderByAggregateInput } from \\"./SecondModelMinOrderByAggregateInput\\";
export { SecondModelOrderByRelationAggregateInput } from \\"./SecondModelOrderByRelationAggregateInput\\";
export { SecondModelOrderByWithAggregationInput } from \\"./SecondModelOrderByWithAggregationInput\\";
export { SecondModelOrderByWithRelationInput } from \\"./SecondModelOrderByWithRelationInput\\";
export { SecondModelScalarWhereInput } from \\"./SecondModelScalarWhereInput\\";
export { SecondModelScalarWhereWithAggregatesInput } from \\"./SecondModelScalarWhereWithAggregatesInput\\";
export { SecondModelSumOrderByAggregateInput } from \\"./SecondModelSumOrderByAggregateInput\\";
export { SecondModelUpdateInput } from \\"./SecondModelUpdateInput\\";
export { SecondModelUpdateManyMutationInput } from \\"./SecondModelUpdateManyMutationInput\\";
export { SecondModelUpdateManyWithWhereWithoutFirstModelFieldInput } from \\"./SecondModelUpdateManyWithWhereWithoutFirstModelFieldInput\\";
export { SecondModelUpdateManyWithoutFirstModelFieldNestedInput } from \\"./SecondModelUpdateManyWithoutFirstModelFieldNestedInput\\";
export { SecondModelUpdateWithWhereUniqueWithoutFirstModelFieldInput } from \\"./SecondModelUpdateWithWhereUniqueWithoutFirstModelFieldInput\\";
export { SecondModelUpdateWithoutFirstModelFieldInput } from \\"./SecondModelUpdateWithoutFirstModelFieldInput\\";
export { SecondModelUpsertWithWhereUniqueWithoutFirstModelFieldInput } from \\"./SecondModelUpsertWithWhereUniqueWithoutFirstModelFieldInput\\";
export { SecondModelWhereInput } from \\"./SecondModelWhereInput\\";
export { SecondModelWhereUniqueInput } from \\"./SecondModelWhereUniqueInput\\";
export { StringFieldUpdateOperationsInput } from \\"./StringFieldUpdateOperationsInput\\";
export { StringFilter } from \\"./StringFilter\\";
export { StringWithAggregatesFilter } from \\"./StringWithAggregatesFilter\\";
"
`;

exports[`inputs should properly generate input type classes for updating scalar fields in postgres schema: SampleModelCreateInput 1`] = `
"import { Args, ArgsType, Context, Field, Float, ID, Info, InputType, Int, Mutation, ObjectType, Query, ResolveField, Resolver, Root, registerEnumType } from \\"@nestjs/graphql\\";
import * as GraphQLScalars from \\"graphql-scalars\\";
import { Prisma } from \\"../../../../helpers/prisma-client-mock\\";
import { DecimalJSScalar } from \\"../../scalars\\";
import { SampleNestedTypeCreateInput } from \\"../inputs/SampleNestedTypeCreateInput\\";
import { Color } from \\"../../enums/Color\\";

@InputType(\\"SampleModelCreateInput\\", {
  isAbstract: true
})
export class SampleModelCreateInput {
  @Field(_type => String, {
    nullable: true
  })
  intIdField?: string | undefined;

  @Field(_type => String, {
    nullable: false
  })
  stringField!: string;

  @Field(_type => String, {
    nullable: true
  })
  optionalStringField?: string | undefined;

  @Field(_type => Int, {
    nullable: false
  })
  intField!: number;

  @Field(_type => Int, {
    nullable: true
  })
  optionalIntField?: number | undefined;

  @Field(_type => Float, {
    nullable: false
  })
  floatField!: number;

  @Field(_type => Float, {
    nullable: true
  })
  optionalFloatField?: number | undefined;

  @Field(_type => Boolean, {
    nullable: false
  })
  booleanField!: boolean;

  @Field(_type => Boolean, {
    nullable: true
  })
  optionalBooleanField?: boolean | undefined;

  @Field(_type => Date, {
    nullable: false
  })
  dateField!: Date;

  @Field(_type => Date, {
    nullable: true
  })
  optionalDateField?: Date | undefined;

  @Field(_type => GraphQLScalars.JSONResolver, {
    nullable: false
  })
  jsonField!: Prisma.InputJsonValue;

  @Field(_type => GraphQLScalars.JSONResolver, {
    nullable: true
  })
  optionalJsonField?: Prisma.InputJsonValue | undefined;

  @Field(_type => Color, {
    nullable: false
  })
  enumField!: \\"RED\\" | \\"GREEN\\" | \\"BLUE\\";

  @Field(_type => Color, {
    nullable: true
  })
  optionalEnumField?: \\"RED\\" | \\"GREEN\\" | \\"BLUE\\" | undefined;

  @Field(_type => [Int], {
    nullable: true
  })
  intArrayField?: number[] | undefined;

  @Field(_type => [String], {
    nullable: true
  })
  stringArrayField?: string[] | undefined;

  @Field(_type => SampleNestedTypeCreateInput, {
    nullable: false
  })
  nestedModelField!: SampleNestedTypeCreateInput;
}
"
`;

exports[`inputs should properly generate input type classes for updating scalar fields in postgres schema: SampleModelCreateManyInput 1`] = `
"import { Args, ArgsType, Context, Field, Float, ID, Info, InputType, Int, Mutation, ObjectType, Query, ResolveField, Resolver, Root, registerEnumType } from \\"@nestjs/graphql\\";
import * as GraphQLScalars from \\"graphql-scalars\\";
import { Prisma } from \\"../../../../helpers/prisma-client-mock\\";
import { DecimalJSScalar } from \\"../../scalars\\";
import { SampleNestedTypeCreateInput } from \\"../inputs/SampleNestedTypeCreateInput\\";
import { Color } from \\"../../enums/Color\\";

@InputType(\\"SampleModelCreateManyInput\\", {
  isAbstract: true
})
export class SampleModelCreateManyInput {
  @Field(_type => String, {
    nullable: true
  })
  intIdField?: string | undefined;

  @Field(_type => String, {
    nullable: false
  })
  stringField!: string;

  @Field(_type => String, {
    nullable: true
  })
  optionalStringField?: string | undefined;

  @Field(_type => Int, {
    nullable: false
  })
  intField!: number;

  @Field(_type => Int, {
    nullable: true
  })
  optionalIntField?: number | undefined;

  @Field(_type => Float, {
    nullable: false
  })
  floatField!: number;

  @Field(_type => Float, {
    nullable: true
  })
  optionalFloatField?: number | undefined;

  @Field(_type => Boolean, {
    nullable: false
  })
  booleanField!: boolean;

  @Field(_type => Boolean, {
    nullable: true
  })
  optionalBooleanField?: boolean | undefined;

  @Field(_type => Date, {
    nullable: false
  })
  dateField!: Date;

  @Field(_type => Date, {
    nullable: true
  })
  optionalDateField?: Date | undefined;

  @Field(_type => GraphQLScalars.JSONResolver, {
    nullable: false
  })
  jsonField!: Prisma.InputJsonValue;

  @Field(_type => GraphQLScalars.JSONResolver, {
    nullable: true
  })
  optionalJsonField?: Prisma.InputJsonValue | undefined;

  @Field(_type => Color, {
    nullable: false
  })
  enumField!: \\"RED\\" | \\"GREEN\\" | \\"BLUE\\";

  @Field(_type => Color, {
    nullable: true
  })
  optionalEnumField?: \\"RED\\" | \\"GREEN\\" | \\"BLUE\\" | undefined;

  @Field(_type => [Int], {
    nullable: true
  })
  intArrayField?: number[] | undefined;

  @Field(_type => [String], {
    nullable: true
  })
  stringArrayField?: string[] | undefined;

  @Field(_type => SampleNestedTypeCreateInput, {
    nullable: false
  })
  nestedModelField!: SampleNestedTypeCreateInput;
}
"
`;

exports[`inputs should properly generate input type classes for updating scalar fields in postgres schema: SampleModelUpdateInput 1`] = `
"import { Args, ArgsType, Context, Field, Float, ID, Info, InputType, Int, Mutation, ObjectType, Query, ResolveField, Resolver, Root, registerEnumType } from \\"@nestjs/graphql\\";
import * as GraphQLScalars from \\"graphql-scalars\\";
import { Prisma } from \\"../../../../helpers/prisma-client-mock\\";
import { DecimalJSScalar } from \\"../../scalars\\";
import { SampleNestedTypeCreateInput } from \\"../inputs/SampleNestedTypeCreateInput\\";
import { Color } from \\"../../enums/Color\\";

@InputType(\\"SampleModelUpdateInput\\", {
  isAbstract: true
})
export class SampleModelUpdateInput {
  @Field(_type => String, {
    nullable: true
  })
  stringField?: string | undefined;

  @Field(_type => String, {
    nullable: true
  })
  optionalStringField?: string | undefined;

  @Field(_type => Int, {
    nullable: true
  })
  intField?: number | undefined;

  @Field(_type => Int, {
    nullable: true
  })
  optionalIntField?: number | undefined;

  @Field(_type => Float, {
    nullable: true
  })
  floatField?: number | undefined;

  @Field(_type => Float, {
    nullable: true
  })
  optionalFloatField?: number | undefined;

  @Field(_type => Boolean, {
    nullable: true
  })
  booleanField?: boolean | undefined;

  @Field(_type => Boolean, {
    nullable: true
  })
  optionalBooleanField?: boolean | undefined;

  @Field(_type => Date, {
    nullable: true
  })
  dateField?: Date | undefined;

  @Field(_type => Date, {
    nullable: true
  })
  optionalDateField?: Date | undefined;

  @Field(_type => GraphQLScalars.JSONResolver, {
    nullable: true
  })
  jsonField?: Prisma.InputJsonValue | undefined;

  @Field(_type => GraphQLScalars.JSONResolver, {
    nullable: true
  })
  optionalJsonField?: Prisma.InputJsonValue | undefined;

  @Field(_type => Color, {
    nullable: true
  })
  enumField?: \\"RED\\" | \\"GREEN\\" | \\"BLUE\\" | undefined;

  @Field(_type => Color, {
    nullable: true
  })
  optionalEnumField?: \\"RED\\" | \\"GREEN\\" | \\"BLUE\\" | undefined;

  @Field(_type => [Int], {
    nullable: true
  })
  intArrayField?: number[] | undefined;

  @Field(_type => [String], {
    nullable: true
  })
  stringArrayField?: string[] | undefined;

  @Field(_type => SampleNestedTypeCreateInput, {
    nullable: true
  })
  nestedModelField?: SampleNestedTypeCreateInput | undefined;
}
"
`;

exports[`inputs should properly generate input type classes for updating scalar fields in postgres schema: SampleModelUpdateManyMutationInput 1`] = `
"import { Args, ArgsType, Context, Field, Float, ID, Info, InputType, Int, Mutation, ObjectType, Query, ResolveField, Resolver, Root, registerEnumType } from \\"@nestjs/graphql\\";
import * as GraphQLScalars from \\"graphql-scalars\\";
import { Prisma } from \\"../../../../helpers/prisma-client-mock\\";
import { DecimalJSScalar } from \\"../../scalars\\";
import { SampleNestedTypeCreateInput } from \\"../inputs/SampleNestedTypeCreateInput\\";
import { Color } from \\"../../enums/Color\\";

@InputType(\\"SampleModelUpdateManyMutationInput\\", {
  isAbstract: true
})
export class SampleModelUpdateManyMutationInput {
  @Field(_type => String, {
    nullable: true
  })
  stringField?: string | undefined;

  @Field(_type => String, {
    nullable: true
  })
  optionalStringField?: string | undefined;

  @Field(_type => Int, {
    nullable: true
  })
  intField?: number | undefined;

  @Field(_type => Int, {
    nullable: true
  })
  optionalIntField?: number | undefined;

  @Field(_type => Float, {
    nullable: true
  })
  floatField?: number | undefined;

  @Field(_type => Float, {
    nullable: true
  })
  optionalFloatField?: number | undefined;

  @Field(_type => Boolean, {
    nullable: true
  })
  booleanField?: boolean | undefined;

  @Field(_type => Boolean, {
    nullable: true
  })
  optionalBooleanField?: boolean | undefined;

  @Field(_type => Date, {
    nullable: true
  })
  dateField?: Date | undefined;

  @Field(_type => Date, {
    nullable: true
  })
  optionalDateField?: Date | undefined;

  @Field(_type => GraphQLScalars.JSONResolver, {
    nullable: true
  })
  jsonField?: Prisma.InputJsonValue | undefined;

  @Field(_type => GraphQLScalars.JSONResolver, {
    nullable: true
  })
  optionalJsonField?: Prisma.InputJsonValue | undefined;

  @Field(_type => Color, {
    nullable: true
  })
  enumField?: \\"RED\\" | \\"GREEN\\" | \\"BLUE\\" | undefined;

  @Field(_type => Color, {
    nullable: true
  })
  optionalEnumField?: \\"RED\\" | \\"GREEN\\" | \\"BLUE\\" | undefined;

  @Field(_type => [Int], {
    nullable: true
  })
  intArrayField?: number[] | undefined;

  @Field(_type => [String], {
    nullable: true
  })
  stringArrayField?: string[] | undefined;

  @Field(_type => SampleNestedTypeCreateInput, {
    nullable: true
  })
  nestedModelField?: SampleNestedTypeCreateInput | undefined;
}
"
`;

exports[`inputs should properly generate input type classes for updating scalar fields in postgres schema: SampleNestedTypeCreateInput 1`] = `
"import { Args, ArgsType, Context, Field, Float, ID, Info, InputType, Int, Mutation, ObjectType, Query, ResolveField, Resolver, Root, registerEnumType } from \\"@nestjs/graphql\\";
import * as GraphQLScalars from \\"graphql-scalars\\";
import { Prisma } from \\"../../../../helpers/prisma-client-mock\\";
import { DecimalJSScalar } from \\"../../scalars\\";

@InputType(\\"SampleNestedTypeCreateInput\\", {
  isAbstract: true
})
export class SampleNestedTypeCreateInput {
  @Field(_type => String, {
    nullable: false
  })
  stringField!: string;

  @Field(_type => [String], {
    nullable: true
  })
  stringArrayField?: string[] | undefined;

  @Field(_type => Int, {
    nullable: false
  })
  intField!: number;

  @Field(_type => [Int], {
    nullable: true
  })
  intArrayField?: number[] | undefined;
}
"
`;

exports[`inputs should properly generate input type classes for updating scalar fields in postgres schema: SampleNestedTypeUpdateInput 1`] = `
"import { Args, ArgsType, Context, Field, Float, ID, Info, InputType, Int, Mutation, ObjectType, Query, ResolveField, Resolver, Root, registerEnumType } from \\"@nestjs/graphql\\";
import * as GraphQLScalars from \\"graphql-scalars\\";
import { Prisma } from \\"../../../../helpers/prisma-client-mock\\";
import { DecimalJSScalar } from \\"../../scalars\\";

@InputType(\\"SampleNestedTypeUpdateInput\\", {
  isAbstract: true
})
export class SampleNestedTypeUpdateInput {
  @Field(_type => String, {
    nullable: true
  })
  stringField?: string | undefined;

  @Field(_type => [String], {
    nullable: true
  })
  stringArrayField?: string[] | undefined;

  @Field(_type => Int, {
    nullable: true
  })
  intField?: number | undefined;

  @Field(_type => [Int], {
    nullable: true
  })
  intArrayField?: number[] | undefined;
}
"
`;

exports[`inputs should properly generate input type classes for updating scalar fields in postgres schema: index 1`] = `
"export { BoolFieldUpdateOperationsInput } from \\"./BoolFieldUpdateOperationsInput\\";
export { BoolFilter } from \\"./BoolFilter\\";
export { BoolNullableFilter } from \\"./BoolNullableFilter\\";
export { BoolNullableWithAggregatesFilter } from \\"./BoolNullableWithAggregatesFilter\\";
export { BoolWithAggregatesFilter } from \\"./BoolWithAggregatesFilter\\";
export { DateTimeFieldUpdateOperationsInput } from \\"./DateTimeFieldUpdateOperationsInput\\";
export { DateTimeFilter } from \\"./DateTimeFilter\\";
export { DateTimeNullableFilter } from \\"./DateTimeNullableFilter\\";
export { DateTimeNullableWithAggregatesFilter } from \\"./DateTimeNullableWithAggregatesFilter\\";
export { DateTimeWithAggregatesFilter } from \\"./DateTimeWithAggregatesFilter\\";
export { EnumColorFieldUpdateOperationsInput } from \\"./EnumColorFieldUpdateOperationsInput\\";
export { EnumColorFilter } from \\"./EnumColorFilter\\";
export { EnumColorNullableFilter } from \\"./EnumColorNullableFilter\\";
export { EnumColorNullableWithAggregatesFilter } from \\"./EnumColorNullableWithAggregatesFilter\\";
export { EnumColorWithAggregatesFilter } from \\"./EnumColorWithAggregatesFilter\\";
export { FloatFieldUpdateOperationsInput } from \\"./FloatFieldUpdateOperationsInput\\";
export { FloatFilter } from \\"./FloatFilter\\";
export { FloatNullableFilter } from \\"./FloatNullableFilter\\";
export { FloatNullableWithAggregatesFilter } from \\"./FloatNullableWithAggregatesFilter\\";
export { FloatWithAggregatesFilter } from \\"./FloatWithAggregatesFilter\\";
export { IntFieldUpdateOperationsInput } from \\"./IntFieldUpdateOperationsInput\\";
export { IntFilter } from \\"./IntFilter\\";
export { IntNullableFilter } from \\"./IntNullableFilter\\";
export { IntNullableListFilter } from \\"./IntNullableListFilter\\";
export { IntNullableWithAggregatesFilter } from \\"./IntNullableWithAggregatesFilter\\";
export { IntWithAggregatesFilter } from \\"./IntWithAggregatesFilter\\";
export { JsonFilter } from \\"./JsonFilter\\";
export { JsonNullableFilter } from \\"./JsonNullableFilter\\";
export { JsonNullableWithAggregatesFilter } from \\"./JsonNullableWithAggregatesFilter\\";
export { JsonWithAggregatesFilter } from \\"./JsonWithAggregatesFilter\\";
export { NestedBoolFilter } from \\"./NestedBoolFilter\\";
export { NestedBoolNullableFilter } from \\"./NestedBoolNullableFilter\\";
export { NestedBoolNullableWithAggregatesFilter } from \\"./NestedBoolNullableWithAggregatesFilter\\";
export { NestedBoolWithAggregatesFilter } from \\"./NestedBoolWithAggregatesFilter\\";
export { NestedDateTimeFilter } from \\"./NestedDateTimeFilter\\";
export { NestedDateTimeNullableFilter } from \\"./NestedDateTimeNullableFilter\\";
export { NestedDateTimeNullableWithAggregatesFilter } from \\"./NestedDateTimeNullableWithAggregatesFilter\\";
export { NestedDateTimeWithAggregatesFilter } from \\"./NestedDateTimeWithAggregatesFilter\\";
export { NestedEnumColorFilter } from \\"./NestedEnumColorFilter\\";
export { NestedEnumColorNullableFilter } from \\"./NestedEnumColorNullableFilter\\";
export { NestedEnumColorNullableWithAggregatesFilter } from \\"./NestedEnumColorNullableWithAggregatesFilter\\";
export { NestedEnumColorWithAggregatesFilter } from \\"./NestedEnumColorWithAggregatesFilter\\";
export { NestedFloatFilter } from \\"./NestedFloatFilter\\";
export { NestedFloatNullableFilter } from \\"./NestedFloatNullableFilter\\";
export { NestedFloatNullableWithAggregatesFilter } from \\"./NestedFloatNullableWithAggregatesFilter\\";
export { NestedFloatWithAggregatesFilter } from \\"./NestedFloatWithAggregatesFilter\\";
export { NestedIntFilter } from \\"./NestedIntFilter\\";
export { NestedIntNullableFilter } from \\"./NestedIntNullableFilter\\";
export { NestedIntNullableWithAggregatesFilter } from \\"./NestedIntNullableWithAggregatesFilter\\";
export { NestedIntWithAggregatesFilter } from \\"./NestedIntWithAggregatesFilter\\";
export { NestedJsonFilter } from \\"./NestedJsonFilter\\";
export { NestedJsonNullableFilter } from \\"./NestedJsonNullableFilter\\";
export { NestedStringFilter } from \\"./NestedStringFilter\\";
export { NestedStringNullableFilter } from \\"./NestedStringNullableFilter\\";
export { NestedStringNullableWithAggregatesFilter } from \\"./NestedStringNullableWithAggregatesFilter\\";
export { NestedStringWithAggregatesFilter } from \\"./NestedStringWithAggregatesFilter\\";
export { NullableBoolFieldUpdateOperationsInput } from \\"./NullableBoolFieldUpdateOperationsInput\\";
export { NullableDateTimeFieldUpdateOperationsInput } from \\"./NullableDateTimeFieldUpdateOperationsInput\\";
export { NullableEnumColorFieldUpdateOperationsInput } from \\"./NullableEnumColorFieldUpdateOperationsInput\\";
export { NullableFloatFieldUpdateOperationsInput } from \\"./NullableFloatFieldUpdateOperationsInput\\";
export { NullableIntFieldUpdateOperationsInput } from \\"./NullableIntFieldUpdateOperationsInput\\";
export { NullableStringFieldUpdateOperationsInput } from \\"./NullableStringFieldUpdateOperationsInput\\";
export { SampleModelAvgOrderByAggregateInput } from \\"./SampleModelAvgOrderByAggregateInput\\";
export { SampleModelCountOrderByAggregateInput } from \\"./SampleModelCountOrderByAggregateInput\\";
export { SampleModelCreateInput } from \\"./SampleModelCreateInput\\";
export { SampleModelCreateManyInput } from \\"./SampleModelCreateManyInput\\";
export { SampleModelCreateintArrayFieldInput } from \\"./SampleModelCreateintArrayFieldInput\\";
export { SampleModelCreatestringArrayFieldInput } from \\"./SampleModelCreatestringArrayFieldInput\\";
export { SampleModelMaxOrderByAggregateInput } from \\"./SampleModelMaxOrderByAggregateInput\\";
export { SampleModelMinOrderByAggregateInput } from \\"./SampleModelMinOrderByAggregateInput\\";
export { SampleModelOrderByWithAggregationInput } from \\"./SampleModelOrderByWithAggregationInput\\";
export { SampleModelOrderByWithRelationInput } from \\"./SampleModelOrderByWithRelationInput\\";
export { SampleModelScalarWhereWithAggregatesInput } from \\"./SampleModelScalarWhereWithAggregatesInput\\";
export { SampleModelSumOrderByAggregateInput } from \\"./SampleModelSumOrderByAggregateInput\\";
export { SampleModelUpdateInput } from \\"./SampleModelUpdateInput\\";
export { SampleModelUpdateManyMutationInput } from \\"./SampleModelUpdateManyMutationInput\\";
export { SampleModelUpdateintArrayFieldInput } from \\"./SampleModelUpdateintArrayFieldInput\\";
export { SampleModelUpdatestringArrayFieldInput } from \\"./SampleModelUpdatestringArrayFieldInput\\";
export { SampleModelWhereInput } from \\"./SampleModelWhereInput\\";
export { SampleModelWhereUniqueInput } from \\"./SampleModelWhereUniqueInput\\";
export { SampleNestedTypeCompositeFilter } from \\"./SampleNestedTypeCompositeFilter\\";
export { SampleNestedTypeCreateEnvelopeInput } from \\"./SampleNestedTypeCreateEnvelopeInput\\";
export { SampleNestedTypeCreateInput } from \\"./SampleNestedTypeCreateInput\\";
export { SampleNestedTypeCreateintArrayFieldInput } from \\"./SampleNestedTypeCreateintArrayFieldInput\\";
export { SampleNestedTypeCreatestringArrayFieldInput } from \\"./SampleNestedTypeCreatestringArrayFieldInput\\";
export { SampleNestedTypeObjectEqualityInput } from \\"./SampleNestedTypeObjectEqualityInput\\";
export { SampleNestedTypeOrderByInput } from \\"./SampleNestedTypeOrderByInput\\";
export { SampleNestedTypeUpdateEnvelopeInput } from \\"./SampleNestedTypeUpdateEnvelopeInput\\";
export { SampleNestedTypeUpdateInput } from \\"./SampleNestedTypeUpdateInput\\";
export { SampleNestedTypeUpdateintArrayFieldInput } from \\"./SampleNestedTypeUpdateintArrayFieldInput\\";
export { SampleNestedTypeUpdatestringArrayFieldInput } from \\"./SampleNestedTypeUpdatestringArrayFieldInput\\";
export { SampleNestedTypeWhereInput } from \\"./SampleNestedTypeWhereInput\\";
export { StringFieldUpdateOperationsInput } from \\"./StringFieldUpdateOperationsInput\\";
export { StringFilter } from \\"./StringFilter\\";
export { StringNullableFilter } from \\"./StringNullableFilter\\";
export { StringNullableListFilter } from \\"./StringNullableListFilter\\";
export { StringNullableWithAggregatesFilter } from \\"./StringNullableWithAggregatesFilter\\";
export { StringWithAggregatesFilter } from \\"./StringWithAggregatesFilter\\";
"
`;

exports[`inputs should properly generate input type classes for updating scalar fields: BoolFieldUpdateOperationsInput 1`] = `
"import { Args, ArgsType, Context, Field, Float, ID, Info, InputType, Int, Mutation, ObjectType, Query, ResolveField, Resolver, Root, registerEnumType } from \\"@nestjs/graphql\\";
import * as GraphQLScalars from \\"graphql-scalars\\";
import { Prisma } from \\"../../../../helpers/prisma-client-mock\\";
import { DecimalJSScalar } from \\"../../scalars\\";

@InputType(\\"BoolFieldUpdateOperationsInput\\", {
  isAbstract: true
})
export class BoolFieldUpdateOperationsInput {
  @Field(_type => Boolean, {
    nullable: true
  })
  set?: boolean | undefined;
}
"
`;

exports[`inputs should properly generate input type classes for updating scalar fields: DateTimeFieldUpdateOperationsInput 1`] = `
"import { Args, ArgsType, Context, Field, Float, ID, Info, InputType, Int, Mutation, ObjectType, Query, ResolveField, Resolver, Root, registerEnumType } from \\"@nestjs/graphql\\";
import * as GraphQLScalars from \\"graphql-scalars\\";
import { Prisma } from \\"../../../../helpers/prisma-client-mock\\";
import { DecimalJSScalar } from \\"../../scalars\\";

@InputType(\\"DateTimeFieldUpdateOperationsInput\\", {
  isAbstract: true
})
export class DateTimeFieldUpdateOperationsInput {
  @Field(_type => Date, {
    nullable: true
  })
  set?: Date | undefined;
}
"
`;

exports[`inputs should properly generate input type classes for updating scalar fields: EnumColorFieldUpdateOperationsInput 1`] = `
"import { Args, ArgsType, Context, Field, Float, ID, Info, InputType, Int, Mutation, ObjectType, Query, ResolveField, Resolver, Root, registerEnumType } from \\"@nestjs/graphql\\";
import * as GraphQLScalars from \\"graphql-scalars\\";
import { Prisma } from \\"../../../../helpers/prisma-client-mock\\";
import { DecimalJSScalar } from \\"../../scalars\\";
import { Color } from \\"../../enums/Color\\";

@InputType(\\"EnumColorFieldUpdateOperationsInput\\", {
  isAbstract: true
})
export class EnumColorFieldUpdateOperationsInput {
  @Field(_type => Color, {
    nullable: true
  })
  set?: \\"RED\\" | \\"GREEN\\" | \\"BLUE\\" | undefined;
}
"
`;

exports[`inputs should properly generate input type classes for updating scalar fields: FloatFieldUpdateOperationsInput 1`] = `
"import { Args, ArgsType, Context, Field, Float, ID, Info, InputType, Int, Mutation, ObjectType, Query, ResolveField, Resolver, Root, registerEnumType } from \\"@nestjs/graphql\\";
import * as GraphQLScalars from \\"graphql-scalars\\";
import { Prisma } from \\"../../../../helpers/prisma-client-mock\\";
import { DecimalJSScalar } from \\"../../scalars\\";

@InputType(\\"FloatFieldUpdateOperationsInput\\", {
  isAbstract: true
})
export class FloatFieldUpdateOperationsInput {
  @Field(_type => Float, {
    nullable: true
  })
  set?: number | undefined;

  @Field(_type => Float, {
    nullable: true
  })
  increment?: number | undefined;

  @Field(_type => Float, {
    nullable: true
  })
  decrement?: number | undefined;

  @Field(_type => Float, {
    nullable: true
  })
  multiply?: number | undefined;

  @Field(_type => Float, {
    nullable: true
  })
  divide?: number | undefined;
}
"
`;

exports[`inputs should properly generate input type classes for updating scalar fields: IntFieldUpdateOperationsInput 1`] = `
"import { Args, ArgsType, Context, Field, Float, ID, Info, InputType, Int, Mutation, ObjectType, Query, ResolveField, Resolver, Root, registerEnumType } from \\"@nestjs/graphql\\";
import * as GraphQLScalars from \\"graphql-scalars\\";
import { Prisma } from \\"../../../../helpers/prisma-client-mock\\";
import { DecimalJSScalar } from \\"../../scalars\\";

@InputType(\\"IntFieldUpdateOperationsInput\\", {
  isAbstract: true
})
export class IntFieldUpdateOperationsInput {
  @Field(_type => Int, {
    nullable: true
  })
  set?: number | undefined;

  @Field(_type => Int, {
    nullable: true
  })
  increment?: number | undefined;

  @Field(_type => Int, {
    nullable: true
  })
  decrement?: number | undefined;

  @Field(_type => Int, {
    nullable: true
  })
  multiply?: number | undefined;

  @Field(_type => Int, {
    nullable: true
  })
  divide?: number | undefined;
}
"
`;

exports[`inputs should properly generate input type classes for updating scalar fields: SampleModelUpdateInput 1`] = `
"import { Args, ArgsType, Context, Field, Float, ID, Info, InputType, Int, Mutation, ObjectType, Query, ResolveField, Resolver, Root, registerEnumType } from \\"@nestjs/graphql\\";
import * as GraphQLScalars from \\"graphql-scalars\\";
import { Prisma } from \\"../../../../helpers/prisma-client-mock\\";
import { DecimalJSScalar } from \\"../../scalars\\";
import { BoolFieldUpdateOperationsInput } from \\"../inputs/BoolFieldUpdateOperationsInput\\";
import { DateTimeFieldUpdateOperationsInput } from \\"../inputs/DateTimeFieldUpdateOperationsInput\\";
import { EnumColorFieldUpdateOperationsInput } from \\"../inputs/EnumColorFieldUpdateOperationsInput\\";
import { FloatFieldUpdateOperationsInput } from \\"../inputs/FloatFieldUpdateOperationsInput\\";
import { IntFieldUpdateOperationsInput } from \\"../inputs/IntFieldUpdateOperationsInput\\";
import { NullableBoolFieldUpdateOperationsInput } from \\"../inputs/NullableBoolFieldUpdateOperationsInput\\";
import { NullableDateTimeFieldUpdateOperationsInput } from \\"../inputs/NullableDateTimeFieldUpdateOperationsInput\\";
import { NullableEnumColorFieldUpdateOperationsInput } from \\"../inputs/NullableEnumColorFieldUpdateOperationsInput\\";
import { NullableFloatFieldUpdateOperationsInput } from \\"../inputs/NullableFloatFieldUpdateOperationsInput\\";
import { NullableIntFieldUpdateOperationsInput } from \\"../inputs/NullableIntFieldUpdateOperationsInput\\";
import { NullableStringFieldUpdateOperationsInput } from \\"../inputs/NullableStringFieldUpdateOperationsInput\\";
import { SampleModelUpdateintArrayFieldInput } from \\"../inputs/SampleModelUpdateintArrayFieldInput\\";
import { SampleModelUpdatestringArrayFieldInput } from \\"../inputs/SampleModelUpdatestringArrayFieldInput\\";
import { StringFieldUpdateOperationsInput } from \\"../inputs/StringFieldUpdateOperationsInput\\";

@InputType(\\"SampleModelUpdateInput\\", {
  isAbstract: true
})
export class SampleModelUpdateInput {
  @Field(_type => StringFieldUpdateOperationsInput, {
    nullable: true
  })
  stringField?: StringFieldUpdateOperationsInput | undefined;

  @Field(_type => NullableStringFieldUpdateOperationsInput, {
    nullable: true
  })
  optionalStringField?: NullableStringFieldUpdateOperationsInput | undefined;

  @Field(_type => IntFieldUpdateOperationsInput, {
    nullable: true
  })
  intField?: IntFieldUpdateOperationsInput | undefined;

  @Field(_type => NullableIntFieldUpdateOperationsInput, {
    nullable: true
  })
  optionalIntField?: NullableIntFieldUpdateOperationsInput | undefined;

  @Field(_type => FloatFieldUpdateOperationsInput, {
    nullable: true
  })
  floatField?: FloatFieldUpdateOperationsInput | undefined;

  @Field(_type => NullableFloatFieldUpdateOperationsInput, {
    nullable: true
  })
  optionalFloatField?: NullableFloatFieldUpdateOperationsInput | undefined;

  @Field(_type => BoolFieldUpdateOperationsInput, {
    nullable: true
  })
  booleanField?: BoolFieldUpdateOperationsInput | undefined;

  @Field(_type => NullableBoolFieldUpdateOperationsInput, {
    nullable: true
  })
  optionalBooleanField?: NullableBoolFieldUpdateOperationsInput | undefined;

  @Field(_type => DateTimeFieldUpdateOperationsInput, {
    nullable: true
  })
  dateField?: DateTimeFieldUpdateOperationsInput | undefined;

  @Field(_type => NullableDateTimeFieldUpdateOperationsInput, {
    nullable: true
  })
  optionalDateField?: NullableDateTimeFieldUpdateOperationsInput | undefined;

  @Field(_type => GraphQLScalars.JSONResolver, {
    nullable: true
  })
  jsonField?: Prisma.InputJsonValue | undefined;

  @Field(_type => GraphQLScalars.JSONResolver, {
    nullable: true
  })
  optionalJsonField?: Prisma.InputJsonValue | undefined;

  @Field(_type => EnumColorFieldUpdateOperationsInput, {
    nullable: true
  })
  enumField?: EnumColorFieldUpdateOperationsInput | undefined;

  @Field(_type => NullableEnumColorFieldUpdateOperationsInput, {
    nullable: true
  })
  optionalEnumField?: NullableEnumColorFieldUpdateOperationsInput | undefined;

  @Field(_type => SampleModelUpdateintArrayFieldInput, {
    nullable: true
  })
  intArrayField?: SampleModelUpdateintArrayFieldInput | undefined;

  @Field(_type => SampleModelUpdatestringArrayFieldInput, {
    nullable: true
  })
  stringArrayField?: SampleModelUpdatestringArrayFieldInput | undefined;
}
"
`;

exports[`inputs should properly generate input type classes for updating scalar fields: SampleModelUpdateManyMutationInput 1`] = `
"import { Args, ArgsType, Context, Field, Float, ID, Info, InputType, Int, Mutation, ObjectType, Query, ResolveField, Resolver, Root, registerEnumType } from \\"@nestjs/graphql\\";
import * as GraphQLScalars from \\"graphql-scalars\\";
import { Prisma } from \\"../../../../helpers/prisma-client-mock\\";
import { DecimalJSScalar } from \\"../../scalars\\";
import { BoolFieldUpdateOperationsInput } from \\"../inputs/BoolFieldUpdateOperationsInput\\";
import { DateTimeFieldUpdateOperationsInput } from \\"../inputs/DateTimeFieldUpdateOperationsInput\\";
import { EnumColorFieldUpdateOperationsInput } from \\"../inputs/EnumColorFieldUpdateOperationsInput\\";
import { FloatFieldUpdateOperationsInput } from \\"../inputs/FloatFieldUpdateOperationsInput\\";
import { IntFieldUpdateOperationsInput } from \\"../inputs/IntFieldUpdateOperationsInput\\";
import { NullableBoolFieldUpdateOperationsInput } from \\"../inputs/NullableBoolFieldUpdateOperationsInput\\";
import { NullableDateTimeFieldUpdateOperationsInput } from \\"../inputs/NullableDateTimeFieldUpdateOperationsInput\\";
import { NullableEnumColorFieldUpdateOperationsInput } from \\"../inputs/NullableEnumColorFieldUpdateOperationsInput\\";
import { NullableFloatFieldUpdateOperationsInput } from \\"../inputs/NullableFloatFieldUpdateOperationsInput\\";
import { NullableIntFieldUpdateOperationsInput } from \\"../inputs/NullableIntFieldUpdateOperationsInput\\";
import { NullableStringFieldUpdateOperationsInput } from \\"../inputs/NullableStringFieldUpdateOperationsInput\\";
import { SampleModelUpdateintArrayFieldInput } from \\"../inputs/SampleModelUpdateintArrayFieldInput\\";
import { SampleModelUpdatestringArrayFieldInput } from \\"../inputs/SampleModelUpdatestringArrayFieldInput\\";
import { StringFieldUpdateOperationsInput } from \\"../inputs/StringFieldUpdateOperationsInput\\";

@InputType(\\"SampleModelUpdateManyMutationInput\\", {
  isAbstract: true
})
export class SampleModelUpdateManyMutationInput {
  @Field(_type => StringFieldUpdateOperationsInput, {
    nullable: true
  })
  stringField?: StringFieldUpdateOperationsInput | undefined;

  @Field(_type => NullableStringFieldUpdateOperationsInput, {
    nullable: true
  })
  optionalStringField?: NullableStringFieldUpdateOperationsInput | undefined;

  @Field(_type => IntFieldUpdateOperationsInput, {
    nullable: true
  })
  intField?: IntFieldUpdateOperationsInput | undefined;

  @Field(_type => NullableIntFieldUpdateOperationsInput, {
    nullable: true
  })
  optionalIntField?: NullableIntFieldUpdateOperationsInput | undefined;

  @Field(_type => FloatFieldUpdateOperationsInput, {
    nullable: true
  })
  floatField?: FloatFieldUpdateOperationsInput | undefined;

  @Field(_type => NullableFloatFieldUpdateOperationsInput, {
    nullable: true
  })
  optionalFloatField?: NullableFloatFieldUpdateOperationsInput | undefined;

  @Field(_type => BoolFieldUpdateOperationsInput, {
    nullable: true
  })
  booleanField?: BoolFieldUpdateOperationsInput | undefined;

  @Field(_type => NullableBoolFieldUpdateOperationsInput, {
    nullable: true
  })
  optionalBooleanField?: NullableBoolFieldUpdateOperationsInput | undefined;

  @Field(_type => DateTimeFieldUpdateOperationsInput, {
    nullable: true
  })
  dateField?: DateTimeFieldUpdateOperationsInput | undefined;

  @Field(_type => NullableDateTimeFieldUpdateOperationsInput, {
    nullable: true
  })
  optionalDateField?: NullableDateTimeFieldUpdateOperationsInput | undefined;

  @Field(_type => GraphQLScalars.JSONResolver, {
    nullable: true
  })
  jsonField?: Prisma.InputJsonValue | undefined;

  @Field(_type => GraphQLScalars.JSONResolver, {
    nullable: true
  })
  optionalJsonField?: Prisma.InputJsonValue | undefined;

  @Field(_type => EnumColorFieldUpdateOperationsInput, {
    nullable: true
  })
  enumField?: EnumColorFieldUpdateOperationsInput | undefined;

  @Field(_type => NullableEnumColorFieldUpdateOperationsInput, {
    nullable: true
  })
  optionalEnumField?: NullableEnumColorFieldUpdateOperationsInput | undefined;

  @Field(_type => SampleModelUpdateintArrayFieldInput, {
    nullable: true
  })
  intArrayField?: SampleModelUpdateintArrayFieldInput | undefined;

  @Field(_type => SampleModelUpdatestringArrayFieldInput, {
    nullable: true
  })
  stringArrayField?: SampleModelUpdatestringArrayFieldInput | undefined;
}
"
`;

exports[`inputs should properly generate input type classes for updating scalar fields: SampleModelUpdateintArrayFieldInput 1`] = `
"import { Args, ArgsType, Context, Field, Float, ID, Info, InputType, Int, Mutation, ObjectType, Query, ResolveField, Resolver, Root, registerEnumType } from \\"@nestjs/graphql\\";
import * as GraphQLScalars from \\"graphql-scalars\\";
import { Prisma } from \\"../../../../helpers/prisma-client-mock\\";
import { DecimalJSScalar } from \\"../../scalars\\";

@InputType(\\"SampleModelUpdateintArrayFieldInput\\", {
  isAbstract: true
})
export class SampleModelUpdateintArrayFieldInput {
  @Field(_type => [Int], {
    nullable: true
  })
  set?: number[] | undefined;

  @Field(_type => [Int], {
    nullable: true
  })
  push?: number[] | undefined;
}
"
`;

exports[`inputs should properly generate input type classes for updating scalar fields: SampleModelUpdatestringArrayFieldInput 1`] = `
"import { Args, ArgsType, Context, Field, Float, ID, Info, InputType, Int, Mutation, ObjectType, Query, ResolveField, Resolver, Root, registerEnumType } from \\"@nestjs/graphql\\";
import * as GraphQLScalars from \\"graphql-scalars\\";
import { Prisma } from \\"../../../../helpers/prisma-client-mock\\";
import { DecimalJSScalar } from \\"../../scalars\\";

@InputType(\\"SampleModelUpdatestringArrayFieldInput\\", {
  isAbstract: true
})
export class SampleModelUpdatestringArrayFieldInput {
  @Field(_type => [String], {
    nullable: true
  })
  set?: string[] | undefined;

  @Field(_type => [String], {
    nullable: true
  })
  push?: string[] | undefined;
}
"
`;

exports[`inputs should properly generate input type classes for updating scalar fields: StringFieldUpdateOperationsInput 1`] = `
"import { Args, ArgsType, Context, Field, Float, ID, Info, InputType, Int, Mutation, ObjectType, Query, ResolveField, Resolver, Root, registerEnumType } from \\"@nestjs/graphql\\";
import * as GraphQLScalars from \\"graphql-scalars\\";
import { Prisma } from \\"../../../../helpers/prisma-client-mock\\";
import { DecimalJSScalar } from \\"../../scalars\\";

@InputType(\\"StringFieldUpdateOperationsInput\\", {
  isAbstract: true
})
export class StringFieldUpdateOperationsInput {
  @Field(_type => String, {
    nullable: true
  })
  set?: string | undefined;
}
"
`;

exports[`inputs should properly generate input type classes for updating scalar fields: index 1`] = `
"export { BoolFieldUpdateOperationsInput } from \\"./BoolFieldUpdateOperationsInput\\";
export { BoolFilter } from \\"./BoolFilter\\";
export { BoolNullableFilter } from \\"./BoolNullableFilter\\";
export { BoolNullableWithAggregatesFilter } from \\"./BoolNullableWithAggregatesFilter\\";
export { BoolWithAggregatesFilter } from \\"./BoolWithAggregatesFilter\\";
export { DateTimeFieldUpdateOperationsInput } from \\"./DateTimeFieldUpdateOperationsInput\\";
export { DateTimeFilter } from \\"./DateTimeFilter\\";
export { DateTimeNullableFilter } from \\"./DateTimeNullableFilter\\";
export { DateTimeNullableWithAggregatesFilter } from \\"./DateTimeNullableWithAggregatesFilter\\";
export { DateTimeWithAggregatesFilter } from \\"./DateTimeWithAggregatesFilter\\";
export { EnumColorFieldUpdateOperationsInput } from \\"./EnumColorFieldUpdateOperationsInput\\";
export { EnumColorFilter } from \\"./EnumColorFilter\\";
export { EnumColorNullableFilter } from \\"./EnumColorNullableFilter\\";
export { EnumColorNullableWithAggregatesFilter } from \\"./EnumColorNullableWithAggregatesFilter\\";
export { EnumColorWithAggregatesFilter } from \\"./EnumColorWithAggregatesFilter\\";
export { FloatFieldUpdateOperationsInput } from \\"./FloatFieldUpdateOperationsInput\\";
export { FloatFilter } from \\"./FloatFilter\\";
export { FloatNullableFilter } from \\"./FloatNullableFilter\\";
export { FloatNullableWithAggregatesFilter } from \\"./FloatNullableWithAggregatesFilter\\";
export { FloatWithAggregatesFilter } from \\"./FloatWithAggregatesFilter\\";
export { IntFieldUpdateOperationsInput } from \\"./IntFieldUpdateOperationsInput\\";
export { IntFilter } from \\"./IntFilter\\";
export { IntNullableFilter } from \\"./IntNullableFilter\\";
export { IntNullableListFilter } from \\"./IntNullableListFilter\\";
export { IntNullableWithAggregatesFilter } from \\"./IntNullableWithAggregatesFilter\\";
export { IntWithAggregatesFilter } from \\"./IntWithAggregatesFilter\\";
export { JsonFilter } from \\"./JsonFilter\\";
export { JsonNullableFilter } from \\"./JsonNullableFilter\\";
export { JsonNullableWithAggregatesFilter } from \\"./JsonNullableWithAggregatesFilter\\";
export { JsonWithAggregatesFilter } from \\"./JsonWithAggregatesFilter\\";
export { NestedBoolFilter } from \\"./NestedBoolFilter\\";
export { NestedBoolNullableFilter } from \\"./NestedBoolNullableFilter\\";
export { NestedBoolNullableWithAggregatesFilter } from \\"./NestedBoolNullableWithAggregatesFilter\\";
export { NestedBoolWithAggregatesFilter } from \\"./NestedBoolWithAggregatesFilter\\";
export { NestedDateTimeFilter } from \\"./NestedDateTimeFilter\\";
export { NestedDateTimeNullableFilter } from \\"./NestedDateTimeNullableFilter\\";
export { NestedDateTimeNullableWithAggregatesFilter } from \\"./NestedDateTimeNullableWithAggregatesFilter\\";
export { NestedDateTimeWithAggregatesFilter } from \\"./NestedDateTimeWithAggregatesFilter\\";
export { NestedEnumColorFilter } from \\"./NestedEnumColorFilter\\";
export { NestedEnumColorNullableFilter } from \\"./NestedEnumColorNullableFilter\\";
export { NestedEnumColorNullableWithAggregatesFilter } from \\"./NestedEnumColorNullableWithAggregatesFilter\\";
export { NestedEnumColorWithAggregatesFilter } from \\"./NestedEnumColorWithAggregatesFilter\\";
export { NestedFloatFilter } from \\"./NestedFloatFilter\\";
export { NestedFloatNullableFilter } from \\"./NestedFloatNullableFilter\\";
export { NestedFloatNullableWithAggregatesFilter } from \\"./NestedFloatNullableWithAggregatesFilter\\";
export { NestedFloatWithAggregatesFilter } from \\"./NestedFloatWithAggregatesFilter\\";
export { NestedIntFilter } from \\"./NestedIntFilter\\";
export { NestedIntNullableFilter } from \\"./NestedIntNullableFilter\\";
export { NestedIntNullableWithAggregatesFilter } from \\"./NestedIntNullableWithAggregatesFilter\\";
export { NestedIntWithAggregatesFilter } from \\"./NestedIntWithAggregatesFilter\\";
export { NestedJsonFilter } from \\"./NestedJsonFilter\\";
export { NestedJsonNullableFilter } from \\"./NestedJsonNullableFilter\\";
export { NestedStringFilter } from \\"./NestedStringFilter\\";
export { NestedStringNullableFilter } from \\"./NestedStringNullableFilter\\";
export { NestedStringNullableWithAggregatesFilter } from \\"./NestedStringNullableWithAggregatesFilter\\";
export { NestedStringWithAggregatesFilter } from \\"./NestedStringWithAggregatesFilter\\";
export { NullableBoolFieldUpdateOperationsInput } from \\"./NullableBoolFieldUpdateOperationsInput\\";
export { NullableDateTimeFieldUpdateOperationsInput } from \\"./NullableDateTimeFieldUpdateOperationsInput\\";
export { NullableEnumColorFieldUpdateOperationsInput } from \\"./NullableEnumColorFieldUpdateOperationsInput\\";
export { NullableFloatFieldUpdateOperationsInput } from \\"./NullableFloatFieldUpdateOperationsInput\\";
export { NullableIntFieldUpdateOperationsInput } from \\"./NullableIntFieldUpdateOperationsInput\\";
export { NullableStringFieldUpdateOperationsInput } from \\"./NullableStringFieldUpdateOperationsInput\\";
export { SampleModelAvgOrderByAggregateInput } from \\"./SampleModelAvgOrderByAggregateInput\\";
export { SampleModelCountOrderByAggregateInput } from \\"./SampleModelCountOrderByAggregateInput\\";
export { SampleModelCreateInput } from \\"./SampleModelCreateInput\\";
export { SampleModelCreateManyInput } from \\"./SampleModelCreateManyInput\\";
export { SampleModelCreateintArrayFieldInput } from \\"./SampleModelCreateintArrayFieldInput\\";
export { SampleModelCreatestringArrayFieldInput } from \\"./SampleModelCreatestringArrayFieldInput\\";
export { SampleModelMaxOrderByAggregateInput } from \\"./SampleModelMaxOrderByAggregateInput\\";
export { SampleModelMinOrderByAggregateInput } from \\"./SampleModelMinOrderByAggregateInput\\";
export { SampleModelOrderByWithAggregationInput } from \\"./SampleModelOrderByWithAggregationInput\\";
export { SampleModelOrderByWithRelationInput } from \\"./SampleModelOrderByWithRelationInput\\";
export { SampleModelScalarWhereWithAggregatesInput } from \\"./SampleModelScalarWhereWithAggregatesInput\\";
export { SampleModelSumOrderByAggregateInput } from \\"./SampleModelSumOrderByAggregateInput\\";
export { SampleModelUpdateInput } from \\"./SampleModelUpdateInput\\";
export { SampleModelUpdateManyMutationInput } from \\"./SampleModelUpdateManyMutationInput\\";
export { SampleModelUpdateintArrayFieldInput } from \\"./SampleModelUpdateintArrayFieldInput\\";
export { SampleModelUpdatestringArrayFieldInput } from \\"./SampleModelUpdatestringArrayFieldInput\\";
export { SampleModelWhereInput } from \\"./SampleModelWhereInput\\";
export { SampleModelWhereUniqueInput } from \\"./SampleModelWhereUniqueInput\\";
export { StringFieldUpdateOperationsInput } from \\"./StringFieldUpdateOperationsInput\\";
export { StringFilter } from \\"./StringFilter\\";
export { StringNullableFilter } from \\"./StringNullableFilter\\";
export { StringNullableListFilter } from \\"./StringNullableListFilter\\";
export { StringNullableWithAggregatesFilter } from \\"./StringNullableWithAggregatesFilter\\";
export { StringWithAggregatesFilter } from \\"./StringWithAggregatesFilter\\";
"
`;

exports[`inputs should properly generate input type scalar filters classes for model with native types: BigIntNullableFilter 1`] = `
"import { Args, ArgsType, Context, Field, Float, ID, Info, InputType, Int, Mutation, ObjectType, Query, ResolveField, Resolver, Root, registerEnumType } from \\"@nestjs/graphql\\";
import * as GraphQLScalars from \\"graphql-scalars\\";
import { Prisma } from \\"../../../../helpers/prisma-client-mock\\";
import { DecimalJSScalar } from \\"../../scalars\\";
import { NestedBigIntNullableFilter } from \\"../inputs/NestedBigIntNullableFilter\\";

@InputType(\\"BigIntNullableFilter\\", {
  isAbstract: true
})
export class BigIntNullableFilter {
  @Field(_type => GraphQLScalars.BigIntResolver, {
    nullable: true
  })
  equals?: bigint | undefined;

  @Field(_type => [GraphQLScalars.BigIntResolver], {
    nullable: true
  })
  in?: bigint[] | undefined;

  @Field(_type => [GraphQLScalars.BigIntResolver], {
    nullable: true
  })
  notIn?: bigint[] | undefined;

  @Field(_type => GraphQLScalars.BigIntResolver, {
    nullable: true
  })
  lt?: bigint | undefined;

  @Field(_type => GraphQLScalars.BigIntResolver, {
    nullable: true
  })
  lte?: bigint | undefined;

  @Field(_type => GraphQLScalars.BigIntResolver, {
    nullable: true
  })
  gt?: bigint | undefined;

  @Field(_type => GraphQLScalars.BigIntResolver, {
    nullable: true
  })
  gte?: bigint | undefined;

  @Field(_type => NestedBigIntNullableFilter, {
    nullable: true
  })
  not?: NestedBigIntNullableFilter | undefined;
}
"
`;

exports[`inputs should properly generate input type scalar filters classes for model with native types: BigIntNullableWithAggregatesFilter 1`] = `
"import { Args, ArgsType, Context, Field, Float, ID, Info, InputType, Int, Mutation, ObjectType, Query, ResolveField, Resolver, Root, registerEnumType } from \\"@nestjs/graphql\\";
import * as GraphQLScalars from \\"graphql-scalars\\";
import { Prisma } from \\"../../../../helpers/prisma-client-mock\\";
import { DecimalJSScalar } from \\"../../scalars\\";
import { NestedBigIntNullableFilter } from \\"../inputs/NestedBigIntNullableFilter\\";
import { NestedBigIntNullableWithAggregatesFilter } from \\"../inputs/NestedBigIntNullableWithAggregatesFilter\\";
import { NestedFloatNullableFilter } from \\"../inputs/NestedFloatNullableFilter\\";
import { NestedIntNullableFilter } from \\"../inputs/NestedIntNullableFilter\\";

@InputType(\\"BigIntNullableWithAggregatesFilter\\", {
  isAbstract: true
})
export class BigIntNullableWithAggregatesFilter {
  @Field(_type => GraphQLScalars.BigIntResolver, {
    nullable: true
  })
  equals?: bigint | undefined;

  @Field(_type => [GraphQLScalars.BigIntResolver], {
    nullable: true
  })
  in?: bigint[] | undefined;

  @Field(_type => [GraphQLScalars.BigIntResolver], {
    nullable: true
  })
  notIn?: bigint[] | undefined;

  @Field(_type => GraphQLScalars.BigIntResolver, {
    nullable: true
  })
  lt?: bigint | undefined;

  @Field(_type => GraphQLScalars.BigIntResolver, {
    nullable: true
  })
  lte?: bigint | undefined;

  @Field(_type => GraphQLScalars.BigIntResolver, {
    nullable: true
  })
  gt?: bigint | undefined;

  @Field(_type => GraphQLScalars.BigIntResolver, {
    nullable: true
  })
  gte?: bigint | undefined;

  @Field(_type => NestedBigIntNullableWithAggregatesFilter, {
    nullable: true
  })
  not?: NestedBigIntNullableWithAggregatesFilter | undefined;

  @Field(_type => NestedIntNullableFilter, {
    nullable: true
  })
  _count?: NestedIntNullableFilter | undefined;

  @Field(_type => NestedFloatNullableFilter, {
    nullable: true
  })
  _avg?: NestedFloatNullableFilter | undefined;

  @Field(_type => NestedBigIntNullableFilter, {
    nullable: true
  })
  _sum?: NestedBigIntNullableFilter | undefined;

  @Field(_type => NestedBigIntNullableFilter, {
    nullable: true
  })
  _min?: NestedBigIntNullableFilter | undefined;

  @Field(_type => NestedBigIntNullableFilter, {
    nullable: true
  })
  _max?: NestedBigIntNullableFilter | undefined;
}
"
`;

exports[`inputs should properly generate input type scalar filters classes for model with native types: BytesNullableFilter 1`] = `
"import { Args, ArgsType, Context, Field, Float, ID, Info, InputType, Int, Mutation, ObjectType, Query, ResolveField, Resolver, Root, registerEnumType } from \\"@nestjs/graphql\\";
import * as GraphQLScalars from \\"graphql-scalars\\";
import { Prisma } from \\"../../../../helpers/prisma-client-mock\\";
import { DecimalJSScalar } from \\"../../scalars\\";
import { NestedBytesNullableFilter } from \\"../inputs/NestedBytesNullableFilter\\";

@InputType(\\"BytesNullableFilter\\", {
  isAbstract: true
})
export class BytesNullableFilter {
  @Field(_type => GraphQLScalars.ByteResolver, {
    nullable: true
  })
  equals?: Buffer | undefined;

  @Field(_type => [GraphQLScalars.ByteResolver], {
    nullable: true
  })
  in?: Buffer[] | undefined;

  @Field(_type => [GraphQLScalars.ByteResolver], {
    nullable: true
  })
  notIn?: Buffer[] | undefined;

  @Field(_type => NestedBytesNullableFilter, {
    nullable: true
  })
  not?: NestedBytesNullableFilter | undefined;
}
"
`;

exports[`inputs should properly generate input type scalar filters classes for model with native types: BytesNullableWithAggregatesFilter 1`] = `
"import { Args, ArgsType, Context, Field, Float, ID, Info, InputType, Int, Mutation, ObjectType, Query, ResolveField, Resolver, Root, registerEnumType } from \\"@nestjs/graphql\\";
import * as GraphQLScalars from \\"graphql-scalars\\";
import { Prisma } from \\"../../../../helpers/prisma-client-mock\\";
import { DecimalJSScalar } from \\"../../scalars\\";
import { NestedBytesNullableFilter } from \\"../inputs/NestedBytesNullableFilter\\";
import { NestedBytesNullableWithAggregatesFilter } from \\"../inputs/NestedBytesNullableWithAggregatesFilter\\";
import { NestedIntNullableFilter } from \\"../inputs/NestedIntNullableFilter\\";

@InputType(\\"BytesNullableWithAggregatesFilter\\", {
  isAbstract: true
})
export class BytesNullableWithAggregatesFilter {
  @Field(_type => GraphQLScalars.ByteResolver, {
    nullable: true
  })
  equals?: Buffer | undefined;

  @Field(_type => [GraphQLScalars.ByteResolver], {
    nullable: true
  })
  in?: Buffer[] | undefined;

  @Field(_type => [GraphQLScalars.ByteResolver], {
    nullable: true
  })
  notIn?: Buffer[] | undefined;

  @Field(_type => NestedBytesNullableWithAggregatesFilter, {
    nullable: true
  })
  not?: NestedBytesNullableWithAggregatesFilter | undefined;

  @Field(_type => NestedIntNullableFilter, {
    nullable: true
  })
  _count?: NestedIntNullableFilter | undefined;

  @Field(_type => NestedBytesNullableFilter, {
    nullable: true
  })
  _min?: NestedBytesNullableFilter | undefined;

  @Field(_type => NestedBytesNullableFilter, {
    nullable: true
  })
  _max?: NestedBytesNullableFilter | undefined;
}
"
`;

exports[`inputs should properly generate input type scalar filters classes for model with native types: DecimalNullableFilter 1`] = `
"import { Args, ArgsType, Context, Field, Float, ID, Info, InputType, Int, Mutation, ObjectType, Query, ResolveField, Resolver, Root, registerEnumType } from \\"@nestjs/graphql\\";
import * as GraphQLScalars from \\"graphql-scalars\\";
import { Prisma } from \\"../../../../helpers/prisma-client-mock\\";
import { DecimalJSScalar } from \\"../../scalars\\";
import { NestedDecimalNullableFilter } from \\"../inputs/NestedDecimalNullableFilter\\";

@InputType(\\"DecimalNullableFilter\\", {
  isAbstract: true
})
export class DecimalNullableFilter {
  @Field(_type => DecimalJSScalar, {
    nullable: true
  })
  equals?: Prisma.Decimal | undefined;

  @Field(_type => [DecimalJSScalar], {
    nullable: true
  })
  in?: Prisma.Decimal[] | undefined;

  @Field(_type => [DecimalJSScalar], {
    nullable: true
  })
  notIn?: Prisma.Decimal[] | undefined;

  @Field(_type => DecimalJSScalar, {
    nullable: true
  })
  lt?: Prisma.Decimal | undefined;

  @Field(_type => DecimalJSScalar, {
    nullable: true
  })
  lte?: Prisma.Decimal | undefined;

  @Field(_type => DecimalJSScalar, {
    nullable: true
  })
  gt?: Prisma.Decimal | undefined;

  @Field(_type => DecimalJSScalar, {
    nullable: true
  })
  gte?: Prisma.Decimal | undefined;

  @Field(_type => NestedDecimalNullableFilter, {
    nullable: true
  })
  not?: NestedDecimalNullableFilter | undefined;
}
"
`;

exports[`inputs should properly generate input type scalar filters classes for model with native types: DecimalNullableWithAggregatesFilter 1`] = `
"import { Args, ArgsType, Context, Field, Float, ID, Info, InputType, Int, Mutation, ObjectType, Query, ResolveField, Resolver, Root, registerEnumType } from \\"@nestjs/graphql\\";
import * as GraphQLScalars from \\"graphql-scalars\\";
import { Prisma } from \\"../../../../helpers/prisma-client-mock\\";
import { DecimalJSScalar } from \\"../../scalars\\";
import { NestedDecimalNullableFilter } from \\"../inputs/NestedDecimalNullableFilter\\";
import { NestedDecimalNullableWithAggregatesFilter } from \\"../inputs/NestedDecimalNullableWithAggregatesFilter\\";
import { NestedIntNullableFilter } from \\"../inputs/NestedIntNullableFilter\\";

@InputType(\\"DecimalNullableWithAggregatesFilter\\", {
  isAbstract: true
})
export class DecimalNullableWithAggregatesFilter {
  @Field(_type => DecimalJSScalar, {
    nullable: true
  })
  equals?: Prisma.Decimal | undefined;

  @Field(_type => [DecimalJSScalar], {
    nullable: true
  })
  in?: Prisma.Decimal[] | undefined;

  @Field(_type => [DecimalJSScalar], {
    nullable: true
  })
  notIn?: Prisma.Decimal[] | undefined;

  @Field(_type => DecimalJSScalar, {
    nullable: true
  })
  lt?: Prisma.Decimal | undefined;

  @Field(_type => DecimalJSScalar, {
    nullable: true
  })
  lte?: Prisma.Decimal | undefined;

  @Field(_type => DecimalJSScalar, {
    nullable: true
  })
  gt?: Prisma.Decimal | undefined;

  @Field(_type => DecimalJSScalar, {
    nullable: true
  })
  gte?: Prisma.Decimal | undefined;

  @Field(_type => NestedDecimalNullableWithAggregatesFilter, {
    nullable: true
  })
  not?: NestedDecimalNullableWithAggregatesFilter | undefined;

  @Field(_type => NestedIntNullableFilter, {
    nullable: true
  })
  _count?: NestedIntNullableFilter | undefined;

  @Field(_type => NestedDecimalNullableFilter, {
    nullable: true
  })
  _avg?: NestedDecimalNullableFilter | undefined;

  @Field(_type => NestedDecimalNullableFilter, {
    nullable: true
  })
  _sum?: NestedDecimalNullableFilter | undefined;

  @Field(_type => NestedDecimalNullableFilter, {
    nullable: true
  })
  _min?: NestedDecimalNullableFilter | undefined;

  @Field(_type => NestedDecimalNullableFilter, {
    nullable: true
  })
  _max?: NestedDecimalNullableFilter | undefined;
}
"
`;

exports[`inputs should properly generate input type scalar filters classes for model with native types: NestedBytesNullableFilter 1`] = `
"import { Args, ArgsType, Context, Field, Float, ID, Info, InputType, Int, Mutation, ObjectType, Query, ResolveField, Resolver, Root, registerEnumType } from \\"@nestjs/graphql\\";
import * as GraphQLScalars from \\"graphql-scalars\\";
import { Prisma } from \\"../../../../helpers/prisma-client-mock\\";
import { DecimalJSScalar } from \\"../../scalars\\";

@InputType(\\"NestedBytesNullableFilter\\", {
  isAbstract: true
})
export class NestedBytesNullableFilter {
  @Field(_type => GraphQLScalars.ByteResolver, {
    nullable: true
  })
  equals?: Buffer | undefined;

  @Field(_type => [GraphQLScalars.ByteResolver], {
    nullable: true
  })
  in?: Buffer[] | undefined;

  @Field(_type => [GraphQLScalars.ByteResolver], {
    nullable: true
  })
  notIn?: Buffer[] | undefined;

  @Field(_type => NestedBytesNullableFilter, {
    nullable: true
  })
  not?: NestedBytesNullableFilter | undefined;
}
"
`;

exports[`inputs should properly generate input type scalar filters classes for model with native types: NestedBytesNullableWithAggregatesFilter 1`] = `
"import { Args, ArgsType, Context, Field, Float, ID, Info, InputType, Int, Mutation, ObjectType, Query, ResolveField, Resolver, Root, registerEnumType } from \\"@nestjs/graphql\\";
import * as GraphQLScalars from \\"graphql-scalars\\";
import { Prisma } from \\"../../../../helpers/prisma-client-mock\\";
import { DecimalJSScalar } from \\"../../scalars\\";
import { NestedBytesNullableFilter } from \\"../inputs/NestedBytesNullableFilter\\";
import { NestedIntNullableFilter } from \\"../inputs/NestedIntNullableFilter\\";

@InputType(\\"NestedBytesNullableWithAggregatesFilter\\", {
  isAbstract: true
})
export class NestedBytesNullableWithAggregatesFilter {
  @Field(_type => GraphQLScalars.ByteResolver, {
    nullable: true
  })
  equals?: Buffer | undefined;

  @Field(_type => [GraphQLScalars.ByteResolver], {
    nullable: true
  })
  in?: Buffer[] | undefined;

  @Field(_type => [GraphQLScalars.ByteResolver], {
    nullable: true
  })
  notIn?: Buffer[] | undefined;

  @Field(_type => NestedBytesNullableWithAggregatesFilter, {
    nullable: true
  })
  not?: NestedBytesNullableWithAggregatesFilter | undefined;

  @Field(_type => NestedIntNullableFilter, {
    nullable: true
  })
  _count?: NestedIntNullableFilter | undefined;

  @Field(_type => NestedBytesNullableFilter, {
    nullable: true
  })
  _min?: NestedBytesNullableFilter | undefined;

  @Field(_type => NestedBytesNullableFilter, {
    nullable: true
  })
  _max?: NestedBytesNullableFilter | undefined;
}
"
`;

exports[`inputs should properly generate input type scalar filters classes for model with native types: NestedDecimalNullableFilter 1`] = `
"import { Args, ArgsType, Context, Field, Float, ID, Info, InputType, Int, Mutation, ObjectType, Query, ResolveField, Resolver, Root, registerEnumType } from \\"@nestjs/graphql\\";
import * as GraphQLScalars from \\"graphql-scalars\\";
import { Prisma } from \\"../../../../helpers/prisma-client-mock\\";
import { DecimalJSScalar } from \\"../../scalars\\";

@InputType(\\"NestedDecimalNullableFilter\\", {
  isAbstract: true
})
export class NestedDecimalNullableFilter {
  @Field(_type => DecimalJSScalar, {
    nullable: true
  })
  equals?: Prisma.Decimal | undefined;

  @Field(_type => [DecimalJSScalar], {
    nullable: true
  })
  in?: Prisma.Decimal[] | undefined;

  @Field(_type => [DecimalJSScalar], {
    nullable: true
  })
  notIn?: Prisma.Decimal[] | undefined;

  @Field(_type => DecimalJSScalar, {
    nullable: true
  })
  lt?: Prisma.Decimal | undefined;

  @Field(_type => DecimalJSScalar, {
    nullable: true
  })
  lte?: Prisma.Decimal | undefined;

  @Field(_type => DecimalJSScalar, {
    nullable: true
  })
  gt?: Prisma.Decimal | undefined;

  @Field(_type => DecimalJSScalar, {
    nullable: true
  })
  gte?: Prisma.Decimal | undefined;

  @Field(_type => NestedDecimalNullableFilter, {
    nullable: true
  })
  not?: NestedDecimalNullableFilter | undefined;
}
"
`;

exports[`inputs should properly generate input type scalar filters classes for model with native types: NestedDecimalNullableWithAggregatesFilter 1`] = `
"import { Args, ArgsType, Context, Field, Float, ID, Info, InputType, Int, Mutation, ObjectType, Query, ResolveField, Resolver, Root, registerEnumType } from \\"@nestjs/graphql\\";
import * as GraphQLScalars from \\"graphql-scalars\\";
import { Prisma } from \\"../../../../helpers/prisma-client-mock\\";
import { DecimalJSScalar } from \\"../../scalars\\";
import { NestedDecimalNullableFilter } from \\"../inputs/NestedDecimalNullableFilter\\";
import { NestedIntNullableFilter } from \\"../inputs/NestedIntNullableFilter\\";

@InputType(\\"NestedDecimalNullableWithAggregatesFilter\\", {
  isAbstract: true
})
export class NestedDecimalNullableWithAggregatesFilter {
  @Field(_type => DecimalJSScalar, {
    nullable: true
  })
  equals?: Prisma.Decimal | undefined;

  @Field(_type => [DecimalJSScalar], {
    nullable: true
  })
  in?: Prisma.Decimal[] | undefined;

  @Field(_type => [DecimalJSScalar], {
    nullable: true
  })
  notIn?: Prisma.Decimal[] | undefined;

  @Field(_type => DecimalJSScalar, {
    nullable: true
  })
  lt?: Prisma.Decimal | undefined;

  @Field(_type => DecimalJSScalar, {
    nullable: true
  })
  lte?: Prisma.Decimal | undefined;

  @Field(_type => DecimalJSScalar, {
    nullable: true
  })
  gt?: Prisma.Decimal | undefined;

  @Field(_type => DecimalJSScalar, {
    nullable: true
  })
  gte?: Prisma.Decimal | undefined;

  @Field(_type => NestedDecimalNullableWithAggregatesFilter, {
    nullable: true
  })
  not?: NestedDecimalNullableWithAggregatesFilter | undefined;

  @Field(_type => NestedIntNullableFilter, {
    nullable: true
  })
  _count?: NestedIntNullableFilter | undefined;

  @Field(_type => NestedDecimalNullableFilter, {
    nullable: true
  })
  _avg?: NestedDecimalNullableFilter | undefined;

  @Field(_type => NestedDecimalNullableFilter, {
    nullable: true
  })
  _sum?: NestedDecimalNullableFilter | undefined;

  @Field(_type => NestedDecimalNullableFilter, {
    nullable: true
  })
  _min?: NestedDecimalNullableFilter | undefined;

  @Field(_type => NestedDecimalNullableFilter, {
    nullable: true
  })
  _max?: NestedDecimalNullableFilter | undefined;
}
"
`;

exports[`inputs should properly generate input type scalar filters classes for model with native types: NullableBigIntFieldUpdateOperationsInput 1`] = `
"import { Args, ArgsType, Context, Field, Float, ID, Info, InputType, Int, Mutation, ObjectType, Query, ResolveField, Resolver, Root, registerEnumType } from \\"@nestjs/graphql\\";
import * as GraphQLScalars from \\"graphql-scalars\\";
import { Prisma } from \\"../../../../helpers/prisma-client-mock\\";
import { DecimalJSScalar } from \\"../../scalars\\";

@InputType(\\"NullableBigIntFieldUpdateOperationsInput\\", {
  isAbstract: true
})
export class NullableBigIntFieldUpdateOperationsInput {
  @Field(_type => GraphQLScalars.BigIntResolver, {
    nullable: true
  })
  set?: bigint | undefined;

  @Field(_type => GraphQLScalars.BigIntResolver, {
    nullable: true
  })
  increment?: bigint | undefined;

  @Field(_type => GraphQLScalars.BigIntResolver, {
    nullable: true
  })
  decrement?: bigint | undefined;

  @Field(_type => GraphQLScalars.BigIntResolver, {
    nullable: true
  })
  multiply?: bigint | undefined;

  @Field(_type => GraphQLScalars.BigIntResolver, {
    nullable: true
  })
  divide?: bigint | undefined;
}
"
`;

exports[`inputs should properly generate input type scalar filters classes for model with native types: NullableBytesFieldUpdateOperationsInput 1`] = `
"import { Args, ArgsType, Context, Field, Float, ID, Info, InputType, Int, Mutation, ObjectType, Query, ResolveField, Resolver, Root, registerEnumType } from \\"@nestjs/graphql\\";
import * as GraphQLScalars from \\"graphql-scalars\\";
import { Prisma } from \\"../../../../helpers/prisma-client-mock\\";
import { DecimalJSScalar } from \\"../../scalars\\";

@InputType(\\"NullableBytesFieldUpdateOperationsInput\\", {
  isAbstract: true
})
export class NullableBytesFieldUpdateOperationsInput {
  @Field(_type => GraphQLScalars.ByteResolver, {
    nullable: true
  })
  set?: Buffer | undefined;
}
"
`;

exports[`inputs should properly generate input type scalar filters classes for model with native types: NullableDecimalFieldUpdateOperationsInput 1`] = `
"import { Args, ArgsType, Context, Field, Float, ID, Info, InputType, Int, Mutation, ObjectType, Query, ResolveField, Resolver, Root, registerEnumType } from \\"@nestjs/graphql\\";
import * as GraphQLScalars from \\"graphql-scalars\\";
import { Prisma } from \\"../../../../helpers/prisma-client-mock\\";
import { DecimalJSScalar } from \\"../../scalars\\";

@InputType(\\"NullableDecimalFieldUpdateOperationsInput\\", {
  isAbstract: true
})
export class NullableDecimalFieldUpdateOperationsInput {
  @Field(_type => DecimalJSScalar, {
    nullable: true
  })
  set?: Prisma.Decimal | undefined;

  @Field(_type => DecimalJSScalar, {
    nullable: true
  })
  increment?: Prisma.Decimal | undefined;

  @Field(_type => DecimalJSScalar, {
    nullable: true
  })
  decrement?: Prisma.Decimal | undefined;

  @Field(_type => DecimalJSScalar, {
    nullable: true
  })
  multiply?: Prisma.Decimal | undefined;

  @Field(_type => DecimalJSScalar, {
    nullable: true
  })
  divide?: Prisma.Decimal | undefined;
}
"
`;

exports[`inputs should properly generate input type scalar filters classes for model with native types: index 1`] = `
"export { BigIntNullableFilter } from \\"./BigIntNullableFilter\\";
export { BigIntNullableWithAggregatesFilter } from \\"./BigIntNullableWithAggregatesFilter\\";
export { BytesNullableFilter } from \\"./BytesNullableFilter\\";
export { BytesNullableWithAggregatesFilter } from \\"./BytesNullableWithAggregatesFilter\\";
export { DecimalNullableFilter } from \\"./DecimalNullableFilter\\";
export { DecimalNullableWithAggregatesFilter } from \\"./DecimalNullableWithAggregatesFilter\\";
export { IntFieldUpdateOperationsInput } from \\"./IntFieldUpdateOperationsInput\\";
export { IntFilter } from \\"./IntFilter\\";
export { IntWithAggregatesFilter } from \\"./IntWithAggregatesFilter\\";
export { NativeTypeModelAvgOrderByAggregateInput } from \\"./NativeTypeModelAvgOrderByAggregateInput\\";
export { NativeTypeModelCountOrderByAggregateInput } from \\"./NativeTypeModelCountOrderByAggregateInput\\";
export { NativeTypeModelCreateInput } from \\"./NativeTypeModelCreateInput\\";
export { NativeTypeModelCreateManyInput } from \\"./NativeTypeModelCreateManyInput\\";
export { NativeTypeModelMaxOrderByAggregateInput } from \\"./NativeTypeModelMaxOrderByAggregateInput\\";
export { NativeTypeModelMinOrderByAggregateInput } from \\"./NativeTypeModelMinOrderByAggregateInput\\";
export { NativeTypeModelOrderByWithAggregationInput } from \\"./NativeTypeModelOrderByWithAggregationInput\\";
export { NativeTypeModelOrderByWithRelationInput } from \\"./NativeTypeModelOrderByWithRelationInput\\";
export { NativeTypeModelScalarWhereWithAggregatesInput } from \\"./NativeTypeModelScalarWhereWithAggregatesInput\\";
export { NativeTypeModelSumOrderByAggregateInput } from \\"./NativeTypeModelSumOrderByAggregateInput\\";
export { NativeTypeModelUpdateInput } from \\"./NativeTypeModelUpdateInput\\";
export { NativeTypeModelUpdateManyMutationInput } from \\"./NativeTypeModelUpdateManyMutationInput\\";
export { NativeTypeModelWhereInput } from \\"./NativeTypeModelWhereInput\\";
export { NativeTypeModelWhereUniqueInput } from \\"./NativeTypeModelWhereUniqueInput\\";
export { NestedBigIntNullableFilter } from \\"./NestedBigIntNullableFilter\\";
export { NestedBigIntNullableWithAggregatesFilter } from \\"./NestedBigIntNullableWithAggregatesFilter\\";
export { NestedBytesNullableFilter } from \\"./NestedBytesNullableFilter\\";
export { NestedBytesNullableWithAggregatesFilter } from \\"./NestedBytesNullableWithAggregatesFilter\\";
export { NestedDecimalNullableFilter } from \\"./NestedDecimalNullableFilter\\";
export { NestedDecimalNullableWithAggregatesFilter } from \\"./NestedDecimalNullableWithAggregatesFilter\\";
export { NestedFloatFilter } from \\"./NestedFloatFilter\\";
export { NestedFloatNullableFilter } from \\"./NestedFloatNullableFilter\\";
export { NestedIntFilter } from \\"./NestedIntFilter\\";
export { NestedIntNullableFilter } from \\"./NestedIntNullableFilter\\";
export { NestedIntWithAggregatesFilter } from \\"./NestedIntWithAggregatesFilter\\";
export { NullableBigIntFieldUpdateOperationsInput } from \\"./NullableBigIntFieldUpdateOperationsInput\\";
export { NullableBytesFieldUpdateOperationsInput } from \\"./NullableBytesFieldUpdateOperationsInput\\";
export { NullableDecimalFieldUpdateOperationsInput } from \\"./NullableDecimalFieldUpdateOperationsInput\\";
"
`;

exports[`inputs when \`extendedWhereUnique\` preview feature is enabled should properly generate input type classes with SortOrderInput type fields: FirstModelUpdateOneRequiredWithoutSecondModelsFieldNestedInput 1`] = `
"import { Args, ArgsType, Context, Field, Float, ID, Info, InputType, Int, Mutation, ObjectType, Query, ResolveField, Resolver, Root, registerEnumType } from \\"@nestjs/graphql\\";
import * as GraphQLScalars from \\"graphql-scalars\\";
import { Prisma } from \\"../../../../helpers/prisma-client-mock\\";
import { DecimalJSScalar } from \\"../../scalars\\";
import { FirstModelCreateOrConnectWithoutSecondModelsFieldInput } from \\"../inputs/FirstModelCreateOrConnectWithoutSecondModelsFieldInput\\";
import { FirstModelCreateWithoutSecondModelsFieldInput } from \\"../inputs/FirstModelCreateWithoutSecondModelsFieldInput\\";
import { FirstModelUpdateToOneWithWhereWithoutSecondModelsFieldInput } from \\"../inputs/FirstModelUpdateToOneWithWhereWithoutSecondModelsFieldInput\\";
import { FirstModelUpsertWithoutSecondModelsFieldInput } from \\"../inputs/FirstModelUpsertWithoutSecondModelsFieldInput\\";
import { FirstModelWhereUniqueInput } from \\"../inputs/FirstModelWhereUniqueInput\\";

@InputType(\\"FirstModelUpdateOneRequiredWithoutSecondModelsFieldNestedInput\\", {
  isAbstract: true
})
export class FirstModelUpdateOneRequiredWithoutSecondModelsFieldNestedInput {
  @Field(_type => FirstModelCreateWithoutSecondModelsFieldInput, {
    nullable: true
  })
  create?: FirstModelCreateWithoutSecondModelsFieldInput | undefined;

  @Field(_type => FirstModelCreateOrConnectWithoutSecondModelsFieldInput, {
    nullable: true
  })
  connectOrCreate?: FirstModelCreateOrConnectWithoutSecondModelsFieldInput | undefined;

  @Field(_type => FirstModelUpsertWithoutSecondModelsFieldInput, {
    nullable: true
  })
  upsert?: FirstModelUpsertWithoutSecondModelsFieldInput | undefined;

  @Field(_type => FirstModelWhereUniqueInput, {
    nullable: true
  })
  connect?: FirstModelWhereUniqueInput | undefined;

  @Field(_type => FirstModelUpdateToOneWithWhereWithoutSecondModelsFieldInput, {
    nullable: true
  })
  update?: FirstModelUpdateToOneWithWhereWithoutSecondModelsFieldInput | undefined;
}
"
`;

exports[`inputs when \`extendedWhereUnique\` preview feature is enabled should properly generate input type classes with SortOrderInput type fields: FirstModelUpdateToOneWithWhereWithoutSecondModelsFieldInput 1`] = `
"import { Args, ArgsType, Context, Field, Float, ID, Info, InputType, Int, Mutation, ObjectType, Query, ResolveField, Resolver, Root, registerEnumType } from \\"@nestjs/graphql\\";
import * as GraphQLScalars from \\"graphql-scalars\\";
import { Prisma } from \\"../../../../helpers/prisma-client-mock\\";
import { DecimalJSScalar } from \\"../../scalars\\";
import { FirstModelUpdateWithoutSecondModelsFieldInput } from \\"../inputs/FirstModelUpdateWithoutSecondModelsFieldInput\\";
import { FirstModelWhereInput } from \\"../inputs/FirstModelWhereInput\\";

@InputType(\\"FirstModelUpdateToOneWithWhereWithoutSecondModelsFieldInput\\", {
  isAbstract: true
})
export class FirstModelUpdateToOneWithWhereWithoutSecondModelsFieldInput {
  @Field(_type => FirstModelWhereInput, {
    nullable: true
  })
  where?: FirstModelWhereInput | undefined;

  @Field(_type => FirstModelUpdateWithoutSecondModelsFieldInput, {
    nullable: false
  })
  data!: FirstModelUpdateWithoutSecondModelsFieldInput;
}
"
`;

exports[`inputs when \`extendedWhereUnique\` preview feature is enabled should properly generate input type classes with SortOrderInput type fields: FirstModelWhereUniqueInput 1`] = `
"import { Args, ArgsType, Context, Field, Float, ID, Info, InputType, Int, Mutation, ObjectType, Query, ResolveField, Resolver, Root, registerEnumType } from \\"@nestjs/graphql\\";
import * as GraphQLScalars from \\"graphql-scalars\\";
import { Prisma } from \\"../../../../helpers/prisma-client-mock\\";
import { DecimalJSScalar } from \\"../../scalars\\";
import { FirstModelWhereInput } from \\"../inputs/FirstModelWhereInput\\";
import { FloatNullableFilter } from \\"../inputs/FloatNullableFilter\\";
import { SecondModelListRelationFilter } from \\"../inputs/SecondModelListRelationFilter\\";

@InputType(\\"FirstModelWhereUniqueInput\\", {
  isAbstract: true
})
export class FirstModelWhereUniqueInput {
  @Field(_type => Int, {
    nullable: true
  })
  idField?: number | undefined;

  @Field(_type => String, {
    nullable: true
  })
  uniqueStringField?: string | undefined;

  @Field(_type => [FirstModelWhereInput], {
    nullable: true
  })
  AND?: FirstModelWhereInput[] | undefined;

  @Field(_type => [FirstModelWhereInput], {
    nullable: true
  })
  OR?: FirstModelWhereInput[] | undefined;

  @Field(_type => [FirstModelWhereInput], {
    nullable: true
  })
  NOT?: FirstModelWhereInput[] | undefined;

  @Field(_type => FloatNullableFilter, {
    nullable: true
  })
  optionalFloatField?: FloatNullableFilter | undefined;

  @Field(_type => SecondModelListRelationFilter, {
    nullable: true
  })
  secondModelsField?: SecondModelListRelationFilter | undefined;
}
"
`;

exports[`inputs when \`extendedWhereUnique\` preview feature is enabled should properly generate input type classes with SortOrderInput type fields: SecondModelUpsertWithWhereUniqueWithoutFirstModelFieldInput 1`] = `
"import { Args, ArgsType, Context, Field, Float, ID, Info, InputType, Int, Mutation, ObjectType, Query, ResolveField, Resolver, Root, registerEnumType } from \\"@nestjs/graphql\\";
import * as GraphQLScalars from \\"graphql-scalars\\";
import { Prisma } from \\"../../../../helpers/prisma-client-mock\\";
import { DecimalJSScalar } from \\"../../scalars\\";
import { SecondModelCreateWithoutFirstModelFieldInput } from \\"../inputs/SecondModelCreateWithoutFirstModelFieldInput\\";
import { SecondModelUpdateWithoutFirstModelFieldInput } from \\"../inputs/SecondModelUpdateWithoutFirstModelFieldInput\\";
import { SecondModelWhereUniqueInput } from \\"../inputs/SecondModelWhereUniqueInput\\";

@InputType(\\"SecondModelUpsertWithWhereUniqueWithoutFirstModelFieldInput\\", {
  isAbstract: true
})
export class SecondModelUpsertWithWhereUniqueWithoutFirstModelFieldInput {
  @Field(_type => SecondModelWhereUniqueInput, {
    nullable: false
  })
  where!: SecondModelWhereUniqueInput;

  @Field(_type => SecondModelUpdateWithoutFirstModelFieldInput, {
    nullable: false
  })
  update!: SecondModelUpdateWithoutFirstModelFieldInput;

  @Field(_type => SecondModelCreateWithoutFirstModelFieldInput, {
    nullable: false
  })
  create!: SecondModelCreateWithoutFirstModelFieldInput;
}
"
`;

exports[`inputs when \`extendedWhereUnique\` preview feature is enabled should properly generate input type classes with SortOrderInput type fields: index 1`] = `
"export { FirstModelAvgOrderByAggregateInput } from \\"./FirstModelAvgOrderByAggregateInput\\";
export { FirstModelCountOrderByAggregateInput } from \\"./FirstModelCountOrderByAggregateInput\\";
export { FirstModelCreateInput } from \\"./FirstModelCreateInput\\";
export { FirstModelCreateManyInput } from \\"./FirstModelCreateManyInput\\";
export { FirstModelCreateNestedOneWithoutSecondModelsFieldInput } from \\"./FirstModelCreateNestedOneWithoutSecondModelsFieldInput\\";
export { FirstModelCreateOrConnectWithoutSecondModelsFieldInput } from \\"./FirstModelCreateOrConnectWithoutSecondModelsFieldInput\\";
export { FirstModelCreateWithoutSecondModelsFieldInput } from \\"./FirstModelCreateWithoutSecondModelsFieldInput\\";
export { FirstModelMaxOrderByAggregateInput } from \\"./FirstModelMaxOrderByAggregateInput\\";
export { FirstModelMinOrderByAggregateInput } from \\"./FirstModelMinOrderByAggregateInput\\";
export { FirstModelOrderByWithAggregationInput } from \\"./FirstModelOrderByWithAggregationInput\\";
export { FirstModelOrderByWithRelationInput } from \\"./FirstModelOrderByWithRelationInput\\";
export { FirstModelRelationFilter } from \\"./FirstModelRelationFilter\\";
export { FirstModelScalarWhereWithAggregatesInput } from \\"./FirstModelScalarWhereWithAggregatesInput\\";
export { FirstModelSumOrderByAggregateInput } from \\"./FirstModelSumOrderByAggregateInput\\";
export { FirstModelUpdateInput } from \\"./FirstModelUpdateInput\\";
export { FirstModelUpdateManyMutationInput } from \\"./FirstModelUpdateManyMutationInput\\";
export { FirstModelUpdateOneRequiredWithoutSecondModelsFieldNestedInput } from \\"./FirstModelUpdateOneRequiredWithoutSecondModelsFieldNestedInput\\";
export { FirstModelUpdateToOneWithWhereWithoutSecondModelsFieldInput } from \\"./FirstModelUpdateToOneWithWhereWithoutSecondModelsFieldInput\\";
export { FirstModelUpdateWithoutSecondModelsFieldInput } from \\"./FirstModelUpdateWithoutSecondModelsFieldInput\\";
export { FirstModelUpsertWithoutSecondModelsFieldInput } from \\"./FirstModelUpsertWithoutSecondModelsFieldInput\\";
export { FirstModelWhereInput } from \\"./FirstModelWhereInput\\";
export { FirstModelWhereUniqueInput } from \\"./FirstModelWhereUniqueInput\\";
export { FloatNullableFilter } from \\"./FloatNullableFilter\\";
export { FloatNullableWithAggregatesFilter } from \\"./FloatNullableWithAggregatesFilter\\";
export { IntFieldUpdateOperationsInput } from \\"./IntFieldUpdateOperationsInput\\";
export { IntFilter } from \\"./IntFilter\\";
export { IntWithAggregatesFilter } from \\"./IntWithAggregatesFilter\\";
export { NestedFloatFilter } from \\"./NestedFloatFilter\\";
export { NestedFloatNullableFilter } from \\"./NestedFloatNullableFilter\\";
export { NestedFloatNullableWithAggregatesFilter } from \\"./NestedFloatNullableWithAggregatesFilter\\";
export { NestedIntFilter } from \\"./NestedIntFilter\\";
export { NestedIntNullableFilter } from \\"./NestedIntNullableFilter\\";
export { NestedIntWithAggregatesFilter } from \\"./NestedIntWithAggregatesFilter\\";
export { NestedStringFilter } from \\"./NestedStringFilter\\";
export { NestedStringWithAggregatesFilter } from \\"./NestedStringWithAggregatesFilter\\";
export { NullableFloatFieldUpdateOperationsInput } from \\"./NullableFloatFieldUpdateOperationsInput\\";
export { SecondModelAvgOrderByAggregateInput } from \\"./SecondModelAvgOrderByAggregateInput\\";
export { SecondModelCountOrderByAggregateInput } from \\"./SecondModelCountOrderByAggregateInput\\";
export { SecondModelCreateInput } from \\"./SecondModelCreateInput\\";
export { SecondModelCreateManyFirstModelFieldInput } from \\"./SecondModelCreateManyFirstModelFieldInput\\";
export { SecondModelCreateManyFirstModelFieldInputEnvelope } from \\"./SecondModelCreateManyFirstModelFieldInputEnvelope\\";
export { SecondModelCreateManyInput } from \\"./SecondModelCreateManyInput\\";
export { SecondModelCreateNestedManyWithoutFirstModelFieldInput } from \\"./SecondModelCreateNestedManyWithoutFirstModelFieldInput\\";
export { SecondModelCreateOrConnectWithoutFirstModelFieldInput } from \\"./SecondModelCreateOrConnectWithoutFirstModelFieldInput\\";
export { SecondModelCreateWithoutFirstModelFieldInput } from \\"./SecondModelCreateWithoutFirstModelFieldInput\\";
export { SecondModelListRelationFilter } from \\"./SecondModelListRelationFilter\\";
export { SecondModelMaxOrderByAggregateInput } from \\"./SecondModelMaxOrderByAggregateInput\\";
export { SecondModelMinOrderByAggregateInput } from \\"./SecondModelMinOrderByAggregateInput\\";
export { SecondModelOrderByRelationAggregateInput } from \\"./SecondModelOrderByRelationAggregateInput\\";
export { SecondModelOrderByWithAggregationInput } from \\"./SecondModelOrderByWithAggregationInput\\";
export { SecondModelOrderByWithRelationInput } from \\"./SecondModelOrderByWithRelationInput\\";
export { SecondModelScalarWhereInput } from \\"./SecondModelScalarWhereInput\\";
export { SecondModelScalarWhereWithAggregatesInput } from \\"./SecondModelScalarWhereWithAggregatesInput\\";
export { SecondModelSumOrderByAggregateInput } from \\"./SecondModelSumOrderByAggregateInput\\";
export { SecondModelUpdateInput } from \\"./SecondModelUpdateInput\\";
export { SecondModelUpdateManyMutationInput } from \\"./SecondModelUpdateManyMutationInput\\";
export { SecondModelUpdateManyWithWhereWithoutFirstModelFieldInput } from \\"./SecondModelUpdateManyWithWhereWithoutFirstModelFieldInput\\";
export { SecondModelUpdateManyWithoutFirstModelFieldNestedInput } from \\"./SecondModelUpdateManyWithoutFirstModelFieldNestedInput\\";
export { SecondModelUpdateWithWhereUniqueWithoutFirstModelFieldInput } from \\"./SecondModelUpdateWithWhereUniqueWithoutFirstModelFieldInput\\";
export { SecondModelUpdateWithoutFirstModelFieldInput } from \\"./SecondModelUpdateWithoutFirstModelFieldInput\\";
export { SecondModelUpsertWithWhereUniqueWithoutFirstModelFieldInput } from \\"./SecondModelUpsertWithWhereUniqueWithoutFirstModelFieldInput\\";
export { SecondModelWhereInput } from \\"./SecondModelWhereInput\\";
export { SecondModelWhereUniqueInput } from \\"./SecondModelWhereUniqueInput\\";
export { StringFieldUpdateOperationsInput } from \\"./StringFieldUpdateOperationsInput\\";
export { StringFilter } from \\"./StringFilter\\";
export { StringWithAggregatesFilter } from \\"./StringWithAggregatesFilter\\";
"
`;

exports[`inputs when \`fullTextSearch\` preview feature is enabled should properly generate input type classes with relevance and string search field: FirstModelOrderByRelevanceInput 1`] = `
"import { Args, ArgsType, Context, Field, Float, ID, Info, InputType, Int, Mutation, ObjectType, Query, ResolveField, Resolver, Root, registerEnumType } from \\"@nestjs/graphql\\";
import * as GraphQLScalars from \\"graphql-scalars\\";
import { Prisma } from \\"../../../../helpers/prisma-client-mock\\";
import { DecimalJSScalar } from \\"../../scalars\\";
import { FirstModelOrderByRelevanceFieldEnum } from \\"../../enums/FirstModelOrderByRelevanceFieldEnum\\";
import { SortOrder } from \\"../../enums/SortOrder\\";

@InputType(\\"FirstModelOrderByRelevanceInput\\", {
  isAbstract: true
})
export class FirstModelOrderByRelevanceInput {
  @Field(_type => [FirstModelOrderByRelevanceFieldEnum], {
    nullable: false
  })
  fields!: \\"uniqueStringField\\"[];

  @Field(_type => SortOrder, {
    nullable: false
  })
  sort!: \\"asc\\" | \\"desc\\";

  @Field(_type => String, {
    nullable: false
  })
  search!: string;
}
"
`;

exports[`inputs when \`fullTextSearch\` preview feature is enabled should properly generate input type classes with relevance and string search field: FirstModelOrderByWithRelationAndSearchRelevanceInput 1`] = `
"import { Args, ArgsType, Context, Field, Float, ID, Info, InputType, Int, Mutation, ObjectType, Query, ResolveField, Resolver, Root, registerEnumType } from \\"@nestjs/graphql\\";
import * as GraphQLScalars from \\"graphql-scalars\\";
import { Prisma } from \\"../../../../helpers/prisma-client-mock\\";
import { DecimalJSScalar } from \\"../../scalars\\";
import { FirstModelOrderByRelevanceInput } from \\"../inputs/FirstModelOrderByRelevanceInput\\";
import { SecondModelOrderByRelationAggregateInput } from \\"../inputs/SecondModelOrderByRelationAggregateInput\\";
import { SortOrder } from \\"../../enums/SortOrder\\";

@InputType(\\"FirstModelOrderByWithRelationAndSearchRelevanceInput\\", {
  isAbstract: true
})
export class FirstModelOrderByWithRelationAndSearchRelevanceInput {
  @Field(_type => SortOrder, {
    nullable: true
  })
  idField?: \\"asc\\" | \\"desc\\" | undefined;

  @Field(_type => SortOrder, {
    nullable: true
  })
  uniqueStringField?: \\"asc\\" | \\"desc\\" | undefined;

  @Field(_type => SortOrder, {
    nullable: true
  })
  floatField?: \\"asc\\" | \\"desc\\" | undefined;

  @Field(_type => SecondModelOrderByRelationAggregateInput, {
    nullable: true
  })
  secondModelsField?: SecondModelOrderByRelationAggregateInput | undefined;

  @Field(_type => FirstModelOrderByRelevanceInput, {
    nullable: true
  })
  _relevance?: FirstModelOrderByRelevanceInput | undefined;
}
"
`;

exports[`inputs when \`fullTextSearch\` preview feature is enabled should properly generate input type classes with relevance and string search field: NestedStringFilter 1`] = `
"import { Args, ArgsType, Context, Field, Float, ID, Info, InputType, Int, Mutation, ObjectType, Query, ResolveField, Resolver, Root, registerEnumType } from \\"@nestjs/graphql\\";
import * as GraphQLScalars from \\"graphql-scalars\\";
import { Prisma } from \\"../../../../helpers/prisma-client-mock\\";
import { DecimalJSScalar } from \\"../../scalars\\";

@InputType(\\"NestedStringFilter\\", {
  isAbstract: true
})
export class NestedStringFilter {
  @Field(_type => String, {
    nullable: true
  })
  equals?: string | undefined;

  @Field(_type => [String], {
    nullable: true
  })
  in?: string[] | undefined;

  @Field(_type => [String], {
    nullable: true
  })
  notIn?: string[] | undefined;

  @Field(_type => String, {
    nullable: true
  })
  lt?: string | undefined;

  @Field(_type => String, {
    nullable: true
  })
  lte?: string | undefined;

  @Field(_type => String, {
    nullable: true
  })
  gt?: string | undefined;

  @Field(_type => String, {
    nullable: true
  })
  gte?: string | undefined;

  @Field(_type => String, {
    nullable: true
  })
  contains?: string | undefined;

  @Field(_type => String, {
    nullable: true
  })
  startsWith?: string | undefined;

  @Field(_type => String, {
    nullable: true
  })
  endsWith?: string | undefined;

  @Field(_type => String, {
    nullable: true
  })
  search?: string | undefined;

  @Field(_type => NestedStringFilter, {
    nullable: true
  })
  not?: NestedStringFilter | undefined;
}
"
`;

exports[`inputs when \`fullTextSearch\` preview feature is enabled should properly generate input type classes with relevance and string search field: StringFilter 1`] = `
"import { Args, ArgsType, Context, Field, Float, ID, Info, InputType, Int, Mutation, ObjectType, Query, ResolveField, Resolver, Root, registerEnumType } from \\"@nestjs/graphql\\";
import * as GraphQLScalars from \\"graphql-scalars\\";
import { Prisma } from \\"../../../../helpers/prisma-client-mock\\";
import { DecimalJSScalar } from \\"../../scalars\\";
import { NestedStringFilter } from \\"../inputs/NestedStringFilter\\";
import { QueryMode } from \\"../../enums/QueryMode\\";

@InputType(\\"StringFilter\\", {
  isAbstract: true
})
export class StringFilter {
  @Field(_type => String, {
    nullable: true
  })
  equals?: string | undefined;

  @Field(_type => [String], {
    nullable: true
  })
  in?: string[] | undefined;

  @Field(_type => [String], {
    nullable: true
  })
  notIn?: string[] | undefined;

  @Field(_type => String, {
    nullable: true
  })
  lt?: string | undefined;

  @Field(_type => String, {
    nullable: true
  })
  lte?: string | undefined;

  @Field(_type => String, {
    nullable: true
  })
  gt?: string | undefined;

  @Field(_type => String, {
    nullable: true
  })
  gte?: string | undefined;

  @Field(_type => String, {
    nullable: true
  })
  contains?: string | undefined;

  @Field(_type => String, {
    nullable: true
  })
  startsWith?: string | undefined;

  @Field(_type => String, {
    nullable: true
  })
  endsWith?: string | undefined;

  @Field(_type => String, {
    nullable: true
  })
  search?: string | undefined;

  @Field(_type => QueryMode, {
    nullable: true
  })
  mode?: \\"default\\" | \\"insensitive\\" | undefined;

  @Field(_type => NestedStringFilter, {
    nullable: true
  })
  not?: NestedStringFilter | undefined;
}
"
`;

exports[`inputs when \`fullTextSearch\` preview feature is enabled should properly generate input type classes with relevance and string search field: index 1`] = `
"export { FirstModelAvgOrderByAggregateInput } from \\"./FirstModelAvgOrderByAggregateInput\\";
export { FirstModelCountOrderByAggregateInput } from \\"./FirstModelCountOrderByAggregateInput\\";
export { FirstModelCreateInput } from \\"./FirstModelCreateInput\\";
export { FirstModelCreateManyInput } from \\"./FirstModelCreateManyInput\\";
export { FirstModelCreateNestedOneWithoutSecondModelsFieldInput } from \\"./FirstModelCreateNestedOneWithoutSecondModelsFieldInput\\";
export { FirstModelCreateOrConnectWithoutSecondModelsFieldInput } from \\"./FirstModelCreateOrConnectWithoutSecondModelsFieldInput\\";
export { FirstModelCreateWithoutSecondModelsFieldInput } from \\"./FirstModelCreateWithoutSecondModelsFieldInput\\";
export { FirstModelMaxOrderByAggregateInput } from \\"./FirstModelMaxOrderByAggregateInput\\";
export { FirstModelMinOrderByAggregateInput } from \\"./FirstModelMinOrderByAggregateInput\\";
export { FirstModelOrderByRelevanceInput } from \\"./FirstModelOrderByRelevanceInput\\";
export { FirstModelOrderByWithAggregationInput } from \\"./FirstModelOrderByWithAggregationInput\\";
export { FirstModelOrderByWithRelationAndSearchRelevanceInput } from \\"./FirstModelOrderByWithRelationAndSearchRelevanceInput\\";
export { FirstModelRelationFilter } from \\"./FirstModelRelationFilter\\";
export { FirstModelScalarWhereWithAggregatesInput } from \\"./FirstModelScalarWhereWithAggregatesInput\\";
export { FirstModelSumOrderByAggregateInput } from \\"./FirstModelSumOrderByAggregateInput\\";
export { FirstModelUpdateInput } from \\"./FirstModelUpdateInput\\";
export { FirstModelUpdateManyMutationInput } from \\"./FirstModelUpdateManyMutationInput\\";
export { FirstModelUpdateOneRequiredWithoutSecondModelsFieldNestedInput } from \\"./FirstModelUpdateOneRequiredWithoutSecondModelsFieldNestedInput\\";
export { FirstModelUpdateWithoutSecondModelsFieldInput } from \\"./FirstModelUpdateWithoutSecondModelsFieldInput\\";
export { FirstModelUpsertWithoutSecondModelsFieldInput } from \\"./FirstModelUpsertWithoutSecondModelsFieldInput\\";
export { FirstModelWhereInput } from \\"./FirstModelWhereInput\\";
export { FirstModelWhereUniqueInput } from \\"./FirstModelWhereUniqueInput\\";
export { FloatFieldUpdateOperationsInput } from \\"./FloatFieldUpdateOperationsInput\\";
export { FloatFilter } from \\"./FloatFilter\\";
export { FloatWithAggregatesFilter } from \\"./FloatWithAggregatesFilter\\";
export { IntFieldUpdateOperationsInput } from \\"./IntFieldUpdateOperationsInput\\";
export { IntFilter } from \\"./IntFilter\\";
export { IntWithAggregatesFilter } from \\"./IntWithAggregatesFilter\\";
export { NestedFloatFilter } from \\"./NestedFloatFilter\\";
export { NestedFloatWithAggregatesFilter } from \\"./NestedFloatWithAggregatesFilter\\";
export { NestedIntFilter } from \\"./NestedIntFilter\\";
export { NestedIntWithAggregatesFilter } from \\"./NestedIntWithAggregatesFilter\\";
export { NestedStringFilter } from \\"./NestedStringFilter\\";
export { NestedStringWithAggregatesFilter } from \\"./NestedStringWithAggregatesFilter\\";
export { SecondModelAvgOrderByAggregateInput } from \\"./SecondModelAvgOrderByAggregateInput\\";
export { SecondModelCountOrderByAggregateInput } from \\"./SecondModelCountOrderByAggregateInput\\";
export { SecondModelCreateInput } from \\"./SecondModelCreateInput\\";
export { SecondModelCreateManyFirstModelFieldInput } from \\"./SecondModelCreateManyFirstModelFieldInput\\";
export { SecondModelCreateManyFirstModelFieldInputEnvelope } from \\"./SecondModelCreateManyFirstModelFieldInputEnvelope\\";
export { SecondModelCreateManyInput } from \\"./SecondModelCreateManyInput\\";
export { SecondModelCreateNestedManyWithoutFirstModelFieldInput } from \\"./SecondModelCreateNestedManyWithoutFirstModelFieldInput\\";
export { SecondModelCreateOrConnectWithoutFirstModelFieldInput } from \\"./SecondModelCreateOrConnectWithoutFirstModelFieldInput\\";
export { SecondModelCreateWithoutFirstModelFieldInput } from \\"./SecondModelCreateWithoutFirstModelFieldInput\\";
export { SecondModelListRelationFilter } from \\"./SecondModelListRelationFilter\\";
export { SecondModelMaxOrderByAggregateInput } from \\"./SecondModelMaxOrderByAggregateInput\\";
export { SecondModelMinOrderByAggregateInput } from \\"./SecondModelMinOrderByAggregateInput\\";
export { SecondModelOrderByRelationAggregateInput } from \\"./SecondModelOrderByRelationAggregateInput\\";
export { SecondModelOrderByRelevanceInput } from \\"./SecondModelOrderByRelevanceInput\\";
export { SecondModelOrderByWithAggregationInput } from \\"./SecondModelOrderByWithAggregationInput\\";
export { SecondModelOrderByWithRelationAndSearchRelevanceInput } from \\"./SecondModelOrderByWithRelationAndSearchRelevanceInput\\";
export { SecondModelScalarWhereInput } from \\"./SecondModelScalarWhereInput\\";
export { SecondModelScalarWhereWithAggregatesInput } from \\"./SecondModelScalarWhereWithAggregatesInput\\";
export { SecondModelSumOrderByAggregateInput } from \\"./SecondModelSumOrderByAggregateInput\\";
export { SecondModelUpdateInput } from \\"./SecondModelUpdateInput\\";
export { SecondModelUpdateManyMutationInput } from \\"./SecondModelUpdateManyMutationInput\\";
export { SecondModelUpdateManyWithWhereWithoutFirstModelFieldInput } from \\"./SecondModelUpdateManyWithWhereWithoutFirstModelFieldInput\\";
export { SecondModelUpdateManyWithoutFirstModelFieldNestedInput } from \\"./SecondModelUpdateManyWithoutFirstModelFieldNestedInput\\";
export { SecondModelUpdateWithWhereUniqueWithoutFirstModelFieldInput } from \\"./SecondModelUpdateWithWhereUniqueWithoutFirstModelFieldInput\\";
export { SecondModelUpdateWithoutFirstModelFieldInput } from \\"./SecondModelUpdateWithoutFirstModelFieldInput\\";
export { SecondModelUpsertWithWhereUniqueWithoutFirstModelFieldInput } from \\"./SecondModelUpsertWithWhereUniqueWithoutFirstModelFieldInput\\";
export { SecondModelWhereInput } from \\"./SecondModelWhereInput\\";
export { SecondModelWhereUniqueInput } from \\"./SecondModelWhereUniqueInput\\";
export { StringFieldUpdateOperationsInput } from \\"./StringFieldUpdateOperationsInput\\";
export { StringFilter } from \\"./StringFilter\\";
export { StringWithAggregatesFilter } from \\"./StringWithAggregatesFilter\\";
"
`;

exports[`inputs when \`orderByNulls\` preview feature is enabled should properly generate input type classes with SortOrderInput type fields: FirstModelOrderByWithAggregationInput 1`] = `
"import { Args, ArgsType, Context, Field, Float, ID, Info, InputType, Int, Mutation, ObjectType, Query, ResolveField, Resolver, Root, registerEnumType } from \\"@nestjs/graphql\\";
import * as GraphQLScalars from \\"graphql-scalars\\";
import { Prisma } from \\"../../../../helpers/prisma-client-mock\\";
import { DecimalJSScalar } from \\"../../scalars\\";
import { FirstModelAvgOrderByAggregateInput } from \\"../inputs/FirstModelAvgOrderByAggregateInput\\";
import { FirstModelCountOrderByAggregateInput } from \\"../inputs/FirstModelCountOrderByAggregateInput\\";
import { FirstModelMaxOrderByAggregateInput } from \\"../inputs/FirstModelMaxOrderByAggregateInput\\";
import { FirstModelMinOrderByAggregateInput } from \\"../inputs/FirstModelMinOrderByAggregateInput\\";
import { FirstModelSumOrderByAggregateInput } from \\"../inputs/FirstModelSumOrderByAggregateInput\\";
import { SortOrderInput } from \\"../inputs/SortOrderInput\\";
import { SortOrder } from \\"../../enums/SortOrder\\";

@InputType(\\"FirstModelOrderByWithAggregationInput\\", {
  isAbstract: true
})
export class FirstModelOrderByWithAggregationInput {
  @Field(_type => SortOrder, {
    nullable: true
  })
  idField?: \\"asc\\" | \\"desc\\" | undefined;

  @Field(_type => SortOrder, {
    nullable: true
  })
  uniqueStringField?: \\"asc\\" | \\"desc\\" | undefined;

  @Field(_type => SortOrderInput, {
    nullable: true
  })
  optionalFloatField?: SortOrderInput | undefined;

  @Field(_type => FirstModelCountOrderByAggregateInput, {
    nullable: true
  })
  _count?: FirstModelCountOrderByAggregateInput | undefined;

  @Field(_type => FirstModelAvgOrderByAggregateInput, {
    nullable: true
  })
  _avg?: FirstModelAvgOrderByAggregateInput | undefined;

  @Field(_type => FirstModelMaxOrderByAggregateInput, {
    nullable: true
  })
  _max?: FirstModelMaxOrderByAggregateInput | undefined;

  @Field(_type => FirstModelMinOrderByAggregateInput, {
    nullable: true
  })
  _min?: FirstModelMinOrderByAggregateInput | undefined;

  @Field(_type => FirstModelSumOrderByAggregateInput, {
    nullable: true
  })
  _sum?: FirstModelSumOrderByAggregateInput | undefined;
}
"
`;

exports[`inputs when \`orderByNulls\` preview feature is enabled should properly generate input type classes with SortOrderInput type fields: SortOrderInput 1`] = `
"import { Args, ArgsType, Context, Field, Float, ID, Info, InputType, Int, Mutation, ObjectType, Query, ResolveField, Resolver, Root, registerEnumType } from \\"@nestjs/graphql\\";
import * as GraphQLScalars from \\"graphql-scalars\\";
import { Prisma } from \\"../../../../helpers/prisma-client-mock\\";
import { DecimalJSScalar } from \\"../../scalars\\";
import { NullsOrder } from \\"../../enums/NullsOrder\\";
import { SortOrder } from \\"../../enums/SortOrder\\";

@InputType(\\"SortOrderInput\\", {
  isAbstract: true
})
export class SortOrderInput {
  @Field(_type => SortOrder, {
    nullable: false
  })
  sort!: \\"asc\\" | \\"desc\\";

  @Field(_type => NullsOrder, {
    nullable: true
  })
  nulls?: \\"first\\" | \\"last\\" | undefined;
}
"
`;

exports[`inputs when \`orderByNulls\` preview feature is enabled should properly generate input type classes with SortOrderInput type fields: index 1`] = `
"export { FirstModelAvgOrderByAggregateInput } from \\"./FirstModelAvgOrderByAggregateInput\\";
export { FirstModelCountOrderByAggregateInput } from \\"./FirstModelCountOrderByAggregateInput\\";
export { FirstModelCreateInput } from \\"./FirstModelCreateInput\\";
export { FirstModelCreateManyInput } from \\"./FirstModelCreateManyInput\\";
export { FirstModelCreateNestedOneWithoutSecondModelsFieldInput } from \\"./FirstModelCreateNestedOneWithoutSecondModelsFieldInput\\";
export { FirstModelCreateOrConnectWithoutSecondModelsFieldInput } from \\"./FirstModelCreateOrConnectWithoutSecondModelsFieldInput\\";
export { FirstModelCreateWithoutSecondModelsFieldInput } from \\"./FirstModelCreateWithoutSecondModelsFieldInput\\";
export { FirstModelMaxOrderByAggregateInput } from \\"./FirstModelMaxOrderByAggregateInput\\";
export { FirstModelMinOrderByAggregateInput } from \\"./FirstModelMinOrderByAggregateInput\\";
export { FirstModelOrderByWithAggregationInput } from \\"./FirstModelOrderByWithAggregationInput\\";
export { FirstModelOrderByWithRelationInput } from \\"./FirstModelOrderByWithRelationInput\\";
export { FirstModelRelationFilter } from \\"./FirstModelRelationFilter\\";
export { FirstModelScalarWhereWithAggregatesInput } from \\"./FirstModelScalarWhereWithAggregatesInput\\";
export { FirstModelSumOrderByAggregateInput } from \\"./FirstModelSumOrderByAggregateInput\\";
export { FirstModelUpdateInput } from \\"./FirstModelUpdateInput\\";
export { FirstModelUpdateManyMutationInput } from \\"./FirstModelUpdateManyMutationInput\\";
export { FirstModelUpdateOneRequiredWithoutSecondModelsFieldNestedInput } from \\"./FirstModelUpdateOneRequiredWithoutSecondModelsFieldNestedInput\\";
export { FirstModelUpdateWithoutSecondModelsFieldInput } from \\"./FirstModelUpdateWithoutSecondModelsFieldInput\\";
export { FirstModelUpsertWithoutSecondModelsFieldInput } from \\"./FirstModelUpsertWithoutSecondModelsFieldInput\\";
export { FirstModelWhereInput } from \\"./FirstModelWhereInput\\";
export { FirstModelWhereUniqueInput } from \\"./FirstModelWhereUniqueInput\\";
export { FloatNullableFilter } from \\"./FloatNullableFilter\\";
export { FloatNullableWithAggregatesFilter } from \\"./FloatNullableWithAggregatesFilter\\";
export { IntFieldUpdateOperationsInput } from \\"./IntFieldUpdateOperationsInput\\";
export { IntFilter } from \\"./IntFilter\\";
export { IntWithAggregatesFilter } from \\"./IntWithAggregatesFilter\\";
export { NestedFloatFilter } from \\"./NestedFloatFilter\\";
export { NestedFloatNullableFilter } from \\"./NestedFloatNullableFilter\\";
export { NestedFloatNullableWithAggregatesFilter } from \\"./NestedFloatNullableWithAggregatesFilter\\";
export { NestedIntFilter } from \\"./NestedIntFilter\\";
export { NestedIntNullableFilter } from \\"./NestedIntNullableFilter\\";
export { NestedIntWithAggregatesFilter } from \\"./NestedIntWithAggregatesFilter\\";
export { NestedStringFilter } from \\"./NestedStringFilter\\";
export { NestedStringWithAggregatesFilter } from \\"./NestedStringWithAggregatesFilter\\";
export { NullableFloatFieldUpdateOperationsInput } from \\"./NullableFloatFieldUpdateOperationsInput\\";
export { SecondModelAvgOrderByAggregateInput } from \\"./SecondModelAvgOrderByAggregateInput\\";
export { SecondModelCountOrderByAggregateInput } from \\"./SecondModelCountOrderByAggregateInput\\";
export { SecondModelCreateInput } from \\"./SecondModelCreateInput\\";
export { SecondModelCreateManyFirstModelFieldInput } from \\"./SecondModelCreateManyFirstModelFieldInput\\";
export { SecondModelCreateManyFirstModelFieldInputEnvelope } from \\"./SecondModelCreateManyFirstModelFieldInputEnvelope\\";
export { SecondModelCreateManyInput } from \\"./SecondModelCreateManyInput\\";
export { SecondModelCreateNestedManyWithoutFirstModelFieldInput } from \\"./SecondModelCreateNestedManyWithoutFirstModelFieldInput\\";
export { SecondModelCreateOrConnectWithoutFirstModelFieldInput } from \\"./SecondModelCreateOrConnectWithoutFirstModelFieldInput\\";
export { SecondModelCreateWithoutFirstModelFieldInput } from \\"./SecondModelCreateWithoutFirstModelFieldInput\\";
export { SecondModelListRelationFilter } from \\"./SecondModelListRelationFilter\\";
export { SecondModelMaxOrderByAggregateInput } from \\"./SecondModelMaxOrderByAggregateInput\\";
export { SecondModelMinOrderByAggregateInput } from \\"./SecondModelMinOrderByAggregateInput\\";
export { SecondModelOrderByRelationAggregateInput } from \\"./SecondModelOrderByRelationAggregateInput\\";
export { SecondModelOrderByWithAggregationInput } from \\"./SecondModelOrderByWithAggregationInput\\";
export { SecondModelOrderByWithRelationInput } from \\"./SecondModelOrderByWithRelationInput\\";
export { SecondModelScalarWhereInput } from \\"./SecondModelScalarWhereInput\\";
export { SecondModelScalarWhereWithAggregatesInput } from \\"./SecondModelScalarWhereWithAggregatesInput\\";
export { SecondModelSumOrderByAggregateInput } from \\"./SecondModelSumOrderByAggregateInput\\";
export { SecondModelUpdateInput } from \\"./SecondModelUpdateInput\\";
export { SecondModelUpdateManyMutationInput } from \\"./SecondModelUpdateManyMutationInput\\";
export { SecondModelUpdateManyWithWhereWithoutFirstModelFieldInput } from \\"./SecondModelUpdateManyWithWhereWithoutFirstModelFieldInput\\";
export { SecondModelUpdateManyWithoutFirstModelFieldNestedInput } from \\"./SecondModelUpdateManyWithoutFirstModelFieldNestedInput\\";
export { SecondModelUpdateWithWhereUniqueWithoutFirstModelFieldInput } from \\"./SecondModelUpdateWithWhereUniqueWithoutFirstModelFieldInput\\";
export { SecondModelUpdateWithoutFirstModelFieldInput } from \\"./SecondModelUpdateWithoutFirstModelFieldInput\\";
export { SecondModelUpsertWithWhereUniqueWithoutFirstModelFieldInput } from \\"./SecondModelUpsertWithWhereUniqueWithoutFirstModelFieldInput\\";
export { SecondModelWhereInput } from \\"./SecondModelWhereInput\\";
export { SecondModelWhereUniqueInput } from \\"./SecondModelWhereUniqueInput\\";
export { SortOrderInput } from \\"./SortOrderInput\\";
export { StringFieldUpdateOperationsInput } from \\"./StringFieldUpdateOperationsInput\\";
export { StringFilter } from \\"./StringFilter\\";
export { StringWithAggregatesFilter } from \\"./StringWithAggregatesFilter\\";
"
`;

exports[`inputs when model field is renamed should properly generate input type classes: SampleOrderByWithRelationInput 1`] = `
"import { Args, ArgsType, Context, Field, Float, ID, Info, InputType, Int, Mutation, ObjectType, Query, ResolveField, Resolver, Root, registerEnumType } from \\"@nestjs/graphql\\";
import * as GraphQLScalars from \\"graphql-scalars\\";
import { Prisma } from \\"../../../../helpers/prisma-client-mock\\";
import { DecimalJSScalar } from \\"../../scalars\\";
import { SortOrder } from \\"../../enums/SortOrder\\";

@InputType(\\"SampleOrderByWithRelationInput\\", {
  isAbstract: true
})
export class SampleOrderByWithRelationInput {
  @Field(_type => SortOrder, {
    nullable: true
  })
  idField?: \\"asc\\" | \\"desc\\" | undefined;

  modelFieldName?: \\"asc\\" | \\"desc\\" | undefined;

  @Field(_type => SortOrder, {
    nullable: true
  })
  get mappedFieldName() {
    return this.modelFieldName;
  }

  set mappedFieldName(modelFieldName: \\"asc\\" | \\"desc\\" | undefined) {
    this.modelFieldName = modelFieldName;
  }
}
"
`;

exports[`inputs when model field is renamed should properly generate input type classes: SampleWhereInput 1`] = `
"import { Args, ArgsType, Context, Field, Float, ID, Info, InputType, Int, Mutation, ObjectType, Query, ResolveField, Resolver, Root, registerEnumType } from \\"@nestjs/graphql\\";
import * as GraphQLScalars from \\"graphql-scalars\\";
import { Prisma } from \\"../../../../helpers/prisma-client-mock\\";
import { DecimalJSScalar } from \\"../../scalars\\";
import { IntFilter } from \\"../inputs/IntFilter\\";
import { StringFilter } from \\"../inputs/StringFilter\\";

@InputType(\\"SampleWhereInput\\", {
  isAbstract: true
})
export class SampleWhereInput {
  @Field(_type => [SampleWhereInput], {
    nullable: true
  })
  AND?: SampleWhereInput[] | undefined;

  @Field(_type => [SampleWhereInput], {
    nullable: true
  })
  OR?: SampleWhereInput[] | undefined;

  @Field(_type => [SampleWhereInput], {
    nullable: true
  })
  NOT?: SampleWhereInput[] | undefined;

  @Field(_type => IntFilter, {
    nullable: true
  })
  idField?: IntFilter | undefined;

  modelFieldName?: StringFilter | undefined;

  @Field(_type => StringFilter, {
    nullable: true
  })
  get mappedFieldName() {
    return this.modelFieldName;
  }

  set mappedFieldName(modelFieldName: StringFilter | undefined) {
    this.modelFieldName = modelFieldName;
  }
}
"
`;

exports[`inputs when model field is renamed should properly generate input type classes: index 1`] = `
"export { IntFieldUpdateOperationsInput } from \\"./IntFieldUpdateOperationsInput\\";
export { IntFilter } from \\"./IntFilter\\";
export { IntWithAggregatesFilter } from \\"./IntWithAggregatesFilter\\";
export { NestedFloatFilter } from \\"./NestedFloatFilter\\";
export { NestedIntFilter } from \\"./NestedIntFilter\\";
export { NestedIntWithAggregatesFilter } from \\"./NestedIntWithAggregatesFilter\\";
export { NestedStringFilter } from \\"./NestedStringFilter\\";
export { NestedStringWithAggregatesFilter } from \\"./NestedStringWithAggregatesFilter\\";
export { SampleAvgOrderByAggregateInput } from \\"./SampleAvgOrderByAggregateInput\\";
export { SampleCountOrderByAggregateInput } from \\"./SampleCountOrderByAggregateInput\\";
export { SampleCreateInput } from \\"./SampleCreateInput\\";
export { SampleCreateManyInput } from \\"./SampleCreateManyInput\\";
export { SampleMaxOrderByAggregateInput } from \\"./SampleMaxOrderByAggregateInput\\";
export { SampleMinOrderByAggregateInput } from \\"./SampleMinOrderByAggregateInput\\";
export { SampleOrderByWithAggregationInput } from \\"./SampleOrderByWithAggregationInput\\";
export { SampleOrderByWithRelationInput } from \\"./SampleOrderByWithRelationInput\\";
export { SampleScalarWhereWithAggregatesInput } from \\"./SampleScalarWhereWithAggregatesInput\\";
export { SampleSumOrderByAggregateInput } from \\"./SampleSumOrderByAggregateInput\\";
export { SampleUpdateInput } from \\"./SampleUpdateInput\\";
export { SampleUpdateManyMutationInput } from \\"./SampleUpdateManyMutationInput\\";
export { SampleWhereInput } from \\"./SampleWhereInput\\";
export { SampleWhereUniqueInput } from \\"./SampleWhereUniqueInput\\";
export { StringFieldUpdateOperationsInput } from \\"./StringFieldUpdateOperationsInput\\";
export { StringFilter } from \\"./StringFilter\\";
export { StringWithAggregatesFilter } from \\"./StringWithAggregatesFilter\\";
"
`;

exports[`inputs when model is renamed should properly generate input type classes for filtering models by many to many relation fields: RenamedFirstModelOrderByWithRelationInput 1`] = `
"import { Args, ArgsType, Context, Field, Float, ID, Info, InputType, Int, Mutation, ObjectType, Query, ResolveField, Resolver, Root, registerEnumType } from \\"@nestjs/graphql\\";
import * as GraphQLScalars from \\"graphql-scalars\\";
import { Prisma } from \\"../../../../helpers/prisma-client-mock\\";
import { DecimalJSScalar } from \\"../../scalars\\";
import { RenamedSecondModelOrderByRelationAggregateInput } from \\"../inputs/RenamedSecondModelOrderByRelationAggregateInput\\";
import { SortOrder } from \\"../../enums/SortOrder\\";

@InputType(\\"RenamedFirstModelOrderByWithRelationInput\\", {
  isAbstract: true
})
export class RenamedFirstModelOrderByWithRelationInput {
  @Field(_type => SortOrder, {
    nullable: true
  })
  idField?: \\"asc\\" | \\"desc\\" | undefined;

  @Field(_type => SortOrder, {
    nullable: true
  })
  uniqueStringField?: \\"asc\\" | \\"desc\\" | undefined;

  @Field(_type => SortOrder, {
    nullable: true
  })
  floatField?: \\"asc\\" | \\"desc\\" | undefined;

  @Field(_type => RenamedSecondModelOrderByRelationAggregateInput, {
    nullable: true
  })
  secondModelsField?: RenamedSecondModelOrderByRelationAggregateInput | undefined;
}
"
`;

exports[`inputs when model is renamed should properly generate input type classes for filtering models by many to many relation fields: RenamedFirstModelScalarWhereInput 1`] = `
"import { Args, ArgsType, Context, Field, Float, ID, Info, InputType, Int, Mutation, ObjectType, Query, ResolveField, Resolver, Root, registerEnumType } from \\"@nestjs/graphql\\";
import * as GraphQLScalars from \\"graphql-scalars\\";
import { Prisma } from \\"../../../../helpers/prisma-client-mock\\";
import { DecimalJSScalar } from \\"../../scalars\\";
import { FloatFilter } from \\"../inputs/FloatFilter\\";
import { IntFilter } from \\"../inputs/IntFilter\\";
import { StringFilter } from \\"../inputs/StringFilter\\";

@InputType(\\"RenamedFirstModelScalarWhereInput\\", {
  isAbstract: true
})
export class RenamedFirstModelScalarWhereInput {
  @Field(_type => [RenamedFirstModelScalarWhereInput], {
    nullable: true
  })
  AND?: RenamedFirstModelScalarWhereInput[] | undefined;

  @Field(_type => [RenamedFirstModelScalarWhereInput], {
    nullable: true
  })
  OR?: RenamedFirstModelScalarWhereInput[] | undefined;

  @Field(_type => [RenamedFirstModelScalarWhereInput], {
    nullable: true
  })
  NOT?: RenamedFirstModelScalarWhereInput[] | undefined;

  @Field(_type => IntFilter, {
    nullable: true
  })
  idField?: IntFilter | undefined;

  @Field(_type => StringFilter, {
    nullable: true
  })
  uniqueStringField?: StringFilter | undefined;

  @Field(_type => FloatFilter, {
    nullable: true
  })
  floatField?: FloatFilter | undefined;
}
"
`;

exports[`inputs when model is renamed should properly generate input type classes for filtering models by many to many relation fields: RenamedFirstModelWhereInput 1`] = `
"import { Args, ArgsType, Context, Field, Float, ID, Info, InputType, Int, Mutation, ObjectType, Query, ResolveField, Resolver, Root, registerEnumType } from \\"@nestjs/graphql\\";
import * as GraphQLScalars from \\"graphql-scalars\\";
import { Prisma } from \\"../../../../helpers/prisma-client-mock\\";
import { DecimalJSScalar } from \\"../../scalars\\";
import { FloatFilter } from \\"../inputs/FloatFilter\\";
import { IntFilter } from \\"../inputs/IntFilter\\";
import { RenamedSecondModelListRelationFilter } from \\"../inputs/RenamedSecondModelListRelationFilter\\";
import { StringFilter } from \\"../inputs/StringFilter\\";

@InputType(\\"RenamedFirstModelWhereInput\\", {
  isAbstract: true
})
export class RenamedFirstModelWhereInput {
  @Field(_type => [RenamedFirstModelWhereInput], {
    nullable: true
  })
  AND?: RenamedFirstModelWhereInput[] | undefined;

  @Field(_type => [RenamedFirstModelWhereInput], {
    nullable: true
  })
  OR?: RenamedFirstModelWhereInput[] | undefined;

  @Field(_type => [RenamedFirstModelWhereInput], {
    nullable: true
  })
  NOT?: RenamedFirstModelWhereInput[] | undefined;

  @Field(_type => IntFilter, {
    nullable: true
  })
  idField?: IntFilter | undefined;

  @Field(_type => StringFilter, {
    nullable: true
  })
  uniqueStringField?: StringFilter | undefined;

  @Field(_type => FloatFilter, {
    nullable: true
  })
  floatField?: FloatFilter | undefined;

  @Field(_type => RenamedSecondModelListRelationFilter, {
    nullable: true
  })
  secondModelsField?: RenamedSecondModelListRelationFilter | undefined;
}
"
`;

exports[`inputs when model is renamed should properly generate input type classes for filtering models by many to many relation fields: RenamedFirstModelWhereUniqueInput 1`] = `
"import { Args, ArgsType, Context, Field, Float, ID, Info, InputType, Int, Mutation, ObjectType, Query, ResolveField, Resolver, Root, registerEnumType } from \\"@nestjs/graphql\\";
import * as GraphQLScalars from \\"graphql-scalars\\";
import { Prisma } from \\"../../../../helpers/prisma-client-mock\\";
import { DecimalJSScalar } from \\"../../scalars\\";

@InputType(\\"RenamedFirstModelWhereUniqueInput\\", {
  isAbstract: true
})
export class RenamedFirstModelWhereUniqueInput {
  @Field(_type => Int, {
    nullable: true
  })
  idField?: number | undefined;

  @Field(_type => String, {
    nullable: true
  })
  uniqueStringField?: string | undefined;
}
"
`;

exports[`inputs when model is renamed should properly generate input type classes for filtering models by many to many relation fields: index 1`] = `
"export { FloatFieldUpdateOperationsInput } from \\"./FloatFieldUpdateOperationsInput\\";
export { FloatFilter } from \\"./FloatFilter\\";
export { FloatWithAggregatesFilter } from \\"./FloatWithAggregatesFilter\\";
export { IntFieldUpdateOperationsInput } from \\"./IntFieldUpdateOperationsInput\\";
export { IntFilter } from \\"./IntFilter\\";
export { IntWithAggregatesFilter } from \\"./IntWithAggregatesFilter\\";
export { NestedFloatFilter } from \\"./NestedFloatFilter\\";
export { NestedFloatWithAggregatesFilter } from \\"./NestedFloatWithAggregatesFilter\\";
export { NestedIntFilter } from \\"./NestedIntFilter\\";
export { NestedIntWithAggregatesFilter } from \\"./NestedIntWithAggregatesFilter\\";
export { NestedStringFilter } from \\"./NestedStringFilter\\";
export { NestedStringWithAggregatesFilter } from \\"./NestedStringWithAggregatesFilter\\";
export { RenamedFirstModelAvgOrderByAggregateInput } from \\"./RenamedFirstModelAvgOrderByAggregateInput\\";
export { RenamedFirstModelCountOrderByAggregateInput } from \\"./RenamedFirstModelCountOrderByAggregateInput\\";
export { RenamedFirstModelCreateInput } from \\"./RenamedFirstModelCreateInput\\";
export { RenamedFirstModelCreateManyInput } from \\"./RenamedFirstModelCreateManyInput\\";
export { RenamedFirstModelCreateNestedManyWithoutSecondModelsFieldInput } from \\"./RenamedFirstModelCreateNestedManyWithoutSecondModelsFieldInput\\";
export { RenamedFirstModelCreateOrConnectWithoutSecondModelsFieldInput } from \\"./RenamedFirstModelCreateOrConnectWithoutSecondModelsFieldInput\\";
export { RenamedFirstModelCreateWithoutSecondModelsFieldInput } from \\"./RenamedFirstModelCreateWithoutSecondModelsFieldInput\\";
export { RenamedFirstModelListRelationFilter } from \\"./RenamedFirstModelListRelationFilter\\";
export { RenamedFirstModelMaxOrderByAggregateInput } from \\"./RenamedFirstModelMaxOrderByAggregateInput\\";
export { RenamedFirstModelMinOrderByAggregateInput } from \\"./RenamedFirstModelMinOrderByAggregateInput\\";
export { RenamedFirstModelOrderByRelationAggregateInput } from \\"./RenamedFirstModelOrderByRelationAggregateInput\\";
export { RenamedFirstModelOrderByWithAggregationInput } from \\"./RenamedFirstModelOrderByWithAggregationInput\\";
export { RenamedFirstModelOrderByWithRelationInput } from \\"./RenamedFirstModelOrderByWithRelationInput\\";
export { RenamedFirstModelScalarWhereInput } from \\"./RenamedFirstModelScalarWhereInput\\";
export { RenamedFirstModelScalarWhereWithAggregatesInput } from \\"./RenamedFirstModelScalarWhereWithAggregatesInput\\";
export { RenamedFirstModelSumOrderByAggregateInput } from \\"./RenamedFirstModelSumOrderByAggregateInput\\";
export { RenamedFirstModelUpdateInput } from \\"./RenamedFirstModelUpdateInput\\";
export { RenamedFirstModelUpdateManyMutationInput } from \\"./RenamedFirstModelUpdateManyMutationInput\\";
export { RenamedFirstModelUpdateManyWithWhereWithoutSecondModelsFieldInput } from \\"./RenamedFirstModelUpdateManyWithWhereWithoutSecondModelsFieldInput\\";
export { RenamedFirstModelUpdateManyWithoutSecondModelsFieldNestedInput } from \\"./RenamedFirstModelUpdateManyWithoutSecondModelsFieldNestedInput\\";
export { RenamedFirstModelUpdateWithWhereUniqueWithoutSecondModelsFieldInput } from \\"./RenamedFirstModelUpdateWithWhereUniqueWithoutSecondModelsFieldInput\\";
export { RenamedFirstModelUpdateWithoutSecondModelsFieldInput } from \\"./RenamedFirstModelUpdateWithoutSecondModelsFieldInput\\";
export { RenamedFirstModelUpsertWithWhereUniqueWithoutSecondModelsFieldInput } from \\"./RenamedFirstModelUpsertWithWhereUniqueWithoutSecondModelsFieldInput\\";
export { RenamedFirstModelWhereInput } from \\"./RenamedFirstModelWhereInput\\";
export { RenamedFirstModelWhereUniqueInput } from \\"./RenamedFirstModelWhereUniqueInput\\";
export { RenamedSecondModelAvgOrderByAggregateInput } from \\"./RenamedSecondModelAvgOrderByAggregateInput\\";
export { RenamedSecondModelCountOrderByAggregateInput } from \\"./RenamedSecondModelCountOrderByAggregateInput\\";
export { RenamedSecondModelCreateInput } from \\"./RenamedSecondModelCreateInput\\";
export { RenamedSecondModelCreateManyInput } from \\"./RenamedSecondModelCreateManyInput\\";
export { RenamedSecondModelCreateNestedManyWithoutFirstModelsFieldInput } from \\"./RenamedSecondModelCreateNestedManyWithoutFirstModelsFieldInput\\";
export { RenamedSecondModelCreateOrConnectWithoutFirstModelsFieldInput } from \\"./RenamedSecondModelCreateOrConnectWithoutFirstModelsFieldInput\\";
export { RenamedSecondModelCreateWithoutFirstModelsFieldInput } from \\"./RenamedSecondModelCreateWithoutFirstModelsFieldInput\\";
export { RenamedSecondModelListRelationFilter } from \\"./RenamedSecondModelListRelationFilter\\";
export { RenamedSecondModelMaxOrderByAggregateInput } from \\"./RenamedSecondModelMaxOrderByAggregateInput\\";
export { RenamedSecondModelMinOrderByAggregateInput } from \\"./RenamedSecondModelMinOrderByAggregateInput\\";
export { RenamedSecondModelOrderByRelationAggregateInput } from \\"./RenamedSecondModelOrderByRelationAggregateInput\\";
export { RenamedSecondModelOrderByWithAggregationInput } from \\"./RenamedSecondModelOrderByWithAggregationInput\\";
export { RenamedSecondModelOrderByWithRelationInput } from \\"./RenamedSecondModelOrderByWithRelationInput\\";
export { RenamedSecondModelScalarWhereInput } from \\"./RenamedSecondModelScalarWhereInput\\";
export { RenamedSecondModelScalarWhereWithAggregatesInput } from \\"./RenamedSecondModelScalarWhereWithAggregatesInput\\";
export { RenamedSecondModelSumOrderByAggregateInput } from \\"./RenamedSecondModelSumOrderByAggregateInput\\";
export { RenamedSecondModelUpdateInput } from \\"./RenamedSecondModelUpdateInput\\";
export { RenamedSecondModelUpdateManyMutationInput } from \\"./RenamedSecondModelUpdateManyMutationInput\\";
export { RenamedSecondModelUpdateManyWithWhereWithoutFirstModelsFieldInput } from \\"./RenamedSecondModelUpdateManyWithWhereWithoutFirstModelsFieldInput\\";
export { RenamedSecondModelUpdateManyWithoutFirstModelsFieldNestedInput } from \\"./RenamedSecondModelUpdateManyWithoutFirstModelsFieldNestedInput\\";
export { RenamedSecondModelUpdateWithWhereUniqueWithoutFirstModelsFieldInput } from \\"./RenamedSecondModelUpdateWithWhereUniqueWithoutFirstModelsFieldInput\\";
export { RenamedSecondModelUpdateWithoutFirstModelsFieldInput } from \\"./RenamedSecondModelUpdateWithoutFirstModelsFieldInput\\";
export { RenamedSecondModelUpsertWithWhereUniqueWithoutFirstModelsFieldInput } from \\"./RenamedSecondModelUpsertWithWhereUniqueWithoutFirstModelsFieldInput\\";
export { RenamedSecondModelWhereInput } from \\"./RenamedSecondModelWhereInput\\";
export { RenamedSecondModelWhereUniqueInput } from \\"./RenamedSecondModelWhereUniqueInput\\";
export { StringFieldUpdateOperationsInput } from \\"./StringFieldUpdateOperationsInput\\";
export { StringFilter } from \\"./StringFilter\\";
export { StringWithAggregatesFilter } from \\"./StringWithAggregatesFilter\\";
"
`;

exports[`inputs when model is renamed should properly generate input type classes for filtering models by one to many relation fields: RenamedFirstModelOrderByWithRelationInput 1`] = `
"import { Args, ArgsType, Context, Field, Float, ID, Info, InputType, Int, Mutation, ObjectType, Query, ResolveField, Resolver, Root, registerEnumType } from \\"@nestjs/graphql\\";
import * as GraphQLScalars from \\"graphql-scalars\\";
import { Prisma } from \\"../../../../helpers/prisma-client-mock\\";
import { DecimalJSScalar } from \\"../../scalars\\";
import { RenamedSecondModelOrderByRelationAggregateInput } from \\"../inputs/RenamedSecondModelOrderByRelationAggregateInput\\";
import { SortOrder } from \\"../../enums/SortOrder\\";

@InputType(\\"RenamedFirstModelOrderByWithRelationInput\\", {
  isAbstract: true
})
export class RenamedFirstModelOrderByWithRelationInput {
  @Field(_type => SortOrder, {
    nullable: true
  })
  idField?: \\"asc\\" | \\"desc\\" | undefined;

  @Field(_type => SortOrder, {
    nullable: true
  })
  uniqueStringField?: \\"asc\\" | \\"desc\\" | undefined;

  @Field(_type => SortOrder, {
    nullable: true
  })
  floatField?: \\"asc\\" | \\"desc\\" | undefined;

  @Field(_type => RenamedSecondModelOrderByRelationAggregateInput, {
    nullable: true
  })
  secondModelsField?: RenamedSecondModelOrderByRelationAggregateInput | undefined;
}
"
`;

exports[`inputs when model is renamed should properly generate input type classes for filtering models by one to many relation fields: RenamedFirstModelRelationFilter 1`] = `
"import { Args, ArgsType, Context, Field, Float, ID, Info, InputType, Int, Mutation, ObjectType, Query, ResolveField, Resolver, Root, registerEnumType } from \\"@nestjs/graphql\\";
import * as GraphQLScalars from \\"graphql-scalars\\";
import { Prisma } from \\"../../../../helpers/prisma-client-mock\\";
import { DecimalJSScalar } from \\"../../scalars\\";
import { RenamedFirstModelWhereInput } from \\"../inputs/RenamedFirstModelWhereInput\\";

@InputType(\\"RenamedFirstModelRelationFilter\\", {
  isAbstract: true
})
export class RenamedFirstModelRelationFilter {
  @Field(_type => RenamedFirstModelWhereInput, {
    nullable: true
  })
  is?: RenamedFirstModelWhereInput | undefined;

  @Field(_type => RenamedFirstModelWhereInput, {
    nullable: true
  })
  isNot?: RenamedFirstModelWhereInput | undefined;
}
"
`;

exports[`inputs when model is renamed should properly generate input type classes for filtering models by one to many relation fields: RenamedFirstModelWhereInput 1`] = `
"import { Args, ArgsType, Context, Field, Float, ID, Info, InputType, Int, Mutation, ObjectType, Query, ResolveField, Resolver, Root, registerEnumType } from \\"@nestjs/graphql\\";
import * as GraphQLScalars from \\"graphql-scalars\\";
import { Prisma } from \\"../../../../helpers/prisma-client-mock\\";
import { DecimalJSScalar } from \\"../../scalars\\";
import { FloatFilter } from \\"../inputs/FloatFilter\\";
import { IntFilter } from \\"../inputs/IntFilter\\";
import { RenamedSecondModelListRelationFilter } from \\"../inputs/RenamedSecondModelListRelationFilter\\";
import { StringFilter } from \\"../inputs/StringFilter\\";

@InputType(\\"RenamedFirstModelWhereInput\\", {
  isAbstract: true
})
export class RenamedFirstModelWhereInput {
  @Field(_type => [RenamedFirstModelWhereInput], {
    nullable: true
  })
  AND?: RenamedFirstModelWhereInput[] | undefined;

  @Field(_type => [RenamedFirstModelWhereInput], {
    nullable: true
  })
  OR?: RenamedFirstModelWhereInput[] | undefined;

  @Field(_type => [RenamedFirstModelWhereInput], {
    nullable: true
  })
  NOT?: RenamedFirstModelWhereInput[] | undefined;

  @Field(_type => IntFilter, {
    nullable: true
  })
  idField?: IntFilter | undefined;

  @Field(_type => StringFilter, {
    nullable: true
  })
  uniqueStringField?: StringFilter | undefined;

  @Field(_type => FloatFilter, {
    nullable: true
  })
  floatField?: FloatFilter | undefined;

  @Field(_type => RenamedSecondModelListRelationFilter, {
    nullable: true
  })
  secondModelsField?: RenamedSecondModelListRelationFilter | undefined;
}
"
`;

exports[`inputs when model is renamed should properly generate input type classes for filtering models by one to many relation fields: RenamedFirstModelWhereUniqueInput 1`] = `
"import { Args, ArgsType, Context, Field, Float, ID, Info, InputType, Int, Mutation, ObjectType, Query, ResolveField, Resolver, Root, registerEnumType } from \\"@nestjs/graphql\\";
import * as GraphQLScalars from \\"graphql-scalars\\";
import { Prisma } from \\"../../../../helpers/prisma-client-mock\\";
import { DecimalJSScalar } from \\"../../scalars\\";

@InputType(\\"RenamedFirstModelWhereUniqueInput\\", {
  isAbstract: true
})
export class RenamedFirstModelWhereUniqueInput {
  @Field(_type => Int, {
    nullable: true
  })
  idField?: number | undefined;

  @Field(_type => String, {
    nullable: true
  })
  uniqueStringField?: string | undefined;
}
"
`;

exports[`inputs when model is renamed should properly generate input type classes for filtering models by one to many relation fields: RenamedSecondModelListRelationFilter 1`] = `
"import { Args, ArgsType, Context, Field, Float, ID, Info, InputType, Int, Mutation, ObjectType, Query, ResolveField, Resolver, Root, registerEnumType } from \\"@nestjs/graphql\\";
import * as GraphQLScalars from \\"graphql-scalars\\";
import { Prisma } from \\"../../../../helpers/prisma-client-mock\\";
import { DecimalJSScalar } from \\"../../scalars\\";
import { RenamedSecondModelWhereInput } from \\"../inputs/RenamedSecondModelWhereInput\\";

@InputType(\\"RenamedSecondModelListRelationFilter\\", {
  isAbstract: true
})
export class RenamedSecondModelListRelationFilter {
  @Field(_type => RenamedSecondModelWhereInput, {
    nullable: true
  })
  every?: RenamedSecondModelWhereInput | undefined;

  @Field(_type => RenamedSecondModelWhereInput, {
    nullable: true
  })
  some?: RenamedSecondModelWhereInput | undefined;

  @Field(_type => RenamedSecondModelWhereInput, {
    nullable: true
  })
  none?: RenamedSecondModelWhereInput | undefined;
}
"
`;

exports[`inputs when model is renamed should properly generate input type classes for filtering models by one to many relation fields: RenamedSecondModelOrderByWithRelationInput 1`] = `
"import { Args, ArgsType, Context, Field, Float, ID, Info, InputType, Int, Mutation, ObjectType, Query, ResolveField, Resolver, Root, registerEnumType } from \\"@nestjs/graphql\\";
import * as GraphQLScalars from \\"graphql-scalars\\";
import { Prisma } from \\"../../../../helpers/prisma-client-mock\\";
import { DecimalJSScalar } from \\"../../scalars\\";
import { RenamedFirstModelOrderByWithRelationInput } from \\"../inputs/RenamedFirstModelOrderByWithRelationInput\\";
import { SortOrder } from \\"../../enums/SortOrder\\";

@InputType(\\"RenamedSecondModelOrderByWithRelationInput\\", {
  isAbstract: true
})
export class RenamedSecondModelOrderByWithRelationInput {
  @Field(_type => SortOrder, {
    nullable: true
  })
  idField?: \\"asc\\" | \\"desc\\" | undefined;

  @Field(_type => SortOrder, {
    nullable: true
  })
  uniqueStringField?: \\"asc\\" | \\"desc\\" | undefined;

  @Field(_type => SortOrder, {
    nullable: true
  })
  floatField?: \\"asc\\" | \\"desc\\" | undefined;

  @Field(_type => SortOrder, {
    nullable: true
  })
  firstModelFieldId?: \\"asc\\" | \\"desc\\" | undefined;

  @Field(_type => RenamedFirstModelOrderByWithRelationInput, {
    nullable: true
  })
  firstModelField?: RenamedFirstModelOrderByWithRelationInput | undefined;
}
"
`;

exports[`inputs when model is renamed should properly generate input type classes for filtering models by one to many relation fields: RenamedSecondModelScalarWhereInput 1`] = `
"import { Args, ArgsType, Context, Field, Float, ID, Info, InputType, Int, Mutation, ObjectType, Query, ResolveField, Resolver, Root, registerEnumType } from \\"@nestjs/graphql\\";
import * as GraphQLScalars from \\"graphql-scalars\\";
import { Prisma } from \\"../../../../helpers/prisma-client-mock\\";
import { DecimalJSScalar } from \\"../../scalars\\";
import { FloatFilter } from \\"../inputs/FloatFilter\\";
import { IntFilter } from \\"../inputs/IntFilter\\";
import { StringFilter } from \\"../inputs/StringFilter\\";

@InputType(\\"RenamedSecondModelScalarWhereInput\\", {
  isAbstract: true
})
export class RenamedSecondModelScalarWhereInput {
  @Field(_type => [RenamedSecondModelScalarWhereInput], {
    nullable: true
  })
  AND?: RenamedSecondModelScalarWhereInput[] | undefined;

  @Field(_type => [RenamedSecondModelScalarWhereInput], {
    nullable: true
  })
  OR?: RenamedSecondModelScalarWhereInput[] | undefined;

  @Field(_type => [RenamedSecondModelScalarWhereInput], {
    nullable: true
  })
  NOT?: RenamedSecondModelScalarWhereInput[] | undefined;

  @Field(_type => IntFilter, {
    nullable: true
  })
  idField?: IntFilter | undefined;

  @Field(_type => StringFilter, {
    nullable: true
  })
  uniqueStringField?: StringFilter | undefined;

  @Field(_type => FloatFilter, {
    nullable: true
  })
  floatField?: FloatFilter | undefined;

  @Field(_type => IntFilter, {
    nullable: true
  })
  firstModelFieldId?: IntFilter | undefined;
}
"
`;

exports[`inputs when model is renamed should properly generate input type classes for filtering models by one to many relation fields: RenamedSecondModelWhereInput 1`] = `
"import { Args, ArgsType, Context, Field, Float, ID, Info, InputType, Int, Mutation, ObjectType, Query, ResolveField, Resolver, Root, registerEnumType } from \\"@nestjs/graphql\\";
import * as GraphQLScalars from \\"graphql-scalars\\";
import { Prisma } from \\"../../../../helpers/prisma-client-mock\\";
import { DecimalJSScalar } from \\"../../scalars\\";
import { FloatFilter } from \\"../inputs/FloatFilter\\";
import { IntFilter } from \\"../inputs/IntFilter\\";
import { RenamedFirstModelRelationFilter } from \\"../inputs/RenamedFirstModelRelationFilter\\";
import { StringFilter } from \\"../inputs/StringFilter\\";

@InputType(\\"RenamedSecondModelWhereInput\\", {
  isAbstract: true
})
export class RenamedSecondModelWhereInput {
  @Field(_type => [RenamedSecondModelWhereInput], {
    nullable: true
  })
  AND?: RenamedSecondModelWhereInput[] | undefined;

  @Field(_type => [RenamedSecondModelWhereInput], {
    nullable: true
  })
  OR?: RenamedSecondModelWhereInput[] | undefined;

  @Field(_type => [RenamedSecondModelWhereInput], {
    nullable: true
  })
  NOT?: RenamedSecondModelWhereInput[] | undefined;

  @Field(_type => IntFilter, {
    nullable: true
  })
  idField?: IntFilter | undefined;

  @Field(_type => StringFilter, {
    nullable: true
  })
  uniqueStringField?: StringFilter | undefined;

  @Field(_type => FloatFilter, {
    nullable: true
  })
  floatField?: FloatFilter | undefined;

  @Field(_type => IntFilter, {
    nullable: true
  })
  firstModelFieldId?: IntFilter | undefined;

  @Field(_type => RenamedFirstModelRelationFilter, {
    nullable: true
  })
  firstModelField?: RenamedFirstModelRelationFilter | undefined;
}
"
`;

exports[`inputs when model is renamed should properly generate input type classes for filtering models by one to many relation fields: RenamedSecondModelWhereUniqueInput 1`] = `
"import { Args, ArgsType, Context, Field, Float, ID, Info, InputType, Int, Mutation, ObjectType, Query, ResolveField, Resolver, Root, registerEnumType } from \\"@nestjs/graphql\\";
import * as GraphQLScalars from \\"graphql-scalars\\";
import { Prisma } from \\"../../../../helpers/prisma-client-mock\\";
import { DecimalJSScalar } from \\"../../scalars\\";

@InputType(\\"RenamedSecondModelWhereUniqueInput\\", {
  isAbstract: true
})
export class RenamedSecondModelWhereUniqueInput {
  @Field(_type => Int, {
    nullable: true
  })
  idField?: number | undefined;

  @Field(_type => String, {
    nullable: true
  })
  uniqueStringField?: string | undefined;
}
"
`;

exports[`inputs when model is renamed should properly generate input type classes for filtering models by one to many relation fields: index 1`] = `
"export { FloatFieldUpdateOperationsInput } from \\"./FloatFieldUpdateOperationsInput\\";
export { FloatFilter } from \\"./FloatFilter\\";
export { FloatWithAggregatesFilter } from \\"./FloatWithAggregatesFilter\\";
export { IntFieldUpdateOperationsInput } from \\"./IntFieldUpdateOperationsInput\\";
export { IntFilter } from \\"./IntFilter\\";
export { IntWithAggregatesFilter } from \\"./IntWithAggregatesFilter\\";
export { NestedFloatFilter } from \\"./NestedFloatFilter\\";
export { NestedFloatWithAggregatesFilter } from \\"./NestedFloatWithAggregatesFilter\\";
export { NestedIntFilter } from \\"./NestedIntFilter\\";
export { NestedIntWithAggregatesFilter } from \\"./NestedIntWithAggregatesFilter\\";
export { NestedStringFilter } from \\"./NestedStringFilter\\";
export { NestedStringWithAggregatesFilter } from \\"./NestedStringWithAggregatesFilter\\";
export { RenamedFirstModelAvgOrderByAggregateInput } from \\"./RenamedFirstModelAvgOrderByAggregateInput\\";
export { RenamedFirstModelCountOrderByAggregateInput } from \\"./RenamedFirstModelCountOrderByAggregateInput\\";
export { RenamedFirstModelCreateInput } from \\"./RenamedFirstModelCreateInput\\";
export { RenamedFirstModelCreateManyInput } from \\"./RenamedFirstModelCreateManyInput\\";
export { RenamedFirstModelCreateNestedOneWithoutSecondModelsFieldInput } from \\"./RenamedFirstModelCreateNestedOneWithoutSecondModelsFieldInput\\";
export { RenamedFirstModelCreateOrConnectWithoutSecondModelsFieldInput } from \\"./RenamedFirstModelCreateOrConnectWithoutSecondModelsFieldInput\\";
export { RenamedFirstModelCreateWithoutSecondModelsFieldInput } from \\"./RenamedFirstModelCreateWithoutSecondModelsFieldInput\\";
export { RenamedFirstModelMaxOrderByAggregateInput } from \\"./RenamedFirstModelMaxOrderByAggregateInput\\";
export { RenamedFirstModelMinOrderByAggregateInput } from \\"./RenamedFirstModelMinOrderByAggregateInput\\";
export { RenamedFirstModelOrderByWithAggregationInput } from \\"./RenamedFirstModelOrderByWithAggregationInput\\";
export { RenamedFirstModelOrderByWithRelationInput } from \\"./RenamedFirstModelOrderByWithRelationInput\\";
export { RenamedFirstModelRelationFilter } from \\"./RenamedFirstModelRelationFilter\\";
export { RenamedFirstModelScalarWhereWithAggregatesInput } from \\"./RenamedFirstModelScalarWhereWithAggregatesInput\\";
export { RenamedFirstModelSumOrderByAggregateInput } from \\"./RenamedFirstModelSumOrderByAggregateInput\\";
export { RenamedFirstModelUpdateInput } from \\"./RenamedFirstModelUpdateInput\\";
export { RenamedFirstModelUpdateManyMutationInput } from \\"./RenamedFirstModelUpdateManyMutationInput\\";
export { RenamedFirstModelUpdateOneRequiredWithoutSecondModelsFieldNestedInput } from \\"./RenamedFirstModelUpdateOneRequiredWithoutSecondModelsFieldNestedInput\\";
export { RenamedFirstModelUpdateWithoutSecondModelsFieldInput } from \\"./RenamedFirstModelUpdateWithoutSecondModelsFieldInput\\";
export { RenamedFirstModelUpsertWithoutSecondModelsFieldInput } from \\"./RenamedFirstModelUpsertWithoutSecondModelsFieldInput\\";
export { RenamedFirstModelWhereInput } from \\"./RenamedFirstModelWhereInput\\";
export { RenamedFirstModelWhereUniqueInput } from \\"./RenamedFirstModelWhereUniqueInput\\";
export { RenamedSecondModelAvgOrderByAggregateInput } from \\"./RenamedSecondModelAvgOrderByAggregateInput\\";
export { RenamedSecondModelCountOrderByAggregateInput } from \\"./RenamedSecondModelCountOrderByAggregateInput\\";
export { RenamedSecondModelCreateInput } from \\"./RenamedSecondModelCreateInput\\";
export { RenamedSecondModelCreateManyFirstModelFieldInput } from \\"./RenamedSecondModelCreateManyFirstModelFieldInput\\";
export { RenamedSecondModelCreateManyFirstModelFieldInputEnvelope } from \\"./RenamedSecondModelCreateManyFirstModelFieldInputEnvelope\\";
export { RenamedSecondModelCreateManyInput } from \\"./RenamedSecondModelCreateManyInput\\";
export { RenamedSecondModelCreateNestedManyWithoutFirstModelFieldInput } from \\"./RenamedSecondModelCreateNestedManyWithoutFirstModelFieldInput\\";
export { RenamedSecondModelCreateOrConnectWithoutFirstModelFieldInput } from \\"./RenamedSecondModelCreateOrConnectWithoutFirstModelFieldInput\\";
export { RenamedSecondModelCreateWithoutFirstModelFieldInput } from \\"./RenamedSecondModelCreateWithoutFirstModelFieldInput\\";
export { RenamedSecondModelListRelationFilter } from \\"./RenamedSecondModelListRelationFilter\\";
export { RenamedSecondModelMaxOrderByAggregateInput } from \\"./RenamedSecondModelMaxOrderByAggregateInput\\";
export { RenamedSecondModelMinOrderByAggregateInput } from \\"./RenamedSecondModelMinOrderByAggregateInput\\";
export { RenamedSecondModelOrderByRelationAggregateInput } from \\"./RenamedSecondModelOrderByRelationAggregateInput\\";
export { RenamedSecondModelOrderByWithAggregationInput } from \\"./RenamedSecondModelOrderByWithAggregationInput\\";
export { RenamedSecondModelOrderByWithRelationInput } from \\"./RenamedSecondModelOrderByWithRelationInput\\";
export { RenamedSecondModelScalarWhereInput } from \\"./RenamedSecondModelScalarWhereInput\\";
export { RenamedSecondModelScalarWhereWithAggregatesInput } from \\"./RenamedSecondModelScalarWhereWithAggregatesInput\\";
export { RenamedSecondModelSumOrderByAggregateInput } from \\"./RenamedSecondModelSumOrderByAggregateInput\\";
export { RenamedSecondModelUpdateInput } from \\"./RenamedSecondModelUpdateInput\\";
export { RenamedSecondModelUpdateManyMutationInput } from \\"./RenamedSecondModelUpdateManyMutationInput\\";
export { RenamedSecondModelUpdateManyWithWhereWithoutFirstModelFieldInput } from \\"./RenamedSecondModelUpdateManyWithWhereWithoutFirstModelFieldInput\\";
export { RenamedSecondModelUpdateManyWithoutFirstModelFieldNestedInput } from \\"./RenamedSecondModelUpdateManyWithoutFirstModelFieldNestedInput\\";
export { RenamedSecondModelUpdateWithWhereUniqueWithoutFirstModelFieldInput } from \\"./RenamedSecondModelUpdateWithWhereUniqueWithoutFirstModelFieldInput\\";
export { RenamedSecondModelUpdateWithoutFirstModelFieldInput } from \\"./RenamedSecondModelUpdateWithoutFirstModelFieldInput\\";
export { RenamedSecondModelUpsertWithWhereUniqueWithoutFirstModelFieldInput } from \\"./RenamedSecondModelUpsertWithWhereUniqueWithoutFirstModelFieldInput\\";
export { RenamedSecondModelWhereInput } from \\"./RenamedSecondModelWhereInput\\";
export { RenamedSecondModelWhereUniqueInput } from \\"./RenamedSecondModelWhereUniqueInput\\";
export { StringFieldUpdateOperationsInput } from \\"./StringFieldUpdateOperationsInput\\";
export { StringFilter } from \\"./StringFilter\\";
export { StringWithAggregatesFilter } from \\"./StringWithAggregatesFilter\\";
"
`;

exports[`inputs when model is renamed should properly generate input type classes: ExampleOrderByWithRelationInput 1`] = `
"import { Args, ArgsType, Context, Field, Float, ID, Info, InputType, Int, Mutation, ObjectType, Query, ResolveField, Resolver, Root, registerEnumType } from \\"@nestjs/graphql\\";
import * as GraphQLScalars from \\"graphql-scalars\\";
import { Prisma } from \\"../../../../helpers/prisma-client-mock\\";
import { DecimalJSScalar } from \\"../../scalars\\";
import { OtherModelOrderByWithRelationInput } from \\"../inputs/OtherModelOrderByWithRelationInput\\";
import { SortOrder } from \\"../../enums/SortOrder\\";

@InputType(\\"ExampleOrderByWithRelationInput\\", {
  isAbstract: true
})
export class ExampleOrderByWithRelationInput {
  @Field(_type => SortOrder, {
    nullable: true
  })
  intIdField?: \\"asc\\" | \\"desc\\" | undefined;

  @Field(_type => SortOrder, {
    nullable: true
  })
  stringField?: \\"asc\\" | \\"desc\\" | undefined;

  @Field(_type => SortOrder, {
    nullable: true
  })
  floatField?: \\"asc\\" | \\"desc\\" | undefined;

  @Field(_type => SortOrder, {
    nullable: true
  })
  booleanField?: \\"asc\\" | \\"desc\\" | undefined;

  @Field(_type => SortOrder, {
    nullable: true
  })
  dateField?: \\"asc\\" | \\"desc\\" | undefined;

  @Field(_type => OtherModelOrderByWithRelationInput, {
    nullable: true
  })
  other?: OtherModelOrderByWithRelationInput | undefined;

  @Field(_type => SortOrder, {
    nullable: true
  })
  otherId?: \\"asc\\" | \\"desc\\" | undefined;
}
"
`;

exports[`inputs when model is renamed should properly generate input type classes: ExampleWhereInput 1`] = `
"import { Args, ArgsType, Context, Field, Float, ID, Info, InputType, Int, Mutation, ObjectType, Query, ResolveField, Resolver, Root, registerEnumType } from \\"@nestjs/graphql\\";
import * as GraphQLScalars from \\"graphql-scalars\\";
import { Prisma } from \\"../../../../helpers/prisma-client-mock\\";
import { DecimalJSScalar } from \\"../../scalars\\";
import { BoolFilter } from \\"../inputs/BoolFilter\\";
import { DateTimeFilter } from \\"../inputs/DateTimeFilter\\";
import { FloatFilter } from \\"../inputs/FloatFilter\\";
import { IntFilter } from \\"../inputs/IntFilter\\";
import { OtherModelRelationFilter } from \\"../inputs/OtherModelRelationFilter\\";
import { StringFilter } from \\"../inputs/StringFilter\\";

@InputType(\\"ExampleWhereInput\\", {
  isAbstract: true
})
export class ExampleWhereInput {
  @Field(_type => [ExampleWhereInput], {
    nullable: true
  })
  AND?: ExampleWhereInput[] | undefined;

  @Field(_type => [ExampleWhereInput], {
    nullable: true
  })
  OR?: ExampleWhereInput[] | undefined;

  @Field(_type => [ExampleWhereInput], {
    nullable: true
  })
  NOT?: ExampleWhereInput[] | undefined;

  @Field(_type => IntFilter, {
    nullable: true
  })
  intIdField?: IntFilter | undefined;

  @Field(_type => StringFilter, {
    nullable: true
  })
  stringField?: StringFilter | undefined;

  @Field(_type => FloatFilter, {
    nullable: true
  })
  floatField?: FloatFilter | undefined;

  @Field(_type => BoolFilter, {
    nullable: true
  })
  booleanField?: BoolFilter | undefined;

  @Field(_type => DateTimeFilter, {
    nullable: true
  })
  dateField?: DateTimeFilter | undefined;

  @Field(_type => OtherModelRelationFilter, {
    nullable: true
  })
  other?: OtherModelRelationFilter | undefined;

  @Field(_type => IntFilter, {
    nullable: true
  })
  otherId?: IntFilter | undefined;
}
"
`;

exports[`inputs when model is renamed should properly generate input type classes: ExampleWhereUniqueInput 1`] = `
"import { Args, ArgsType, Context, Field, Float, ID, Info, InputType, Int, Mutation, ObjectType, Query, ResolveField, Resolver, Root, registerEnumType } from \\"@nestjs/graphql\\";
import * as GraphQLScalars from \\"graphql-scalars\\";
import { Prisma } from \\"../../../../helpers/prisma-client-mock\\";
import { DecimalJSScalar } from \\"../../scalars\\";

@InputType(\\"ExampleWhereUniqueInput\\", {
  isAbstract: true
})
export class ExampleWhereUniqueInput {
  @Field(_type => Int, {
    nullable: true
  })
  intIdField?: number | undefined;

  @Field(_type => String, {
    nullable: true
  })
  stringField?: string | undefined;
}
"
`;

exports[`inputs when model is renamed should properly generate input type classes: index 1`] = `
"export { BoolFieldUpdateOperationsInput } from \\"./BoolFieldUpdateOperationsInput\\";
export { BoolFilter } from \\"./BoolFilter\\";
export { BoolWithAggregatesFilter } from \\"./BoolWithAggregatesFilter\\";
export { DateTimeFieldUpdateOperationsInput } from \\"./DateTimeFieldUpdateOperationsInput\\";
export { DateTimeFilter } from \\"./DateTimeFilter\\";
export { DateTimeWithAggregatesFilter } from \\"./DateTimeWithAggregatesFilter\\";
export { ExampleAvgOrderByAggregateInput } from \\"./ExampleAvgOrderByAggregateInput\\";
export { ExampleCountOrderByAggregateInput } from \\"./ExampleCountOrderByAggregateInput\\";
export { ExampleCreateInput } from \\"./ExampleCreateInput\\";
export { ExampleCreateManyInput } from \\"./ExampleCreateManyInput\\";
export { ExampleCreateManyOtherInput } from \\"./ExampleCreateManyOtherInput\\";
export { ExampleCreateManyOtherInputEnvelope } from \\"./ExampleCreateManyOtherInputEnvelope\\";
export { ExampleCreateNestedManyWithoutOtherInput } from \\"./ExampleCreateNestedManyWithoutOtherInput\\";
export { ExampleCreateOrConnectWithoutOtherInput } from \\"./ExampleCreateOrConnectWithoutOtherInput\\";
export { ExampleCreateWithoutOtherInput } from \\"./ExampleCreateWithoutOtherInput\\";
export { ExampleListRelationFilter } from \\"./ExampleListRelationFilter\\";
export { ExampleMaxOrderByAggregateInput } from \\"./ExampleMaxOrderByAggregateInput\\";
export { ExampleMinOrderByAggregateInput } from \\"./ExampleMinOrderByAggregateInput\\";
export { ExampleOrderByRelationAggregateInput } from \\"./ExampleOrderByRelationAggregateInput\\";
export { ExampleOrderByWithAggregationInput } from \\"./ExampleOrderByWithAggregationInput\\";
export { ExampleOrderByWithRelationInput } from \\"./ExampleOrderByWithRelationInput\\";
export { ExampleScalarWhereInput } from \\"./ExampleScalarWhereInput\\";
export { ExampleScalarWhereWithAggregatesInput } from \\"./ExampleScalarWhereWithAggregatesInput\\";
export { ExampleSumOrderByAggregateInput } from \\"./ExampleSumOrderByAggregateInput\\";
export { ExampleUpdateInput } from \\"./ExampleUpdateInput\\";
export { ExampleUpdateManyMutationInput } from \\"./ExampleUpdateManyMutationInput\\";
export { ExampleUpdateManyWithWhereWithoutOtherInput } from \\"./ExampleUpdateManyWithWhereWithoutOtherInput\\";
export { ExampleUpdateManyWithoutOtherNestedInput } from \\"./ExampleUpdateManyWithoutOtherNestedInput\\";
export { ExampleUpdateWithWhereUniqueWithoutOtherInput } from \\"./ExampleUpdateWithWhereUniqueWithoutOtherInput\\";
export { ExampleUpdateWithoutOtherInput } from \\"./ExampleUpdateWithoutOtherInput\\";
export { ExampleUpsertWithWhereUniqueWithoutOtherInput } from \\"./ExampleUpsertWithWhereUniqueWithoutOtherInput\\";
export { ExampleWhereInput } from \\"./ExampleWhereInput\\";
export { ExampleWhereUniqueInput } from \\"./ExampleWhereUniqueInput\\";
export { FloatFieldUpdateOperationsInput } from \\"./FloatFieldUpdateOperationsInput\\";
export { FloatFilter } from \\"./FloatFilter\\";
export { FloatWithAggregatesFilter } from \\"./FloatWithAggregatesFilter\\";
export { IntFieldUpdateOperationsInput } from \\"./IntFieldUpdateOperationsInput\\";
export { IntFilter } from \\"./IntFilter\\";
export { IntWithAggregatesFilter } from \\"./IntWithAggregatesFilter\\";
export { NestedBoolFilter } from \\"./NestedBoolFilter\\";
export { NestedBoolWithAggregatesFilter } from \\"./NestedBoolWithAggregatesFilter\\";
export { NestedDateTimeFilter } from \\"./NestedDateTimeFilter\\";
export { NestedDateTimeWithAggregatesFilter } from \\"./NestedDateTimeWithAggregatesFilter\\";
export { NestedFloatFilter } from \\"./NestedFloatFilter\\";
export { NestedFloatWithAggregatesFilter } from \\"./NestedFloatWithAggregatesFilter\\";
export { NestedIntFilter } from \\"./NestedIntFilter\\";
export { NestedIntWithAggregatesFilter } from \\"./NestedIntWithAggregatesFilter\\";
export { NestedStringFilter } from \\"./NestedStringFilter\\";
export { NestedStringWithAggregatesFilter } from \\"./NestedStringWithAggregatesFilter\\";
export { OtherModelAvgOrderByAggregateInput } from \\"./OtherModelAvgOrderByAggregateInput\\";
export { OtherModelCountOrderByAggregateInput } from \\"./OtherModelCountOrderByAggregateInput\\";
export { OtherModelCreateInput } from \\"./OtherModelCreateInput\\";
export { OtherModelCreateManyInput } from \\"./OtherModelCreateManyInput\\";
export { OtherModelCreateNestedOneWithoutSampleModelInput } from \\"./OtherModelCreateNestedOneWithoutSampleModelInput\\";
export { OtherModelCreateOrConnectWithoutSampleModelInput } from \\"./OtherModelCreateOrConnectWithoutSampleModelInput\\";
export { OtherModelCreateWithoutSampleModelInput } from \\"./OtherModelCreateWithoutSampleModelInput\\";
export { OtherModelMaxOrderByAggregateInput } from \\"./OtherModelMaxOrderByAggregateInput\\";
export { OtherModelMinOrderByAggregateInput } from \\"./OtherModelMinOrderByAggregateInput\\";
export { OtherModelOrderByWithAggregationInput } from \\"./OtherModelOrderByWithAggregationInput\\";
export { OtherModelOrderByWithRelationInput } from \\"./OtherModelOrderByWithRelationInput\\";
export { OtherModelRelationFilter } from \\"./OtherModelRelationFilter\\";
export { OtherModelScalarWhereWithAggregatesInput } from \\"./OtherModelScalarWhereWithAggregatesInput\\";
export { OtherModelSumOrderByAggregateInput } from \\"./OtherModelSumOrderByAggregateInput\\";
export { OtherModelUpdateInput } from \\"./OtherModelUpdateInput\\";
export { OtherModelUpdateManyMutationInput } from \\"./OtherModelUpdateManyMutationInput\\";
export { OtherModelUpdateOneRequiredWithoutSampleModelNestedInput } from \\"./OtherModelUpdateOneRequiredWithoutSampleModelNestedInput\\";
export { OtherModelUpdateWithoutSampleModelInput } from \\"./OtherModelUpdateWithoutSampleModelInput\\";
export { OtherModelUpsertWithoutSampleModelInput } from \\"./OtherModelUpsertWithoutSampleModelInput\\";
export { OtherModelWhereInput } from \\"./OtherModelWhereInput\\";
export { OtherModelWhereUniqueInput } from \\"./OtherModelWhereUniqueInput\\";
export { StringFieldUpdateOperationsInput } from \\"./StringFieldUpdateOperationsInput\\";
export { StringFilter } from \\"./StringFilter\\";
export { StringWithAggregatesFilter } from \\"./StringWithAggregatesFilter\\";
"
`;

exports[`inputs when prisma client is generated into node_modules should properly generate prisma client imports in input type class files: SampleWhereInput 1`] = `
"import { Args, ArgsType, Context, Field, Float, ID, Info, InputType, Int, Mutation, ObjectType, Query, ResolveField, Resolver, Root, registerEnumType } from \\"@nestjs/graphql\\";
import * as GraphQLScalars from \\"graphql-scalars\\";
import { Prisma } from \\"@prisma/client\\";
import { DecimalJSScalar } from \\"../../scalars\\";
import { IntFilter } from \\"../inputs/IntFilter\\";
import { StringFilter } from \\"../inputs/StringFilter\\";

@InputType(\\"SampleWhereInput\\", {
  isAbstract: true
})
export class SampleWhereInput {
  @Field(_type => [SampleWhereInput], {
    nullable: true
  })
  AND?: SampleWhereInput[] | undefined;

  @Field(_type => [SampleWhereInput], {
    nullable: true
  })
  OR?: SampleWhereInput[] | undefined;

  @Field(_type => [SampleWhereInput], {
    nullable: true
  })
  NOT?: SampleWhereInput[] | undefined;

  @Field(_type => IntFilter, {
    nullable: true
  })
  idField?: IntFilter | undefined;

  @Field(_type => StringFilter, {
    nullable: true
  })
  modelFieldName?: StringFilter | undefined;
}
"
`;

exports[`inputs when prisma client is generated into node_modules should properly generate prisma client imports in input type class files: index 1`] = `
"export { IntFieldUpdateOperationsInput } from \\"./IntFieldUpdateOperationsInput\\";
export { IntFilter } from \\"./IntFilter\\";
export { IntWithAggregatesFilter } from \\"./IntWithAggregatesFilter\\";
export { NestedFloatFilter } from \\"./NestedFloatFilter\\";
export { NestedIntFilter } from \\"./NestedIntFilter\\";
export { NestedIntWithAggregatesFilter } from \\"./NestedIntWithAggregatesFilter\\";
export { NestedStringFilter } from \\"./NestedStringFilter\\";
export { NestedStringWithAggregatesFilter } from \\"./NestedStringWithAggregatesFilter\\";
export { SampleAvgOrderByAggregateInput } from \\"./SampleAvgOrderByAggregateInput\\";
export { SampleCountOrderByAggregateInput } from \\"./SampleCountOrderByAggregateInput\\";
export { SampleCreateInput } from \\"./SampleCreateInput\\";
export { SampleCreateManyInput } from \\"./SampleCreateManyInput\\";
export { SampleMaxOrderByAggregateInput } from \\"./SampleMaxOrderByAggregateInput\\";
export { SampleMinOrderByAggregateInput } from \\"./SampleMinOrderByAggregateInput\\";
export { SampleOrderByWithAggregationInput } from \\"./SampleOrderByWithAggregationInput\\";
export { SampleOrderByWithRelationInput } from \\"./SampleOrderByWithRelationInput\\";
export { SampleScalarWhereWithAggregatesInput } from \\"./SampleScalarWhereWithAggregatesInput\\";
export { SampleSumOrderByAggregateInput } from \\"./SampleSumOrderByAggregateInput\\";
export { SampleUpdateInput } from \\"./SampleUpdateInput\\";
export { SampleUpdateManyMutationInput } from \\"./SampleUpdateManyMutationInput\\";
export { SampleWhereInput } from \\"./SampleWhereInput\\";
export { SampleWhereUniqueInput } from \\"./SampleWhereUniqueInput\\";
export { StringFieldUpdateOperationsInput } from \\"./StringFieldUpdateOperationsInput\\";
export { StringFilter } from \\"./StringFilter\\";
export { StringWithAggregatesFilter } from \\"./StringWithAggregatesFilter\\";
"
`;

exports[`inputs when useSimpleInputs config option is set to true should properly generate input type classes for updating scalar fields in postgres schema: SampleModelUpdateInput 1`] = `
"import { Args, ArgsType, Context, Field, Float, ID, Info, InputType, Int, Mutation, ObjectType, Query, ResolveField, Resolver, Root, registerEnumType } from \\"@nestjs/graphql\\";
import * as GraphQLScalars from \\"graphql-scalars\\";
import { Prisma } from \\"../../../../helpers/prisma-client-mock\\";
import { DecimalJSScalar } from \\"../../scalars\\";
import { Color } from \\"../../enums/Color\\";

@InputType(\\"SampleModelUpdateInput\\", {
  isAbstract: true
})
export class SampleModelUpdateInput {
  @Field(_type => String, {
    nullable: true
  })
  stringField?: string | undefined;

  @Field(_type => String, {
    nullable: true
  })
  optionalStringField?: string | undefined;

  @Field(_type => Int, {
    nullable: true
  })
  intField?: number | undefined;

  @Field(_type => Int, {
    nullable: true
  })
  optionalIntField?: number | undefined;

  @Field(_type => Float, {
    nullable: true
  })
  floatField?: number | undefined;

  @Field(_type => Float, {
    nullable: true
  })
  optionalFloatField?: number | undefined;

  @Field(_type => Boolean, {
    nullable: true
  })
  booleanField?: boolean | undefined;

  @Field(_type => Boolean, {
    nullable: true
  })
  optionalBooleanField?: boolean | undefined;

  @Field(_type => Date, {
    nullable: true
  })
  dateField?: Date | undefined;

  @Field(_type => Date, {
    nullable: true
  })
  optionalDateField?: Date | undefined;

  @Field(_type => GraphQLScalars.JSONResolver, {
    nullable: true
  })
  jsonField?: Prisma.InputJsonValue | undefined;

  @Field(_type => GraphQLScalars.JSONResolver, {
    nullable: true
  })
  optionalJsonField?: Prisma.InputJsonValue | undefined;

  @Field(_type => Color, {
    nullable: true
  })
  enumField?: \\"RED\\" | \\"GREEN\\" | \\"BLUE\\" | undefined;

  @Field(_type => Color, {
    nullable: true
  })
  optionalEnumField?: \\"RED\\" | \\"GREEN\\" | \\"BLUE\\" | undefined;

  @Field(_type => [Int], {
    nullable: true
  })
  intArrayField?: number[] | undefined;

  @Field(_type => [String], {
    nullable: true
  })
  stringArrayField?: string[] | undefined;
}
"
`;

exports[`inputs when useSimpleInputs config option is set to true should properly generate input type classes for updating scalar fields in postgres schema: SampleModelUpdateManyMutationInput 1`] = `
"import { Args, ArgsType, Context, Field, Float, ID, Info, InputType, Int, Mutation, ObjectType, Query, ResolveField, Resolver, Root, registerEnumType } from \\"@nestjs/graphql\\";
import * as GraphQLScalars from \\"graphql-scalars\\";
import { Prisma } from \\"../../../../helpers/prisma-client-mock\\";
import { DecimalJSScalar } from \\"../../scalars\\";
import { Color } from \\"../../enums/Color\\";

@InputType(\\"SampleModelUpdateManyMutationInput\\", {
  isAbstract: true
})
export class SampleModelUpdateManyMutationInput {
  @Field(_type => String, {
    nullable: true
  })
  stringField?: string | undefined;

  @Field(_type => String, {
    nullable: true
  })
  optionalStringField?: string | undefined;

  @Field(_type => Int, {
    nullable: true
  })
  intField?: number | undefined;

  @Field(_type => Int, {
    nullable: true
  })
  optionalIntField?: number | undefined;

  @Field(_type => Float, {
    nullable: true
  })
  floatField?: number | undefined;

  @Field(_type => Float, {
    nullable: true
  })
  optionalFloatField?: number | undefined;

  @Field(_type => Boolean, {
    nullable: true
  })
  booleanField?: boolean | undefined;

  @Field(_type => Boolean, {
    nullable: true
  })
  optionalBooleanField?: boolean | undefined;

  @Field(_type => Date, {
    nullable: true
  })
  dateField?: Date | undefined;

  @Field(_type => Date, {
    nullable: true
  })
  optionalDateField?: Date | undefined;

  @Field(_type => GraphQLScalars.JSONResolver, {
    nullable: true
  })
  jsonField?: Prisma.InputJsonValue | undefined;

  @Field(_type => GraphQLScalars.JSONResolver, {
    nullable: true
  })
  optionalJsonField?: Prisma.InputJsonValue | undefined;

  @Field(_type => Color, {
    nullable: true
  })
  enumField?: \\"RED\\" | \\"GREEN\\" | \\"BLUE\\" | undefined;

  @Field(_type => Color, {
    nullable: true
  })
  optionalEnumField?: \\"RED\\" | \\"GREEN\\" | \\"BLUE\\" | undefined;

  @Field(_type => [Int], {
    nullable: true
  })
  intArrayField?: number[] | undefined;

  @Field(_type => [String], {
    nullable: true
  })
  stringArrayField?: string[] | undefined;
}
"
`;

exports[`inputs when useSimpleInputs config option is set to true should properly generate input type classes for updating scalar fields in postgres schema: index 1`] = `
"export { BoolFieldUpdateOperationsInput } from \\"./BoolFieldUpdateOperationsInput\\";
export { BoolFilter } from \\"./BoolFilter\\";
export { BoolNullableFilter } from \\"./BoolNullableFilter\\";
export { BoolNullableWithAggregatesFilter } from \\"./BoolNullableWithAggregatesFilter\\";
export { BoolWithAggregatesFilter } from \\"./BoolWithAggregatesFilter\\";
export { DateTimeFieldUpdateOperationsInput } from \\"./DateTimeFieldUpdateOperationsInput\\";
export { DateTimeFilter } from \\"./DateTimeFilter\\";
export { DateTimeNullableFilter } from \\"./DateTimeNullableFilter\\";
export { DateTimeNullableWithAggregatesFilter } from \\"./DateTimeNullableWithAggregatesFilter\\";
export { DateTimeWithAggregatesFilter } from \\"./DateTimeWithAggregatesFilter\\";
export { EnumColorFieldUpdateOperationsInput } from \\"./EnumColorFieldUpdateOperationsInput\\";
export { EnumColorFilter } from \\"./EnumColorFilter\\";
export { EnumColorNullableFilter } from \\"./EnumColorNullableFilter\\";
export { EnumColorNullableWithAggregatesFilter } from \\"./EnumColorNullableWithAggregatesFilter\\";
export { EnumColorWithAggregatesFilter } from \\"./EnumColorWithAggregatesFilter\\";
export { FloatFieldUpdateOperationsInput } from \\"./FloatFieldUpdateOperationsInput\\";
export { FloatFilter } from \\"./FloatFilter\\";
export { FloatNullableFilter } from \\"./FloatNullableFilter\\";
export { FloatNullableWithAggregatesFilter } from \\"./FloatNullableWithAggregatesFilter\\";
export { FloatWithAggregatesFilter } from \\"./FloatWithAggregatesFilter\\";
export { IntFieldUpdateOperationsInput } from \\"./IntFieldUpdateOperationsInput\\";
export { IntFilter } from \\"./IntFilter\\";
export { IntNullableFilter } from \\"./IntNullableFilter\\";
export { IntNullableListFilter } from \\"./IntNullableListFilter\\";
export { IntNullableWithAggregatesFilter } from \\"./IntNullableWithAggregatesFilter\\";
export { IntWithAggregatesFilter } from \\"./IntWithAggregatesFilter\\";
export { JsonFilter } from \\"./JsonFilter\\";
export { JsonNullableFilter } from \\"./JsonNullableFilter\\";
export { JsonNullableWithAggregatesFilter } from \\"./JsonNullableWithAggregatesFilter\\";
export { JsonWithAggregatesFilter } from \\"./JsonWithAggregatesFilter\\";
export { NestedBoolFilter } from \\"./NestedBoolFilter\\";
export { NestedBoolNullableFilter } from \\"./NestedBoolNullableFilter\\";
export { NestedBoolNullableWithAggregatesFilter } from \\"./NestedBoolNullableWithAggregatesFilter\\";
export { NestedBoolWithAggregatesFilter } from \\"./NestedBoolWithAggregatesFilter\\";
export { NestedDateTimeFilter } from \\"./NestedDateTimeFilter\\";
export { NestedDateTimeNullableFilter } from \\"./NestedDateTimeNullableFilter\\";
export { NestedDateTimeNullableWithAggregatesFilter } from \\"./NestedDateTimeNullableWithAggregatesFilter\\";
export { NestedDateTimeWithAggregatesFilter } from \\"./NestedDateTimeWithAggregatesFilter\\";
export { NestedEnumColorFilter } from \\"./NestedEnumColorFilter\\";
export { NestedEnumColorNullableFilter } from \\"./NestedEnumColorNullableFilter\\";
export { NestedEnumColorNullableWithAggregatesFilter } from \\"./NestedEnumColorNullableWithAggregatesFilter\\";
export { NestedEnumColorWithAggregatesFilter } from \\"./NestedEnumColorWithAggregatesFilter\\";
export { NestedFloatFilter } from \\"./NestedFloatFilter\\";
export { NestedFloatNullableFilter } from \\"./NestedFloatNullableFilter\\";
export { NestedFloatNullableWithAggregatesFilter } from \\"./NestedFloatNullableWithAggregatesFilter\\";
export { NestedFloatWithAggregatesFilter } from \\"./NestedFloatWithAggregatesFilter\\";
export { NestedIntFilter } from \\"./NestedIntFilter\\";
export { NestedIntNullableFilter } from \\"./NestedIntNullableFilter\\";
export { NestedIntNullableWithAggregatesFilter } from \\"./NestedIntNullableWithAggregatesFilter\\";
export { NestedIntWithAggregatesFilter } from \\"./NestedIntWithAggregatesFilter\\";
export { NestedJsonFilter } from \\"./NestedJsonFilter\\";
export { NestedJsonNullableFilter } from \\"./NestedJsonNullableFilter\\";
export { NestedStringFilter } from \\"./NestedStringFilter\\";
export { NestedStringNullableFilter } from \\"./NestedStringNullableFilter\\";
export { NestedStringNullableWithAggregatesFilter } from \\"./NestedStringNullableWithAggregatesFilter\\";
export { NestedStringWithAggregatesFilter } from \\"./NestedStringWithAggregatesFilter\\";
export { NullableBoolFieldUpdateOperationsInput } from \\"./NullableBoolFieldUpdateOperationsInput\\";
export { NullableDateTimeFieldUpdateOperationsInput } from \\"./NullableDateTimeFieldUpdateOperationsInput\\";
export { NullableEnumColorFieldUpdateOperationsInput } from \\"./NullableEnumColorFieldUpdateOperationsInput\\";
export { NullableFloatFieldUpdateOperationsInput } from \\"./NullableFloatFieldUpdateOperationsInput\\";
export { NullableIntFieldUpdateOperationsInput } from \\"./NullableIntFieldUpdateOperationsInput\\";
export { NullableStringFieldUpdateOperationsInput } from \\"./NullableStringFieldUpdateOperationsInput\\";
export { SampleModelAvgOrderByAggregateInput } from \\"./SampleModelAvgOrderByAggregateInput\\";
export { SampleModelCountOrderByAggregateInput } from \\"./SampleModelCountOrderByAggregateInput\\";
export { SampleModelCreateInput } from \\"./SampleModelCreateInput\\";
export { SampleModelCreateManyInput } from \\"./SampleModelCreateManyInput\\";
export { SampleModelCreateintArrayFieldInput } from \\"./SampleModelCreateintArrayFieldInput\\";
export { SampleModelCreatestringArrayFieldInput } from \\"./SampleModelCreatestringArrayFieldInput\\";
export { SampleModelMaxOrderByAggregateInput } from \\"./SampleModelMaxOrderByAggregateInput\\";
export { SampleModelMinOrderByAggregateInput } from \\"./SampleModelMinOrderByAggregateInput\\";
export { SampleModelOrderByWithAggregationInput } from \\"./SampleModelOrderByWithAggregationInput\\";
export { SampleModelOrderByWithRelationInput } from \\"./SampleModelOrderByWithRelationInput\\";
export { SampleModelScalarWhereWithAggregatesInput } from \\"./SampleModelScalarWhereWithAggregatesInput\\";
export { SampleModelSumOrderByAggregateInput } from \\"./SampleModelSumOrderByAggregateInput\\";
export { SampleModelUpdateInput } from \\"./SampleModelUpdateInput\\";
export { SampleModelUpdateManyMutationInput } from \\"./SampleModelUpdateManyMutationInput\\";
export { SampleModelUpdateintArrayFieldInput } from \\"./SampleModelUpdateintArrayFieldInput\\";
export { SampleModelUpdatestringArrayFieldInput } from \\"./SampleModelUpdatestringArrayFieldInput\\";
export { SampleModelWhereInput } from \\"./SampleModelWhereInput\\";
export { SampleModelWhereUniqueInput } from \\"./SampleModelWhereUniqueInput\\";
export { StringFieldUpdateOperationsInput } from \\"./StringFieldUpdateOperationsInput\\";
export { StringFilter } from \\"./StringFilter\\";
export { StringNullableFilter } from \\"./StringNullableFilter\\";
export { StringNullableListFilter } from \\"./StringNullableListFilter\\";
export { StringNullableWithAggregatesFilter } from \\"./StringNullableWithAggregatesFilter\\";
export { StringWithAggregatesFilter } from \\"./StringWithAggregatesFilter\\";
"
`;

exports[`inputs when useUncheckedScalarInputs mode is enabled should properly generate input type classes for filtering models by one to many relation fields: FirstModelCreateNestedOneWithoutSecondModelsFieldInput 1`] = `
"import { Args, ArgsType, Context, Field, Float, ID, Info, InputType, Int, Mutation, ObjectType, Query, ResolveField, Resolver, Root, registerEnumType } from \\"@nestjs/graphql\\";
import * as GraphQLScalars from \\"graphql-scalars\\";
import { Prisma } from \\"../../../../helpers/prisma-client-mock\\";
import { DecimalJSScalar } from \\"../../scalars\\";
import { FirstModelCreateOrConnectWithoutSecondModelsFieldInput } from \\"../inputs/FirstModelCreateOrConnectWithoutSecondModelsFieldInput\\";
import { FirstModelUncheckedCreateWithoutSecondModelsFieldInput } from \\"../inputs/FirstModelUncheckedCreateWithoutSecondModelsFieldInput\\";
import { FirstModelWhereUniqueInput } from \\"../inputs/FirstModelWhereUniqueInput\\";

@InputType(\\"FirstModelCreateNestedOneWithoutSecondModelsFieldInput\\", {
  isAbstract: true
})
export class FirstModelCreateNestedOneWithoutSecondModelsFieldInput {
  @Field(_type => FirstModelUncheckedCreateWithoutSecondModelsFieldInput, {
    nullable: true
  })
  create?: FirstModelUncheckedCreateWithoutSecondModelsFieldInput | undefined;

  @Field(_type => FirstModelCreateOrConnectWithoutSecondModelsFieldInput, {
    nullable: true
  })
  connectOrCreate?: FirstModelCreateOrConnectWithoutSecondModelsFieldInput | undefined;

  @Field(_type => FirstModelWhereUniqueInput, {
    nullable: true
  })
  connect?: FirstModelWhereUniqueInput | undefined;
}
"
`;

exports[`inputs when useUncheckedScalarInputs mode is enabled should properly generate input type classes for filtering models by one to many relation fields: FirstModelCreateOrConnectWithoutSecondModelsFieldInput 1`] = `
"import { Args, ArgsType, Context, Field, Float, ID, Info, InputType, Int, Mutation, ObjectType, Query, ResolveField, Resolver, Root, registerEnumType } from \\"@nestjs/graphql\\";
import * as GraphQLScalars from \\"graphql-scalars\\";
import { Prisma } from \\"../../../../helpers/prisma-client-mock\\";
import { DecimalJSScalar } from \\"../../scalars\\";
import { FirstModelUncheckedCreateWithoutSecondModelsFieldInput } from \\"../inputs/FirstModelUncheckedCreateWithoutSecondModelsFieldInput\\";
import { FirstModelWhereUniqueInput } from \\"../inputs/FirstModelWhereUniqueInput\\";

@InputType(\\"FirstModelCreateOrConnectWithoutSecondModelsFieldInput\\", {
  isAbstract: true
})
export class FirstModelCreateOrConnectWithoutSecondModelsFieldInput {
  @Field(_type => FirstModelWhereUniqueInput, {
    nullable: false
  })
  where!: FirstModelWhereUniqueInput;

  @Field(_type => FirstModelUncheckedCreateWithoutSecondModelsFieldInput, {
    nullable: false
  })
  create!: FirstModelUncheckedCreateWithoutSecondModelsFieldInput;
}
"
`;

exports[`inputs when useUncheckedScalarInputs mode is enabled should properly generate input type classes for filtering models by one to many relation fields: FirstModelCreateWithoutSecondModelsFieldInputTSFile 1`] = `
"import { Args, ArgsType, Context, Field, Float, ID, Info, InputType, Int, Mutation, ObjectType, Query, ResolveField, Resolver, Root, registerEnumType } from \\"@nestjs/graphql\\";
import * as GraphQLScalars from \\"graphql-scalars\\";
import { Prisma } from \\"../../../../helpers/prisma-client-mock\\";
import { DecimalJSScalar } from \\"../../scalars\\";

@InputType(\\"FirstModelCreateWithoutSecondModelsFieldInput\\", {
  isAbstract: true
})
export class FirstModelCreateWithoutSecondModelsFieldInput {
  @Field(_type => String, {
    nullable: false
  })
  uniqueStringField!: string;

  @Field(_type => Float, {
    nullable: false
  })
  floatField!: number;
}
"
`;

exports[`inputs when useUncheckedScalarInputs mode is enabled should properly generate input type classes for filtering models by one to many relation fields: FirstModelUncheckedCreateInput 1`] = `
"import { Args, ArgsType, Context, Field, Float, ID, Info, InputType, Int, Mutation, ObjectType, Query, ResolveField, Resolver, Root, registerEnumType } from \\"@nestjs/graphql\\";
import * as GraphQLScalars from \\"graphql-scalars\\";
import { Prisma } from \\"../../../../helpers/prisma-client-mock\\";
import { DecimalJSScalar } from \\"../../scalars\\";
import { SecondModelUncheckedCreateNestedManyWithoutFirstModelFieldInput } from \\"../inputs/SecondModelUncheckedCreateNestedManyWithoutFirstModelFieldInput\\";

@InputType(\\"FirstModelUncheckedCreateInput\\", {
  isAbstract: true
})
export class FirstModelUncheckedCreateInput {
  @Field(_type => Int, {
    nullable: true
  })
  idField?: number | undefined;

  @Field(_type => String, {
    nullable: false
  })
  uniqueStringField!: string;

  @Field(_type => Float, {
    nullable: false
  })
  floatField!: number;

  @Field(_type => SecondModelUncheckedCreateNestedManyWithoutFirstModelFieldInput, {
    nullable: true
  })
  secondModelsField?: SecondModelUncheckedCreateNestedManyWithoutFirstModelFieldInput | undefined;
}
"
`;

exports[`inputs when useUncheckedScalarInputs mode is enabled should properly generate input type classes for filtering models by one to many relation fields: FirstModelUncheckedCreateWithoutSecondModelsFieldInput 1`] = `
"import { Args, ArgsType, Context, Field, Float, ID, Info, InputType, Int, Mutation, ObjectType, Query, ResolveField, Resolver, Root, registerEnumType } from \\"@nestjs/graphql\\";
import * as GraphQLScalars from \\"graphql-scalars\\";
import { Prisma } from \\"../../../../helpers/prisma-client-mock\\";
import { DecimalJSScalar } from \\"../../scalars\\";

@InputType(\\"FirstModelUncheckedCreateWithoutSecondModelsFieldInput\\", {
  isAbstract: true
})
export class FirstModelUncheckedCreateWithoutSecondModelsFieldInput {
  @Field(_type => Int, {
    nullable: true
  })
  idField?: number | undefined;

  @Field(_type => String, {
    nullable: false
  })
  uniqueStringField!: string;

  @Field(_type => Float, {
    nullable: false
  })
  floatField!: number;
}
"
`;

exports[`inputs when useUncheckedScalarInputs mode is enabled should properly generate input type classes for filtering models by one to many relation fields: FirstModelUncheckedUpdateInput 1`] = `
"import { Args, ArgsType, Context, Field, Float, ID, Info, InputType, Int, Mutation, ObjectType, Query, ResolveField, Resolver, Root, registerEnumType } from \\"@nestjs/graphql\\";
import * as GraphQLScalars from \\"graphql-scalars\\";
import { Prisma } from \\"../../../../helpers/prisma-client-mock\\";
import { DecimalJSScalar } from \\"../../scalars\\";
import { FloatFieldUpdateOperationsInput } from \\"../inputs/FloatFieldUpdateOperationsInput\\";
import { IntFieldUpdateOperationsInput } from \\"../inputs/IntFieldUpdateOperationsInput\\";
import { SecondModelUncheckedUpdateManyWithoutFirstModelFieldNestedInput } from \\"../inputs/SecondModelUncheckedUpdateManyWithoutFirstModelFieldNestedInput\\";
import { StringFieldUpdateOperationsInput } from \\"../inputs/StringFieldUpdateOperationsInput\\";

@InputType(\\"FirstModelUncheckedUpdateInput\\", {
  isAbstract: true
})
export class FirstModelUncheckedUpdateInput {
  @Field(_type => IntFieldUpdateOperationsInput, {
    nullable: true
  })
  idField?: IntFieldUpdateOperationsInput | undefined;

  @Field(_type => StringFieldUpdateOperationsInput, {
    nullable: true
  })
  uniqueStringField?: StringFieldUpdateOperationsInput | undefined;

  @Field(_type => FloatFieldUpdateOperationsInput, {
    nullable: true
  })
  floatField?: FloatFieldUpdateOperationsInput | undefined;

  @Field(_type => SecondModelUncheckedUpdateManyWithoutFirstModelFieldNestedInput, {
    nullable: true
  })
  secondModelsField?: SecondModelUncheckedUpdateManyWithoutFirstModelFieldNestedInput | undefined;
}
"
`;

exports[`inputs when useUncheckedScalarInputs mode is enabled should properly generate input type classes for filtering models by one to many relation fields: FirstModelUncheckedUpdateManyInput 1`] = `
"import { Args, ArgsType, Context, Field, Float, ID, Info, InputType, Int, Mutation, ObjectType, Query, ResolveField, Resolver, Root, registerEnumType } from \\"@nestjs/graphql\\";
import * as GraphQLScalars from \\"graphql-scalars\\";
import { Prisma } from \\"../../../../helpers/prisma-client-mock\\";
import { DecimalJSScalar } from \\"../../scalars\\";
import { FloatFieldUpdateOperationsInput } from \\"../inputs/FloatFieldUpdateOperationsInput\\";
import { IntFieldUpdateOperationsInput } from \\"../inputs/IntFieldUpdateOperationsInput\\";
import { StringFieldUpdateOperationsInput } from \\"../inputs/StringFieldUpdateOperationsInput\\";

@InputType(\\"FirstModelUncheckedUpdateManyInput\\", {
  isAbstract: true
})
export class FirstModelUncheckedUpdateManyInput {
  @Field(_type => IntFieldUpdateOperationsInput, {
    nullable: true
  })
  idField?: IntFieldUpdateOperationsInput | undefined;

  @Field(_type => StringFieldUpdateOperationsInput, {
    nullable: true
  })
  uniqueStringField?: StringFieldUpdateOperationsInput | undefined;

  @Field(_type => FloatFieldUpdateOperationsInput, {
    nullable: true
  })
  floatField?: FloatFieldUpdateOperationsInput | undefined;
}
"
`;

exports[`inputs when useUncheckedScalarInputs mode is enabled should properly generate input type classes for filtering models by one to many relation fields: FirstModelUncheckedUpdateWithoutSecondModelsFieldInput 1`] = `
"import { Args, ArgsType, Context, Field, Float, ID, Info, InputType, Int, Mutation, ObjectType, Query, ResolveField, Resolver, Root, registerEnumType } from \\"@nestjs/graphql\\";
import * as GraphQLScalars from \\"graphql-scalars\\";
import { Prisma } from \\"../../../../helpers/prisma-client-mock\\";
import { DecimalJSScalar } from \\"../../scalars\\";
import { FloatFieldUpdateOperationsInput } from \\"../inputs/FloatFieldUpdateOperationsInput\\";
import { IntFieldUpdateOperationsInput } from \\"../inputs/IntFieldUpdateOperationsInput\\";
import { StringFieldUpdateOperationsInput } from \\"../inputs/StringFieldUpdateOperationsInput\\";

@InputType(\\"FirstModelUncheckedUpdateWithoutSecondModelsFieldInput\\", {
  isAbstract: true
})
export class FirstModelUncheckedUpdateWithoutSecondModelsFieldInput {
  @Field(_type => IntFieldUpdateOperationsInput, {
    nullable: true
  })
  idField?: IntFieldUpdateOperationsInput | undefined;

  @Field(_type => StringFieldUpdateOperationsInput, {
    nullable: true
  })
  uniqueStringField?: StringFieldUpdateOperationsInput | undefined;

  @Field(_type => FloatFieldUpdateOperationsInput, {
    nullable: true
  })
  floatField?: FloatFieldUpdateOperationsInput | undefined;
}
"
`;

exports[`inputs when useUncheckedScalarInputs mode is enabled should properly generate input type classes for filtering models by one to many relation fields: FirstModelUpdateOneRequiredWithoutSecondModelsFieldNestedInput 1`] = `
"import { Args, ArgsType, Context, Field, Float, ID, Info, InputType, Int, Mutation, ObjectType, Query, ResolveField, Resolver, Root, registerEnumType } from \\"@nestjs/graphql\\";
import * as GraphQLScalars from \\"graphql-scalars\\";
import { Prisma } from \\"../../../../helpers/prisma-client-mock\\";
import { DecimalJSScalar } from \\"../../scalars\\";
import { FirstModelCreateOrConnectWithoutSecondModelsFieldInput } from \\"../inputs/FirstModelCreateOrConnectWithoutSecondModelsFieldInput\\";
import { FirstModelUncheckedCreateWithoutSecondModelsFieldInput } from \\"../inputs/FirstModelUncheckedCreateWithoutSecondModelsFieldInput\\";
import { FirstModelUncheckedUpdateWithoutSecondModelsFieldInput } from \\"../inputs/FirstModelUncheckedUpdateWithoutSecondModelsFieldInput\\";
import { FirstModelUpsertWithoutSecondModelsFieldInput } from \\"../inputs/FirstModelUpsertWithoutSecondModelsFieldInput\\";
import { FirstModelWhereUniqueInput } from \\"../inputs/FirstModelWhereUniqueInput\\";

@InputType(\\"FirstModelUpdateOneRequiredWithoutSecondModelsFieldNestedInput\\", {
  isAbstract: true
})
export class FirstModelUpdateOneRequiredWithoutSecondModelsFieldNestedInput {
  @Field(_type => FirstModelUncheckedCreateWithoutSecondModelsFieldInput, {
    nullable: true
  })
  create?: FirstModelUncheckedCreateWithoutSecondModelsFieldInput | undefined;

  @Field(_type => FirstModelCreateOrConnectWithoutSecondModelsFieldInput, {
    nullable: true
  })
  connectOrCreate?: FirstModelCreateOrConnectWithoutSecondModelsFieldInput | undefined;

  @Field(_type => FirstModelUpsertWithoutSecondModelsFieldInput, {
    nullable: true
  })
  upsert?: FirstModelUpsertWithoutSecondModelsFieldInput | undefined;

  @Field(_type => FirstModelWhereUniqueInput, {
    nullable: true
  })
  connect?: FirstModelWhereUniqueInput | undefined;

  @Field(_type => FirstModelUncheckedUpdateWithoutSecondModelsFieldInput, {
    nullable: true
  })
  update?: FirstModelUncheckedUpdateWithoutSecondModelsFieldInput | undefined;
}
"
`;

exports[`inputs when useUncheckedScalarInputs mode is enabled should properly generate input type classes for filtering models by one to many relation fields: FirstModelUpdateWithoutSecondModelsFieldInputTSFile 1`] = `
"import { Args, ArgsType, Context, Field, Float, ID, Info, InputType, Int, Mutation, ObjectType, Query, ResolveField, Resolver, Root, registerEnumType } from \\"@nestjs/graphql\\";
import * as GraphQLScalars from \\"graphql-scalars\\";
import { Prisma } from \\"../../../../helpers/prisma-client-mock\\";
import { DecimalJSScalar } from \\"../../scalars\\";
import { FloatFieldUpdateOperationsInput } from \\"../inputs/FloatFieldUpdateOperationsInput\\";
import { StringFieldUpdateOperationsInput } from \\"../inputs/StringFieldUpdateOperationsInput\\";

@InputType(\\"FirstModelUpdateWithoutSecondModelsFieldInput\\", {
  isAbstract: true
})
export class FirstModelUpdateWithoutSecondModelsFieldInput {
  @Field(_type => StringFieldUpdateOperationsInput, {
    nullable: true
  })
  uniqueStringField?: StringFieldUpdateOperationsInput | undefined;

  @Field(_type => FloatFieldUpdateOperationsInput, {
    nullable: true
  })
  floatField?: FloatFieldUpdateOperationsInput | undefined;
}
"
`;

exports[`inputs when useUncheckedScalarInputs mode is enabled should properly generate input type classes for filtering models by one to many relation fields: FirstModelUpsertWithoutSecondModelsFieldInputTSFile 1`] = `
"import { Args, ArgsType, Context, Field, Float, ID, Info, InputType, Int, Mutation, ObjectType, Query, ResolveField, Resolver, Root, registerEnumType } from \\"@nestjs/graphql\\";
import * as GraphQLScalars from \\"graphql-scalars\\";
import { Prisma } from \\"../../../../helpers/prisma-client-mock\\";
import { DecimalJSScalar } from \\"../../scalars\\";
import { FirstModelUncheckedCreateWithoutSecondModelsFieldInput } from \\"../inputs/FirstModelUncheckedCreateWithoutSecondModelsFieldInput\\";
import { FirstModelUncheckedUpdateWithoutSecondModelsFieldInput } from \\"../inputs/FirstModelUncheckedUpdateWithoutSecondModelsFieldInput\\";

@InputType(\\"FirstModelUpsertWithoutSecondModelsFieldInput\\", {
  isAbstract: true
})
export class FirstModelUpsertWithoutSecondModelsFieldInput {
  @Field(_type => FirstModelUncheckedUpdateWithoutSecondModelsFieldInput, {
    nullable: false
  })
  update!: FirstModelUncheckedUpdateWithoutSecondModelsFieldInput;

  @Field(_type => FirstModelUncheckedCreateWithoutSecondModelsFieldInput, {
    nullable: false
  })
  create!: FirstModelUncheckedCreateWithoutSecondModelsFieldInput;
}
"
`;

exports[`inputs when useUncheckedScalarInputs mode is enabled should properly generate input type classes for filtering models by one to many relation fields: index 1`] = `
"export { FirstModelAvgOrderByAggregateInput } from \\"./FirstModelAvgOrderByAggregateInput\\";
export { FirstModelCountOrderByAggregateInput } from \\"./FirstModelCountOrderByAggregateInput\\";
export { FirstModelCreateInput } from \\"./FirstModelCreateInput\\";
export { FirstModelCreateManyInput } from \\"./FirstModelCreateManyInput\\";
export { FirstModelCreateNestedOneWithoutSecondModelsFieldInput } from \\"./FirstModelCreateNestedOneWithoutSecondModelsFieldInput\\";
export { FirstModelCreateOrConnectWithoutSecondModelsFieldInput } from \\"./FirstModelCreateOrConnectWithoutSecondModelsFieldInput\\";
export { FirstModelCreateWithoutSecondModelsFieldInput } from \\"./FirstModelCreateWithoutSecondModelsFieldInput\\";
export { FirstModelMaxOrderByAggregateInput } from \\"./FirstModelMaxOrderByAggregateInput\\";
export { FirstModelMinOrderByAggregateInput } from \\"./FirstModelMinOrderByAggregateInput\\";
export { FirstModelOrderByWithAggregationInput } from \\"./FirstModelOrderByWithAggregationInput\\";
export { FirstModelOrderByWithRelationInput } from \\"./FirstModelOrderByWithRelationInput\\";
export { FirstModelRelationFilter } from \\"./FirstModelRelationFilter\\";
export { FirstModelScalarWhereWithAggregatesInput } from \\"./FirstModelScalarWhereWithAggregatesInput\\";
export { FirstModelSumOrderByAggregateInput } from \\"./FirstModelSumOrderByAggregateInput\\";
export { FirstModelUncheckedCreateInput } from \\"./FirstModelUncheckedCreateInput\\";
export { FirstModelUncheckedCreateWithoutSecondModelsFieldInput } from \\"./FirstModelUncheckedCreateWithoutSecondModelsFieldInput\\";
export { FirstModelUncheckedUpdateInput } from \\"./FirstModelUncheckedUpdateInput\\";
export { FirstModelUncheckedUpdateManyInput } from \\"./FirstModelUncheckedUpdateManyInput\\";
export { FirstModelUncheckedUpdateWithoutSecondModelsFieldInput } from \\"./FirstModelUncheckedUpdateWithoutSecondModelsFieldInput\\";
export { FirstModelUpdateInput } from \\"./FirstModelUpdateInput\\";
export { FirstModelUpdateManyMutationInput } from \\"./FirstModelUpdateManyMutationInput\\";
export { FirstModelUpdateOneRequiredWithoutSecondModelsFieldNestedInput } from \\"./FirstModelUpdateOneRequiredWithoutSecondModelsFieldNestedInput\\";
export { FirstModelUpdateWithoutSecondModelsFieldInput } from \\"./FirstModelUpdateWithoutSecondModelsFieldInput\\";
export { FirstModelUpsertWithoutSecondModelsFieldInput } from \\"./FirstModelUpsertWithoutSecondModelsFieldInput\\";
export { FirstModelWhereInput } from \\"./FirstModelWhereInput\\";
export { FirstModelWhereUniqueInput } from \\"./FirstModelWhereUniqueInput\\";
export { FloatFieldUpdateOperationsInput } from \\"./FloatFieldUpdateOperationsInput\\";
export { FloatFilter } from \\"./FloatFilter\\";
export { FloatWithAggregatesFilter } from \\"./FloatWithAggregatesFilter\\";
export { IntFieldUpdateOperationsInput } from \\"./IntFieldUpdateOperationsInput\\";
export { IntFilter } from \\"./IntFilter\\";
export { IntWithAggregatesFilter } from \\"./IntWithAggregatesFilter\\";
export { NestedFloatFilter } from \\"./NestedFloatFilter\\";
export { NestedFloatWithAggregatesFilter } from \\"./NestedFloatWithAggregatesFilter\\";
export { NestedIntFilter } from \\"./NestedIntFilter\\";
export { NestedIntWithAggregatesFilter } from \\"./NestedIntWithAggregatesFilter\\";
export { NestedStringFilter } from \\"./NestedStringFilter\\";
export { NestedStringWithAggregatesFilter } from \\"./NestedStringWithAggregatesFilter\\";
export { SecondModelAvgOrderByAggregateInput } from \\"./SecondModelAvgOrderByAggregateInput\\";
export { SecondModelCountOrderByAggregateInput } from \\"./SecondModelCountOrderByAggregateInput\\";
export { SecondModelCreateInput } from \\"./SecondModelCreateInput\\";
export { SecondModelCreateManyFirstModelFieldInput } from \\"./SecondModelCreateManyFirstModelFieldInput\\";
export { SecondModelCreateManyFirstModelFieldInputEnvelope } from \\"./SecondModelCreateManyFirstModelFieldInputEnvelope\\";
export { SecondModelCreateManyInput } from \\"./SecondModelCreateManyInput\\";
export { SecondModelCreateNestedManyWithoutFirstModelFieldInput } from \\"./SecondModelCreateNestedManyWithoutFirstModelFieldInput\\";
export { SecondModelCreateOrConnectWithoutFirstModelFieldInput } from \\"./SecondModelCreateOrConnectWithoutFirstModelFieldInput\\";
export { SecondModelCreateWithoutFirstModelFieldInput } from \\"./SecondModelCreateWithoutFirstModelFieldInput\\";
export { SecondModelListRelationFilter } from \\"./SecondModelListRelationFilter\\";
export { SecondModelMaxOrderByAggregateInput } from \\"./SecondModelMaxOrderByAggregateInput\\";
export { SecondModelMinOrderByAggregateInput } from \\"./SecondModelMinOrderByAggregateInput\\";
export { SecondModelOrderByRelationAggregateInput } from \\"./SecondModelOrderByRelationAggregateInput\\";
export { SecondModelOrderByWithAggregationInput } from \\"./SecondModelOrderByWithAggregationInput\\";
export { SecondModelOrderByWithRelationInput } from \\"./SecondModelOrderByWithRelationInput\\";
export { SecondModelScalarWhereInput } from \\"./SecondModelScalarWhereInput\\";
export { SecondModelScalarWhereWithAggregatesInput } from \\"./SecondModelScalarWhereWithAggregatesInput\\";
export { SecondModelSumOrderByAggregateInput } from \\"./SecondModelSumOrderByAggregateInput\\";
export { SecondModelUncheckedCreateInput } from \\"./SecondModelUncheckedCreateInput\\";
export { SecondModelUncheckedCreateNestedManyWithoutFirstModelFieldInput } from \\"./SecondModelUncheckedCreateNestedManyWithoutFirstModelFieldInput\\";
export { SecondModelUncheckedCreateWithoutFirstModelFieldInput } from \\"./SecondModelUncheckedCreateWithoutFirstModelFieldInput\\";
export { SecondModelUncheckedUpdateInput } from \\"./SecondModelUncheckedUpdateInput\\";
export { SecondModelUncheckedUpdateManyInput } from \\"./SecondModelUncheckedUpdateManyInput\\";
export { SecondModelUncheckedUpdateManyWithoutFirstModelFieldNestedInput } from \\"./SecondModelUncheckedUpdateManyWithoutFirstModelFieldNestedInput\\";
export { SecondModelUncheckedUpdateManyWithoutSecondModelsFieldInput } from \\"./SecondModelUncheckedUpdateManyWithoutSecondModelsFieldInput\\";
export { SecondModelUncheckedUpdateWithoutFirstModelFieldInput } from \\"./SecondModelUncheckedUpdateWithoutFirstModelFieldInput\\";
export { SecondModelUpdateInput } from \\"./SecondModelUpdateInput\\";
export { SecondModelUpdateManyMutationInput } from \\"./SecondModelUpdateManyMutationInput\\";
export { SecondModelUpdateManyWithWhereWithoutFirstModelFieldInput } from \\"./SecondModelUpdateManyWithWhereWithoutFirstModelFieldInput\\";
export { SecondModelUpdateManyWithoutFirstModelFieldNestedInput } from \\"./SecondModelUpdateManyWithoutFirstModelFieldNestedInput\\";
export { SecondModelUpdateWithWhereUniqueWithoutFirstModelFieldInput } from \\"./SecondModelUpdateWithWhereUniqueWithoutFirstModelFieldInput\\";
export { SecondModelUpdateWithoutFirstModelFieldInput } from \\"./SecondModelUpdateWithoutFirstModelFieldInput\\";
export { SecondModelUpsertWithWhereUniqueWithoutFirstModelFieldInput } from \\"./SecondModelUpsertWithWhereUniqueWithoutFirstModelFieldInput\\";
export { SecondModelWhereInput } from \\"./SecondModelWhereInput\\";
export { SecondModelWhereUniqueInput } from \\"./SecondModelWhereUniqueInput\\";
export { StringFieldUpdateOperationsInput } from \\"./StringFieldUpdateOperationsInput\\";
export { StringFilter } from \\"./StringFilter\\";
export { StringWithAggregatesFilter } from \\"./StringWithAggregatesFilter\\";
"
`;
